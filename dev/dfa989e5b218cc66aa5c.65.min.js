webpackJsonp([65],{

/***/ 647:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(815);

var duoxuanxlk = function (_Interstellar$moduleB) {
    _inherits(duoxuanxlk, _Interstellar$moduleB);

    function duoxuanxlk(app, dom, value, addMode) {
        _classCallCheck(this, duoxuanxlk);

        var _this = _possibleConstructorReturn(this, (duoxuanxlk.__proto__ || Object.getPrototypeOf(duoxuanxlk)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(817);
        return _this;
    }

    _createClass(duoxuanxlk, [{
        key: 'complete',
        value: function complete() {
            this.finaldata = [];
            this.maxshownum = this.nowParam.maxshownum == undefined ? 10 : this.nowParam.maxshownum;
            this.linehigh = this.nowParam.linehigh == undefined ? 40 : this.nowParam.linehigh;
            this.datatype = this.nowParam.datatype == undefined ? 'obj' : this.nowParam.datatype;
            this.input = this.nowParam.input == undefined ? false : this.nowParam.input;
            if (!this.input) {
                this.dom.find('.showname').attr('disabled', 'disabled');
            }
            this.render();
        }
    }, {
        key: 'render',
        value: function render() {
            var that = this;
            var data = this.nowParam;
            that.dom.find('.showname').attr('placeholder', data.showname);
            that.renderHtml(data.data);
            if (data.data.length > that.maxshownum) {
                that.dom.find('.scroll').css({ height: that.linehigh * that.maxshownum });
                that.initscrollmenu();
            }
            that.dom.find('.showname').on('focus', function () {
                that.dom.find('.showname').attr('placeholder', '');
            });
            that.dom.find('.showname').on('blur', function () {
                that.dom.find('.showname').attr('placeholder', data.showname);
            });
            that.dom.find('.showbox').on('click', function () {
                if (that.dom.find('.downbox').hasClass('hide')) {
                    that.dom.find('.downbox').removeClass('hide');
                    that.dom.find('.mask').removeClass('hide');
                    that.initscrollmenu();
                } else {
                    that.dom.find('.downbox').addClass('hide');
                    that.dom.find('.mask').addClass('hide');
                }
            });
            that.dom.find(".mask").on('click', function () {
                that.dom.find('.downbox').addClass('hide');
                that.dom.find('.mask').addClass('hide');
                that.dom.find('.loading_xlk').addClass('hide');
            });
            that.dom.find('.showbox').on('mouseover', function () {
                var dom = ES.selctorDoc(this);
                var data = dom.find('.showname').val();
                if (data) {
                    that.dom.find('.icon-shanchutishiicon').show();
                    that.dom.find('.icon-icon-test3').hide();
                }
            });
            this.dom.find('.showbox').on('mouseout', function () {
                that.dom.find('.icon-shanchutishiicon').hide();
                that.dom.find('.icon-icon-test3').show();
            });
            this.dom.find('.showbox .icon-shanchutishiicon').on('click', function (e) {
                e.stopPropagation();
                that.dom.find('.showbox input').attr('placeholder', data.showname);
                that.dom.find('.showbox input').attr('title', '');
                that.dom.find('.showbox input').val('');
                that.dom.find('.choose').removeClass('choose');
                that.event._dispatch('duoxuanxlk.clear');
            });
            this.dom.find('.showname').on('input', function () {
                that.event._dispatch('duoxuan.input', { data: ES.selctorDoc(this).val(), classname: ES.selctorDoc(this).parent().parent().parent().attr('class') });
            });
        }
    }, {
        key: 'renderHtml',
        value: function renderHtml(value) {
            var that = this;
            var data = this.nowParam;
            that.dom.find('.downbox ul').html('');
            if (that.datatype == 'obj') {
                value.forEach(function (val, idx) {
                    that.dom.find('.downbox ul').append('<li id=' + val.idx + '>\n' + '            <i class="check-box"></i>\n' + '            <span class="itemcontent" title="' + val.val + '">' + val.val + '</span>\n' + '        </li>');
                });
            } else {
                value.forEach(function (val, idx) {
                    that.dom.find('.downbox ul').append('<li id=' + val + '>\n' + '            <i class="check-box"></i>\n' + '            <span class="itemcontent" title="' + val + '">' + val + '</span>\n' + '        </li>');
                });
            }
            if (value.length > that.maxshownum) {
                that.dom.find('.scroll').css({ height: that.linehigh * that.maxshownum });
                that.initscrollmenu();
            }
            that.bindevent();
        }
    }, {
        key: 'bindevent',
        value: function bindevent() {
            var that = this;
            that.dom.find('.downbox li i').off('click');
            that.dom.find('.downbox li i').on('click', function () {
                var choosedhtml = '';
                that.finaldata = [];
                var obj = {};
                var strings = '';
                if (ES.selctorDoc(this).hasClass('choose')) {
                    ES.selctorDoc(this).removeClass('choose');
                } else {
                    ES.selctorDoc(this).addClass('choose');
                }
                if (that.dom.find('.downbox .choose').dom) {
                    that.dom.find('.downbox .choose').dom.forEach(function (val, idx) {
                        choosedhtml += val.parent().find('span').html() + ' ';
                        obj.val = val.parent().find('span').html();
                        obj.idx = val.parent().find('span').parent().attr('id');
                        that.finaldata.push(obj);
                        if (idx == that.dom.find('.downbox .choose').dom.length - 1) {
                            strings += obj.idx;
                        } else {
                            strings += obj.idx + ',';
                        }
                    });
                }
                that.dom.find('.showname').val(choosedhtml);
                that.dom.find('.showbox').attr('title', choosedhtml);
                that.event._dispatch('duoxuan.select', { data: that.finaldata, name: strings });
            });
        }
    }, {
        key: 'reset',
        value: function reset() {
            var that = this;
            that.dom.find('.showbox input').attr('placeholder', this.nowParam.showname);
            that.dom.find('.showbox input').attr('title', '');
            that.dom.find('.showbox input').val('');
            that.dom.find('.choose').removeClass('choose');
        }
    }, {
        key: 'setData',
        value: function setData(value) {
            var that = this;
            var data = this.nowParam;
            that.dom.find('.downbox ul').html('');
            if (that.datatype == 'obj') {
                value.forEach(function (val, idx) {
                    that.dom.find('.downbox ul').append('<li id=' + val.idx + '>\n' + '            <i class="check-box"></i>\n' + '            <span>' + val.val + '</span>\n' + '        </li>');
                });
            } else {
                value.forEach(function (val, idx) {
                    that.dom.find('.downbox ul').append('<li id=' + val + '>\n' + '            <i class="check-box"></i>\n' + '            <span>' + val + '</span>\n' + '        </li>');
                });
            }
            if (value.length > that.maxshownum) {
                that.dom.find('.scroll').css({ height: that.linehigh * that.maxshownum });
                that.initscrollmenu();
            }
            that.bindevent();
        }
    }, {
        key: 'initscrollmenu',
        value: function initscrollmenu() {
            if (this.myScroll1) {
                this.myScroll1.refresh();
                return;
            }

            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            this.dom.find('.scroll').attr('id', rid);
            this.myScroll1 = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }, {
        key: 'resize',
        value: function resize() {}
    }, {
        key: 'loading',
        value: function loading(bool) {
            if (bool) {
                this.dom.find('.downul').html('');
                this.dom.find('.scroll').css({ height: '50px' });
                this.initscrollmenu();
                this.dom.find('.loading_xlk').removeClass('hide');
            } else {
                this.dom.find('.scroll').css({ height: 'unset' });
                this.dom.find('.loading_xlk').addClass('hide');
            }
        }
    }]);

    return duoxuanxlk;
}(Interstellar.moduleBase);

module.exports = duoxuanxlk;

/***/ }),

/***/ 815:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(816);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./duoxuanxlk.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./duoxuanxlk.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 816:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".duoxuanxlk {\n  width: 100%;\n  position: relative;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  color: #333;\n}\n.duoxuanxlk .showbox {\n  height: 100%;\n  width: 100%;\n  background: #fff;\n  cursor: pointer;\n  color: #CCCCCC;\n  border-radius: 7px;\n}\n.duoxuanxlk .showbox i {\n  position: absolute;\n  right: 10px;\n  top: 0;\n  font-size: 12px;\n  transform: rotate(-180deg);\n}\n.duoxuanxlk .showbox .showname {\n  vertical-align: top;\n  background: #fff;\n  border: none;\n  height: 100%;\n  width: 100px;\n}\n.duoxuanxlk .downbox {\n  width: 100%;\n  position: absolute;\n  z-index: 1010;\n  background: #fff;\n  border: 1px solid #e6e2e2;\n  border-radius: 4px;\n  min-height: 50px;\n}\n.duoxuanxlk .downbox .scroll {\n  overflow: hidden;\n  position: relative;\n}\n.duoxuanxlk .downbox ul {\n  position: relative;\n}\n.duoxuanxlk .downbox li {\n  padding: 0 10px;\n  height: 40px;\n  line-height: 40px;\n  position: relative;\n}\n.duoxuanxlk .downbox li:hover {\n  background: #4c9fa9;\n  color: #fff;\n}\n.duoxuanxlk .downbox li span {\n  margin-left: 20px;\n  width: 80%;\n  overflow: hidden;\n  white-space: nowrap;\n}\n.duoxuanxlk .downbox li i {\n  position: absolute;\n  top: 13px;\n}\n.duoxuanxlk .loading_xlk {\n  background: url(/images/loading1.gif) no-repeat 35px -28px;\n  height: 50px;\n  width: 100%;\n  top: 0px;\n  z-index: 2000;\n  position: absolute;\n}\n.duoxuanxlk .mask {\n  width: 5000px;\n  height: 5000px;\n  position: absolute;\n  z-index: 1005;\n  top: -1500px;\n  left: -1500px;\n  clear: both;\n}\n", ""]);

// exports


/***/ }),

/***/ 817:
/***/ (function(module, exports) {

module.exports = "<div class=duoxuanxlk> <div class=showbox> &nbsp;&nbsp; <input type=text class=showname /> <i class=\"iconfont icon-icon-test3\"></i> <i class=\"iconfont icon-shanchutishiicon\" style=display:none></i> </div> <div class=\"downbox hide\"> <div class=scroll> <ul class=downul> </ul> <div class=\"loading_xlk hide\"></div> </div> </div> <div class=\"mask hide\"></div> </div> ";

/***/ })

});
//# sourceMappingURL=dfa989e5b218cc66aa5c.65.min.js.map