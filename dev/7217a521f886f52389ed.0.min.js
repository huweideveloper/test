webpackJsonp([0,52],{

/***/ 180:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(931);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./createprotwo.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./createprotwo.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 181:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlDict = {
  querycomponent: '/formComponent/search',
  getcomponentdetail: '/formComponent/read',
  editproject: '/project/edit',
  updateproject: '/project/basic/update',
  projectdetail: '/project/anno/read',
  getmodality: '/series/modality/all',
  isrepeat: '/project/findByName',
  project_basic_read: '/project/basic/read',
  dict_root_child: '/dict/child/query',
  series_count: '/project/series/count',
  field_query: '/sys/transfer'

};
var api = {
  querycomponent: function querycomponent(value) {
    return this.HttpRequest.POST(urlDict.querycomponent, value);
  },
  getcomponentdetail: function getcomponentdetail(value) {
    return this.HttpRequest.POST(urlDict.getcomponentdetail, value);
  },
  editproject: function editproject(value) {
    return this.HttpRequest.POST(urlDict.editproject, value);
  },
  projectdetail: function projectdetail(value) {
    return this.HttpRequest.POST(urlDict.projectdetail, value);
  },
  getmodality: function getmodality(value) {
    return this.HttpRequest.POST(urlDict.getmodality, value);
  },
  isrepeat: function isrepeat(value) {
    return this.HttpRequest.POST(urlDict.isrepeat, value);
  },
  project_basic_read: function project_basic_read(value) {
    return this.HttpRequest.POST(urlDict.project_basic_read, value);
  },
  dict_root_child: function dict_root_child(value) {
    return this.HttpRequest.POST(urlDict.dict_root_child, value);
  },
  series_count: function series_count(value) {
    return this.HttpRequest.POST(urlDict.series_count, value);
  },
  field_query: function field_query(value) {
    return this.HttpRequest.POST(urlDict.field_query, value);
  }
};
module.exports = api;

/***/ }),

/***/ 182:
/***/ (function(module, exports) {

module.exports = "<div class=createprotwo> <div class=scroll> <div class=bigtitle>标注需求</div> <p class=title>第二步：标注信息</p> <a class=\"save biaozhubtn\">保存</a> <div class=\"inputLine tagarea\" redlabel=xlk> <span><label class=redstar>*</label>项目类型：</span> <div class=inputLine redlabel=xlk> <div class=sicknessType check=empty></div> </div> <div class=inputLine redlabel=xlk> <div class=projectFunction check=empty></div> </div> </div> <div class=\"inputLine half\" redlabel=xlk> <span><label class=redstar>*</label>样本类型：</span> <div class=yblx check=empty></div> </div> <div class=\"inputLine half ml150\" redlabel=xlk> <span><label class=redstar>*</label>范围条件：</span> <div class=rangeConditions check=empty></div> </div> <br> <div class=\"inputLine half\" redlabel=xlk> <span><label class=redstar>*</label>数据类型：</span> <div class=seriesImgFileType check=empty></div> </div> <div class=\"groupSet half ml150\"></div> <div class=\"widthlevelset inputLine\" redlabel=xlk> <p> <i class=check-box></i> <span>是否设置默认窗宽窗位</span> </p> <div class=\"windowId hide\" check=empty></div> </div> <div class=showReport> <i class=check-box></i> <span>是否需要展示报告</span> </div> <div class=largeFigure> <i class=check-box></i> <span>是否使用超大图</span> </div> <div class=isYayAttributes> <i class=check-box></i> <span>是否需要阴阳性</span> <div class=\"hide choosearea\"> <span>阳性无需填写征象</span> <div class=yang></div><br> <span>阴性无需填写征象</span> <div class=yin></div> </div> </div> <div class=\"category inputLine\" check=empty title=科室类别 redlabel=last> <label class=redstar>*</label> <span class=last>科室类别：</span> <div class=department data-id=1> <i class=radio-box></i> <span>放射科</span> </div> <div class=department data-id=2> <i class=radio-box></i> <span>病理科</span> </div> <div class=department data-id=0> <i class=radio-box></i> <span>其它</span> </div> <div class=department data-id=3> <i class=radio-box></i> <span>测试</span> </div> </div> <div class=discurdarea> <a class=\"biaozhubtn discardreason\">添加废片原因</a> <a class=\"viewreason hide\">查看废片原因</a> </div> <span class=yxtitle>影像标注设置</span> <i class=\"iconfont icon-tianjia bigadd\" title=\"\"></i> <div class=multi> <ul class=multiitem> </ul> <a class=\"biaozhubtn alldata\">添加整体病症标注组件</a> <a class=\"biaozhubtn showalldata hide\">查看已添加整体病症标注组件</a> <a class=\"biaozhubtn export\">导出标注组件</a> </div> </div> </div> ";

/***/ }),

/***/ 183:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//这边基本上引入需要使用的资源less，api，需要使用的模块等等。

var createprotwo = function (_Interstellar$modelBa) {
    _inherits(createprotwo, _Interstellar$modelBa);

    function createprotwo(app) {
        _classCallCheck(this, createprotwo);

        var _this = _possibleConstructorReturn(this, (createprotwo.__proto__ || Object.getPrototypeOf(createprotwo)).call(this, app));

        _this.modality = {};
        _this.ytjcomplist = {};
        _this.componentdata = {};
        _this.apiData = { modality: '', seriesList: [], annotationItemList: [], imageAnnotationList: [], cacheNumber: '', discurdIdList: [], studyAnno: false, category: 0, yayAttributes: 2 };
        return _this;
    }

    return createprotwo;
}(Interstellar.modelBase);

module.exports = createprotwo;

/***/ }),

/***/ 638:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(737);
// var html = require('./tpl.html')

var index = function (_Interstellar$moduleB) {
  _inherits(index, _Interstellar$moduleB);

  function index(app, dom, value, addMode) {
    _classCallCheck(this, index);

    var _this = _possibleConstructorReturn(this, (index.__proto__ || Object.getPrototypeOf(index)).call(this, app, dom, value, addMode));

    _this.html = __webpack_require__(739);
    _this.name = "dropDown";
    return _this;
  }

  _createClass(index, [{
    key: 'complete',
    value: function complete() {
      this.dom.find('.drop-down').addClass(this.nowParam.className);
      var cw = ES.selctorDoc(window).box().clientWidth;
      var ch = ES.selctorDoc(window).box().clientHeight;
      this.dom.find('.mask').css({ 'width': cw, 'height': ch, 'left': 0, 'top': 0 });
      this.datatype = this.nowParam.datatype ? this.nowParam.datatype : 'obj';
      this.input = this.nowParam.input == undefined ? false : this.nowParam.input;
      this.maxshownum = this.nowParam.maxshownum == undefined ? 10 : this.nowParam.maxshownum;
      this.render();
    }
  }, {
    key: 'render',
    value: function render(value) {
      if (!value) {
        value = this.nowParam;
      }
      var that = this;
      that.firstSelect = value.firstSelect ? value.firstSelect : value.data[0];
      this.dom.find('.selected1 input').attr('data-idx', that.firstSelect.idx);
      this.dom.find('.selected1 input').attr('placeholder', that.firstSelect.val);
      that.renderHtml(value.data);
      that.bindEvent();
      that.event._dispatch('dropDown.done');
    }
  }, {
    key: 'renderHtml',
    value: function renderHtml(value) {
      // console.log('==========value',value,this.datatype)
      var that = this;
      that.data = value;
      var strHtml = '';
      if (this.datatype == 'obj') {
        for (var i = 0; i < value.length; i++) {
          if (that.firstSelect == value[i]) {
            strHtml += '<li class="option select" title="' + value[i].val + '" data-idx=' + value[i].idx + '' + ' props=' + (value[i].props ? value[i].props : "") + '>' + value[i].val + '</li>';
          } else {
            strHtml += '<li class="option" title="' + value[i].val + '" data-idx=' + value[i].idx + '' + ' props=' + (value[i].props ? value[i].props : "") + '>' + value[i].val + '</li>';
          }
        }
      } else {
        for (var _i = 0; _i < value.length; _i++) {
          if (that.firstSelect == value[_i]) {
            strHtml += '<li class="option select" title="' + value[_i] + '" data-idx=' + value[_i] + '>' + value[_i] + '</li>';
          } else {
            strHtml += '<li class="option" title="' + value[_i] + '" data-idx=' + value[_i] + '>' + value[_i] + '</li>';
          }
        }
      }
      this.dom.find('._dropdown1 .selectbox').html(strHtml);
      this.dom.find('.option').on('click', function () {
        that.dom.find('.option').removeClass('select');
        ES.selctorDoc(this).addClass('select');
        that.dom.find('.selected1 input').val(ES.selctorDoc(this).html());
        that.dom.find('.selected1 input').attr('data-idx', ES.selctorDoc(this).attr('data-idx'));
        that.dom.find('.selected1 input').attr('props', ES.selctorDoc(this).attr('props'));
        that.dom.find('._dropdown1').hide();
        that.dom.find('.icon').removeClass('drop');
        that.event._dispatch('option.click', {
          val: that.dom.find('.selected1 input').val(),
          idx: that.dom.find('.selected1 input').attr('data-idx'),
          props: that.dom.find('.selected1 input').attr('props')
        });
      });
      that.initscrollmenu();
    }
  }, {
    key: 'bindEvent',
    value: function bindEvent() {
      var that = this;
      this.dom.find('.selected1').on('click', function (e) {
        e.stopPropagation();
        var dom = ES.selctorDoc(this);
        dom.find('.icon').addClass('drop');
        dom.parent().find('._dropdown1').show();
        if (that.dom.find('.option').dom.length > that.maxshownum) {
          that.dom.find('.scroll').css({ height: that.dom.find('.drop-down').box().clientHeight * that.maxshownum });
          that.dom.find('.scroll').css({ overflow: 'hidden' });
          that.initscrollmenu();
        }
        that.dom.find('.mask').show();
      });
      this.dom.find('.selected1').on('mouseover', function () {
        var dom = ES.selctorDoc(this);
        var data = dom.find('input').attr('data-idx');
        if (data) {
          ES.selctorDoc(this).find('.icon-shanchutishiicon').show();
          ES.selctorDoc(this).find('.icon').hide();
        }
      });
      this.dom.find('.selected1').on('mouseout', function () {
        ES.selctorDoc(this).find('.icon-shanchutishiicon').hide();
        ES.selctorDoc(this).find('.icon').show();
      });
      this.dom.find('.selected1 .icon-shanchutishiicon').on('click', function (e) {
        e.stopPropagation();
        ES.selctorDoc(this).parent().find('.nowname').attr('placeholder', that.firstSelect.val);
        ES.selctorDoc(this).parent().find('.nowname').val('');
        ES.selctorDoc(this).parent().find('.nowname').attr('data-idx', that.firstSelect.idx);
        that.dom.find('.select').removeClass('select');
        that.event._dispatch('dropDown.clear');
      });
      this.dom.find('._dropdown1 .mask').on('click', function () {
        ES.selctorDoc(this).parent().hide();
        that.dom.find('.icon').removeClass('drop');
        that.dom.find('.loading_xlk').addClass('drop');
      });
      if (!that.input) {
        that.dom.find('.nowname').attr('readonly', 'readonly');
      } else {
        this.dom.find('.nowname').on('input', function () {
          that.event._dispatch('drop.input', { data: ES.selctorDoc(this).val(), classname: ES.selctorDoc(this).parent().parent().parent().attr('class') });
        });
        this.dom.find('.nowname').on('focus', function () {
          that.dom.find('.nowname').attr('placeholder', '');
        });
        this.dom.find('.nowname').on('blur', function () {
          that.dom.find('.nowname').attr('placeholder', that.nowParam.firstSelect.val);
        });
      }
    }
  }, {
    key: 'reset',
    value: function reset(value) {
      this.dom.find('.selected1 input').attr('placeholder', this.nowParam.firstSelect.val);
      this.dom.find('.selected1 input').val('');
      this.dom.find('.selected1 input').attr('data-idx', this.nowParam.firstSelect.idx);
      this.dom.find('.select').removeClass('select');
      this.dom.find('._dropdown1 .selectbox .option').eq(0).addClass('select');
      if (!value) {
        this.event._dispatch('option.click', {
          val: this.dom.find('.selected1 input').val(),
          idx: this.dom.find('.selected1 input').attr('data-idx')
        });
      }
    }
  }, {
    key: 'setChoose',
    value: function setChoose(value) {
      var that = this;
      that.data.forEach(function (val, idx) {
        if (val.idx == value) {
          this.dom.find('.selected1 input').attr('data-idx', val.idx);
          this.dom.find('.selected1 input').attr('placeholder', val.val);
        }
      });
    }
  }, {
    key: 'disable',
    value: function disable() {
      var that = this;
      that.dom.find('.selected1').off('click');
      that.dom.find('.selected1').off('mouseover');
      that.dom.find('.nowname').addClass('drop_disabled');
      that.dom.find('.nowname').attr('readonly', 'readonly');
      that.dom.find('.drop-down').addClass('drop_disabled');
    }
  }, {
    key: 'able',
    value: function able() {
      var that = this;
      that.dom.find('.nowname').removeClass('drop_disabled');
      that.dom.find('.drop-down').removeClass('drop_disabled');
      that.dom.find('.selected1').on('click', function (e) {
        e.stopPropagation();
        var dom = ES.selctorDoc(this).parent();
        dom.find('.icon').addClass('drop');
        dom.parent().find('._dropdown1').show();
        if (that.dom.find('.option').dom.length > that.maxshownum) {
          that.dom.find('.scroll').css({ height: that.dom.find('.drop-down').box().clientHeight * that.maxshownum });
          that.dom.find('.scroll').css({ overflow: 'hidden' });
          that.initscrollmenu();
        }
        that.dom.find('.mask').show();
      });
    }
  }, {
    key: 'loading',
    value: function loading(bool) {
      if (bool) {
        this.dom.find('.selectbox').html('');
        this.dom.find('.loading_xlk').removeClass('hide');
      } else {
        this.dom.find('.loading_xlk').addClass('hide');
      }
    }
  }, {
    key: 'initscrollmenu',
    value: function initscrollmenu() {
      if (this.myScroll1) {
        this.myScroll1.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      this.dom.find('.scroll').attr('id', rid);
      this.myScroll1 = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }]);

  return index;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = index;

/***/ }),

/***/ 737:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(738);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./drop.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./drop.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 738:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, "@charset \"UTF-8\";\n.ctdrop {\n  background: none;\n  border: 1px solid #D2EFFC;\n  width: 90px;\n  color: #D2EFFC;\n  min-width: 90px;\n  font-size: 12px;\n  border-radius: 4px;\n  line-height: 25px;\n}\n.ctdrop .selected1 {\n  margin-left: 10px;\n  border: 0;\n}\n.ctdrop .selected1 input {\n  display: inline-block;\n  color: #D2EFFC;\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n}\n.ctdrop .selected1 .icon-icon-test3 {\n  color: #D2EFFC;\n  font-size: 0.5rem;\n  margin-right: 1px;\n}\n.ctdrop .selected1 img {\n  position: absolute;\n  right: 5px;\n  top: 10px;\n}\n.xlk,\n.kxlk {\n  background: #fff;\n  width: 90px;\n  color: #333;\n  font-size: 12px;\n  position: relative;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n}\n.xlk .selected1,\n.kxlk .selected1 {\n  width: 100%;\n  height: 100%;\n}\n.xlk .selected1 .nowname,\n.kxlk .selected1 .nowname {\n  border-radius: 4px;\n  color: #333;\n  display: inline-block;\n  cursor: pointer;\n  border: none;\n  background: #fff;\n  height: 100%;\n  width: 88%;\n  margin-left: 10px;\n}\n.xlk .selected1 img,\n.kxlk .selected1 img {\n  position: absolute;\n  right: 5px;\n  top: 10px;\n}\n.xlk .selected1 .drop_disabled,\n.kxlk .selected1 .drop_disabled {\n  background: #e8e8e8;\n  cursor: not-allowed !important;\n}\n.listxlk {\n  background: #fff;\n  width: 90%;\n  height: 38px;\n  color: #333;\n  font-size: 12px;\n  position: relative;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n}\n.listxlk .selected1 {\n  width: 100%;\n  height: 90%;\n}\n.listxlk .selected1 input {\n  border-radius: 4px;\n  color: #333;\n  display: inline-block;\n  cursor: pointer;\n  border: none;\n  background: #fff;\n  height: 100%;\n  width: unset;\n  margin-left: 10px;\n}\n.listxlk .selected1 img {\n  position: absolute;\n  right: 5px;\n  top: 10px;\n}\n.listxlk .selectbox {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n}\n.listxlk .selectbox .option {\n  height: 30px;\n  line-height: 30px;\n}\n.listxlk .selectbox .scroll {\n  overflow: hidden;\n  position: relative;\n}\n.selected1 {\n  text-align: left;\n  line-height: inherit;\n  font-family: \"Microsoft YaHei\";\n  font-size: inherit;\n  color: #333;\n  position: relative;\n  cursor: pointer;\n}\n.selected1 .nowname {\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  color: #333;\n  display: inline-block;\n  cursor: pointer;\n  background: #fff;\n  width: 100%;\n  height: 100%;\n}\n.selected1 .icon {\n  transform: rotate(-180deg);\n  vertical-align: middle;\n  transition: all 0.3s;\n  display: inline-block;\n  font-size: 12px;\n  position: absolute;\n  top: 0;\n  right: 5px;\n}\n.selected1 .drop {\n  transform: rotate(0deg);\n}\n.selected1 .icon-shanchutishiicon {\n  position: absolute;\n  font-size: 12px;\n  color: #e6e6e6;\n  width: 12px;\n  top: 0;\n  right: 5px;\n}\n.selected1 .drop_disabled {\n  background: #e8e8e8;\n  cursor: not-allowed !important;\n}\n._dropdown1 {\n  position: absolute;\n  display: none;\n  width: 100%;\n}\n._dropdown1 ul {\n  list-style: none;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 4px;\n  overflow: hidden;\n  background: #fff;\n  font-family: \"Microsoft YaHei\";\n  font-size: inherit;\n  z-index: 15;\n  color: #333;\n  border: 1px solid #e8e8e8;\n}\n._dropdown1 li {\n  margin: 0 5px;\n  min-height: 24px;\n  text-align: left;\n  cursor: pointer;\n  white-space: nowrap;\n  overflow: hidden;\n}\n._dropdown1 li:hover {\n  color: #448E97;\n  background: #ECF3F4;\n}\n._dropdown1 li.select {\n  color: #333333;\n  background: #ECF3F4;\n}\n._dropdown1 .mask {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9;\n}\n._dropdown1 .scroll {\n  position: relative;\n}\n.drop-down .selectbox {\n  min-height: 50px;\n}\n.drop-down .loading_xlk {\n  background: url(/images/loading1.gif) no-repeat 35px -28px;\n  height: 50px;\n  width: 100%;\n  top: 33px;\n  z-index: 2000;\n  position: absolute;\n}\n.drop_disabled .selected1 {\n  background: #e8e8e8;\n}\n.keepwhite {\n  background: #fff!important;\n}\n.keepwhite .selected1 {\n  background: #fff!important;\n}\n", ""]);

// exports


/***/ }),

/***/ 739:
/***/ (function(module, exports) {

module.exports = "<div class=drop-down> <div class=selected1> <input class=nowname type=text /> <i class=\"iconfont icon-shanchutishiicon\" style=display:none></i> <i class=\"iconfont icon-icon-test3 icon\"></i> </div> <div class=_dropdown1> <div class=scroll> <ul class=selectbox> </ul> </div> <div class=mask></div> </div> <div class=\"loading_xlk hide\"></div> </div>";

/***/ }),

/***/ 75:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var createprotwo = function (_Interstellar$pagesBa) {
    _inherits(createprotwo, _Interstellar$pagesBa);

    function createprotwo() {
        _classCallCheck(this, createprotwo);

        return _possibleConstructorReturn(this, (createprotwo.__proto__ || Object.getPrototypeOf(createprotwo)).apply(this, arguments));
    }

    _createClass(createprotwo, [{
        key: 'complete',
        value: function complete() {
            var _this2 = this;

            this.projectType = window.location.hash.indexOf('createprotwo') !== -1 ? 1 : 3;
            if (this.projectType === 1) {
                this.app.header.openControl('projectmanage');
            } else {
                this.app.header.openControl('backflowproject');
            }
            this.app.header.changeselected(2);
            this.styleModel(1);
            this.resize();
            this.dropobj = {};
            this.type = this.app.parpam.type;
            this.projectId = this.app.parpam.projectid;
            this.status = this.app.parpam.status;
            this.clickTime = 0;
            this.hasSeries = false;
            this.loadmodule();
            //数据绑定
            if (this.type == 'new') {
                if (!this.app.session.get('data_1')) {
                    this.app.changePage('createproone', { type: 'new' });
                    return;
                }
                this.dom.find('.export').remove();
            } else {
                if (!this.projectId || !this.type) {
                    this.app.changePage('projectmanage');
                    return;
                }
            }
            this.model._event._addEvent('componentdata.change', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var res;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _this2.app.loading.show();
                                _context.next = 3;
                                return _this2.api.querycomponent(_this2.model.getData('componentdata'));

                            case 3:
                                res = _context.sent;

                                _this2.app.loading.hide();
                                if (res.code == 0) {
                                    _this2.addcomponent.setMain(true, res);
                                }

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, _this2);
            })));
            this.model._event._addEvent('discurddata.change', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
                var res;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _this2.app.loading.show();
                                _context2.next = 3;
                                return _this2.api.dict_root_child(_this2.model.getData('discurddata'));

                            case 3:
                                res = _context2.sent;

                                _this2.app.loading.hide();
                                if (res.code == 0) {
                                    res.data[0].children = res.data[0].children.filter(function (item) {
                                        console.log(item);
                                        return item.value != 98 && item.value != 99;
                                    });
                                    _this2.discurdreason.setMain(true, res.data[0].children);
                                }

                            case 6:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, _this2);
            })));
            this.model._event._addEvent('apiData.change', function () {
                _this2.app.session.set('data_2', JSON.stringify(_this2.model.apiData));
            });
            if (this.type !== 'new') {
                this.series_count();
            }
            //按钮事件
            this.btnEvent();
            this.initscroll();
        }
        //查询数仓的聚合条件

    }, {
        key: 'field_query',
        value: function () {
            var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                var res, projectGroup;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return this.api.field_query({ service: 'DR', method: '/v1/sys/field/query', params: {} });

                            case 2:
                                res = _context3.sent;

                                res.data.forEach(function (v) {
                                    v.val = v.fieldName;
                                    v.idx = v.fieldName;
                                    v.props = v.fieldType;
                                });
                                this.conditions = res.data;
                                projectGroup = __webpack_require__(911);

                                this.projectGroupSet = this.app.loadModule(projectGroup, this.dom.find('.groupSet'), { conditions: this.conditions });

                            case 7:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function field_query() {
                return _ref3.apply(this, arguments);
            }

            return field_query;
        }()
        //查询项目下序列数

    }, {
        key: 'series_count',
        value: function () {
            var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(change) {
                var res;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.app.loading.show();
                                _context4.next = 3;
                                return this.api.series_count({ projectId: this.projectId });

                            case 3:
                                res = _context4.sent;

                                this.app.loading.hide();
                                this.hasSeries = res.data.count > 0;

                            case 6:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function series_count(_x) {
                return _ref4.apply(this, arguments);
            }

            return series_count;
        }()
        //点击事件

    }, {
        key: 'btnEvent',
        value: function btnEvent() {
            var that = this;
            //设置默认分配下载数量：
            this.dom.find('.apidata').on('change', function () {
                if (ES.selctorDoc(this).attr('api') !== null) {
                    var keyname = ES.selctorDoc(this).attr('api');
                    that.model.apiData[keyname] = parseInt(ES.selctorDoc(this).val().trim());
                    that.model.setData('apiData', that.model.apiData);
                }
            });
            //是否设置窗宽窗位
            this.dom.find('.widthlevelset .check-box').on('click', function () {
                var dom = ES.selctorDoc(this);
                if (dom.hasClass('choose')) {
                    dom.removeClass('choose');
                    that.dom.find('.windowId').addClass('hide');
                    that.model.apiData.windowCode = "";
                    that.model.apiData.window = null;
                    that.model.setData('apiData', that.model.apiData);
                } else {
                    dom.addClass('choose');
                    that.dom.find('.windowId').removeClass('hide');
                }
            });
            //是否需要超大图
            this.dom.find('.largeFigure .check-box').on('click', function () {
                var dom = ES.selctorDoc(this);
                if (dom.hasClass('choose')) {
                    dom.removeClass('choose');
                    that.model.apiData.largeFigure = false;
                    that.model.setData('apiData', that.model.apiData);
                } else {
                    dom.addClass('choose');
                    that.model.apiData.largeFigure = true;
                    that.model.setData('apiData', that.model.apiData);
                }
            });
            this.dom.find('.isYayAttributes .check-box').on('click', function () {
                var dom = ES.selctorDoc(this);
                if (dom.hasClass('choose')) {
                    that.model.apiData.isYayAttributes = false;
                    that.dom.find('.choosearea').addClass('hide');
                    dom.removeClass('choose');
                } else {
                    that.model.apiData.isYayAttributes = true;
                    that.dom.find('.choosearea').removeClass('hide');
                    dom.addClass('choose');
                }
                that.initscroll();
                var choosedom = that.dom.find('.isYayAttributes .choosearea .choose');
                if (choosedom.dom) {
                    var length = choosedom.dom.length;
                    if (length == 2) {
                        that.model.apiData.yayAttributes = 4;
                    } else {
                        if (choosedom.parent().attr('data-id') == 1) {
                            that.model.apiData.yayAttributes = 1;
                        } else {
                            that.model.apiData.yayAttributes = 3;
                        }
                    }
                } else {
                    that.model.apiData.yayAttributes = 2;
                }
                that.model.setData('apiData', that.model.apiData);
            });
            //是否需要展示报告
            this.dom.find('.showReport .check-box').on('click', function () {
                var dom = ES.selctorDoc(this);
                if (dom.hasClass('choose')) {
                    dom.removeClass('choose');
                    that.model.apiData.showReport = false;
                    that.model.setData('apiData', that.model.apiData);
                } else {
                    dom.addClass('choose');
                    that.model.apiData.showReport = true;
                    that.model.setData('apiData', that.model.apiData);
                }
            });
            //是否需要以检查号级别进行标注
            this.dom.find('.marktypeset .check-box').on('click', function () {
                if (that.hasSeries && that.clickTime !== 0) {
                    that.app.alert.show({
                        title: ' ',
                        msg: '项目下已存在序列，请先跳转至第三步删除所有序列。',
                        close: true,
                        footer: true
                    });
                } else {
                    that.clickTime++;
                    var dom = ES.selctorDoc(this);
                    if (dom.hasClass('choose')) {
                        dom.removeClass('choose');
                        that.model.apiData.studyAnno = false;
                        that.model.setData('apiData', that.model.apiData);
                    } else {
                        dom.addClass('choose');
                        that.model.apiData.studyAnno = true;
                        that.model.setData('apiData', that.model.apiData);
                    }
                }
            });
            //是否需要以检查号级别进行标注
            this.dom.find('.category .radio-box').on('click', function () {
                that.dom.find('.category .choose').removeClass('choose');
                ES.selctorDoc(this).addClass('choose');
                that.model.apiData.category = ES.selctorDoc(this).parent().attr('data-id') * 1;
                that.model.setData('apiData', that.model.apiData);
            });
            //影像标注添加
            this.dom.find('.bigadd').on('click', function () {
                that.multlist.addli();
                that.initscroll();
            });
            //保存
            this.dom.find('.save').on('click', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
                var data, temparr, tempstr, st, str, res;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                data = JSON.parse(JSON.stringify(that.model.apiData));

                                data.type = that.projectType;
                                data.name = JSON.parse(that.app.session.get('data_1')).name;
                                data.remark = JSON.parse(that.app.session.get('data_1')).remark;
                                data.remarkFileUrl = JSON.parse(that.app.session.get('data_1')).remarkFileUrl;
                                data.id = that.type != 'new' ? that.projectId : null;
                                data.action = that.type != 'new' ? 2 : 1;
                                data.seriesList = [];
                                temparr = [];
                                tempstr = '';

                                if (data.annotationItemList) {
                                    data.annotationItemList.forEach(function (val, idx) {
                                        if (val.action !== 3) {
                                            val.action = val.id ? 2 : 1;
                                        }
                                        var obj = {
                                            id: val.id,
                                            formComponentId: val.formComponentId,
                                            action: val.action,
                                            sequence: (idx + 1) * 10,
                                            optional: val.optional,
                                            alias: val.alias
                                        };
                                        temparr.push(obj);
                                    });
                                    data.annotationItemList = temparr;
                                }
                                if (data.discardList) {
                                    data.discardList.forEach(function (val, idx) {
                                        tempstr += val.value + ',';
                                    });
                                    data.discardCodeList = tempstr;
                                }
                                delete data.discardList;
                                if (data.window) {
                                    data.windowCode = JSON.parse(data.window).value;
                                }
                                if (data.imageAnnotationList) {
                                    data.imageAnnotationList.forEach(function (v, i) {
                                        temparr = [];
                                        if (v.annotationItemList) {
                                            v.annotationItemList.forEach(function (val, idx) {
                                                if (val.action !== 3) {
                                                    val.action = val.id ? 2 : 1;
                                                }
                                                var obj = {
                                                    id: val.id,
                                                    formComponentId: val.formComponentId,
                                                    action: val.action,
                                                    sequence: (idx + 1) * 10,
                                                    optional: val.optional,
                                                    alias: val.alias
                                                };
                                                temparr.push(obj);
                                            });
                                            v.annotationItemList = temparr;
                                        }
                                    });
                                }
                                that.dom.find('.inputLine').dom.forEach(function (val) {
                                    val.find('.' + val.attr('redlabel')).removeClass('redborder');
                                    val.find('.required').remove();
                                    console.log(val, 'val');
                                    if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                                        if (val.find('.' + val.attr('redlabel'))) {
                                            val.find('.' + val.attr('redlabel')).addClass('redborder');
                                        }
                                        val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                                    }
                                });

                                if (!(that.dom.find('.redborder').dom && that.dom.find('.redborder').dom.some(function (val) {
                                    return !val.parent().hasClass('hide');
                                }))) {
                                    _context5.next = 20;
                                    break;
                                }

                                return _context5.abrupt('return', false);

                            case 20:
                                if (!(that.type != 'view')) {
                                    _context5.next = 44;
                                    break;
                                }

                                console.log(that.projectGroupSet.liArr, 'that.projectGroupSet.liArr');
                                data.aggreConditions = [];
                                st = true;
                                str = '';

                                that.projectGroupSet.liArr.map(function (val, index) {
                                    console.log(val);
                                    // if (val.type == 'LOGICAL_TIME' && (val.limitTime == '' || val.limitTime == null || val.limitTime == undefined)) {
                                    //     that.projectGroupSet.timeError(index)
                                    //     st = false
                                    //     return
                                    // }
                                    if (str.lastIndexOf(val.field) !== -1) {
                                        that.projectGroupSet.errorShow('聚合条件设置重复');
                                        st = false;
                                        return;
                                    }
                                    str += ',' + val.field + ',';
                                    if (!val.delete || val.delete !== 2) {
                                        delete val.delete;
                                        data.aggreConditions.push(val);
                                    }
                                });

                                if (st) {
                                    _context5.next = 28;
                                    break;
                                }

                                return _context5.abrupt('return');

                            case 28:
                                that.app.loading.show();
                                _context5.next = 31;
                                return that.api.editproject(data);

                            case 31:
                                res = _context5.sent;

                                that.app.loading.hide();

                                if (!(res.code == 0)) {
                                    _context5.next = 39;
                                    break;
                                }

                                that.app.changePage(that.projectType == 1 ? 'createprothree' : 'createbackflowpro3', {
                                    type: 'edit',
                                    projectid: res.data.id ? res.data.id : that.projectId,
                                    status: this.status
                                });
                                that.app.session.del('data_2');
                                that.app.session.del('ischanged');
                                _context5.next = 44;
                                break;

                            case 39:
                                if (!(res.code == 401)) {
                                    _context5.next = 43;
                                    break;
                                }

                                that.app.alert.show({
                                    title: ' ',
                                    msg: '项目名称已存在',
                                    close: true,
                                    footer: true
                                });
                                _context5.next = 44;
                                break;

                            case 43:
                                return _context5.abrupt('return');

                            case 44:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            })));
            //添加整体病症标注组件
            this.dom.find('.alldata').on('click', function () {
                that.chooseComponent('all');
            });
            //查看已添加整体病症标注组件
            this.dom.find('.showalldata').on('click', function () {
                that.showytjComponent('all');
            });
            //导出标注组件
            this.dom.find('.export').on('click', function () {
                var url = that.app.domain1 + 'v1/project/component/export?projectId=' + that.projectId;
                Tool.downfile(url, that.app);
            });
            //添加废片原因
            this.dom.find('.discardreason').on('click', function () {
                that.choosediscurdreason();
            });
            // 查看添加的废片原因
            this.dom.find('.viewreason').on('click', function () {
                that.showdiscurdreason();
            });
        }
        //加载各个模块

    }, {
        key: 'loadmodule',
        value: function loadmodule() {
            var _this3 = this;

            var dropConfig = [{
                name: 'yblx',
                className: 'xlk',
                firstSelect: { val: '样本类型', idx: '' },
                data: Tool.configxlkformat(this.app.constmap['MODALITY'])
            }, {
                name: 'windowId',
                className: 'xlk',
                firstSelect: { val: '', idx: '' },
                data: Tool.configxlkformat(this.app.constmap['WINDOW'])
            }, {
                className: 'xlk',
                name: 'seriesImgFileType',
                firstSelect: { val: '', idx: '' },
                data: [{ val: '非原始数据', idx: '1' }, { val: '原始数据', idx: '2' }, { val: 'MPR', idx: '3' }]
            }, {
                className: 'xlk',
                name: 'sicknessType',
                firstSelect: { val: '项目标签', idx: '' },
                data: Tool.configxlkformat(this.app.constmap['SICKNESS_TYPE'])
            }, {
                className: 'xlk',
                name: 'projectFunction',
                firstSelect: { val: '项目目标', idx: '' },
                data: Tool.configxlkformat(this.app.constmap['PROJECT_FUNCTION'])
            }, {
                className: 'xlk',
                name: 'yang',
                firstSelect: { val: '否', idx: '0' },
                data: [{ val: '是', idx: '1' }, { val: '否', idx: '0' }]
            }, {
                className: 'xlk',
                name: 'yin',
                firstSelect: { val: '否', idx: '0' },
                data: [{ val: '是', idx: '1' }, { val: '否', idx: '0' }]
            }, {
                className: 'xlk',
                name: 'rangeConditions',
                firstSelect: { val: '', idx: '' },
                data: [{ val: '序列号', idx: '1' }, { val: '检查号', idx: '2' }]
            }];
            var multiliModule = __webpack_require__(837);
            this.multlist = this.app.loadModule(multiliModule, this.dom.find('.multiitem'), { protype: 'normal' });
            this.multlist.event._addEvent('bztoollist.toolListchange', function () {
                _this3.model.apiData.imageAnnotationList = _this3.multlist.getData();
                _this3.model.setData('apiData', _this3.model.apiData);
                _this3.initscroll();
            });
            this.multlist.event._addEvent('bztoollist.add', function (value) {
                _this3.chooseComponent('', value);
            });
            this.multlist.event._addEvent('bztoollist.show', function (value) {
                _this3.showytjComponent('', value);
            });
            this.multlist.event._addEvent('bztoollist.refresh', function (value) {
                _this3.app.changePage('createprotwo', { type: _this3.type, projectid: _this3.projectId, status: _this3.status });
            });
            this.biaozhulist = __webpack_require__(915);
            this.ytjbiaozhulist = __webpack_require__(919);
            this.discurdlist = __webpack_require__(923);
            this.ytjdiscurdlist = __webpack_require__(927);
            new Promise(function(resolve) { resolve(); }).then((function () {
                var dropdown = __webpack_require__(638);
                dropConfig.forEach(function (val, idx) {
                    var drop = _this3.app.loadModule(dropdown, _this3.dom.find('.' + val.name), {
                        className: val.className,
                        firstSelect: val.firstSelect,
                        data: val.data,
                        input: val.input
                    });
                    drop.event._addEvent('option.click', function (value) {
                        _this3.model.apiData[val.name] = value.idx;
                        _this3.model.setData('apiData', _this3.model.apiData);
                        console.log(_this3.model.apiData, 'tagchange');
                        _this3.app.session.set('ischanged', true);
                    });
                    drop.event._addEvent('dropDown.clear', function (value) {
                        _this3.model.setData('apiData', _this3.model.apiData);
                        _this3.model.apiData[val.name] = '';
                    });
                    _this3.dropobj[val.name] = drop;
                });
                _this3.dropobj['yblx'].event._addEvent('option.click', function (val) {
                    _this3.model.apiData.modality = val.idx;
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj['yblx'].event._addEvent('dropDown.clear', function (val) {
                    _this3.model.apiData.modality = '';
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.windowId.event._addEvent('option.click', function (val) {
                    var tempobj = {
                        id: val.idx.split(',')[0],
                        value: val.idx.split(',')[1],
                        name: val.val
                    };
                    _this3.model.apiData.window = JSON.stringify(tempobj);
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.windowId.event._addEvent('dropDown.clear', function (val) {
                    _this3.model.apiData.window = null;
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.seriesImgFileType.event._addEvent('option.click', function (val) {
                    _this3.model.apiData.seriesImgFileType = val.idx * 1;
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.seriesImgFileType.event._addEvent('dropDown.clear', function (val) {
                    _this3.model.apiData.seriesImgFileType = null;
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.yin.event._addEvent('option.click', function (val) {
                    if (val.idx == 0) {
                        if (_this3.dom.find('.yang .nowname').attr('data-idx') == 0) {
                            _this3.model.apiData.yayAttributes = 2;
                        } else {
                            _this3.model.apiData.yayAttributes = 1;
                        }
                    } else {
                        if (_this3.dom.find('.yang .nowname').attr('data-idx') == 0) {
                            _this3.model.apiData.yayAttributes = 3;
                        } else {
                            _this3.model.apiData.yayAttributes = 4;
                        }
                    }
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.yin.event._addEvent('dropDown.clear', function (val) {
                    if (_this3.dom.find('.yang .nowname').attr('data-idx') == 0) {
                        _this3.model.apiData.yayAttributes = 2;
                    } else {
                        _this3.model.apiData.yayAttributes = 1;
                    }
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.yang.event._addEvent('option.click', function (val) {
                    if (val.idx == 0) {
                        if (_this3.dom.find('.yin .nowname').attr('data-idx') == 0) {
                            _this3.model.apiData.yayAttributes = 2;
                        } else {
                            _this3.model.apiData.yayAttributes = 3;
                        }
                    } else {
                        if (_this3.dom.find('.yin .nowname').attr('data-idx') == 0) {
                            _this3.model.apiData.yayAttributes = 1;
                        } else {
                            _this3.model.apiData.yayAttributes = 4;
                        }
                    }
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dropobj.yang.event._addEvent('dropDown.clear', function (val) {
                    if (_this3.dom.find('.yin .nowname').attr('data-idx') == 0) {
                        _this3.model.apiData.yayAttributes = 2;
                    } else {
                        _this3.model.apiData.yayAttributes = 1;
                    }
                    _this3.model.setData('apiData', _this3.model.apiData);
                });
                _this3.dict_root_child();
                _this3.field_query();
                _this3.render();
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        }
    }, {
        key: 'dict_root_child',
        value: function () {
            var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
                var temparr, json, res;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                temparr = [];
                                json = {
                                    value: 'WINDOW'
                                };
                                _context6.next = 4;
                                return this.api.dict_root_child(json);

                            case 4:
                                res = _context6.sent;

                                res.data[0].children.forEach(function (val, idx) {
                                    temparr.push({ idx: val.id + ',' + val.value, val: val.name });
                                });
                                this.dropobj.windowId.renderHtml(temparr);
                                //this.model.setData('modality', temparr)

                            case 7:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function dict_root_child() {
                return _ref6.apply(this, arguments);
            }

            return dict_root_child;
        }()
    }, {
        key: 'render',
        value: function () {
            var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
                var pagedata, json, res, lastpage, json1, res1;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                pagedata = {};
                                _context7.t0 = this.type;
                                _context7.next = _context7.t0 === "new" ? 4 : 15;
                                break;

                            case 4:
                                pagedata = JSON.parse(this.app.session.get('data_2'));
                                pagedata = pagedata ? pagedata : {};
                                this.model.setData('apiData', pagedata);
                                if (pagedata.modality) {
                                    this.dom.find('.yblx .option[data-idx="' + pagedata.modality + '"]').click();
                                }
                                if (pagedata.seriesImgFileType) {
                                    this.dom.find('.seriesImgFileType .option[data-idx="' + pagedata.seriesImgFileType + '"]').click();
                                }
                                if (pagedata.window) {
                                    pagedata.window = JSON.parse(pagedata.window);
                                    this.dom.find('.widthlevelset .check-box').click();
                                    this.dom.find('.windowId .option[data-idx="' + pagedata.window.id + ',' + pagedata.window.value + '"]').click();
                                }
                                if (pagedata.discardList) {
                                    if (pagedata.discardList.length > 0) {
                                        this.dom.find('.viewreason').removeClass('hide');
                                    }
                                }
                                if (pagedata.showReport) {
                                    this.dom.find('.showReport .check-box').click();
                                }
                                if (pagedata.annotationItemList && pagedata.annotationItemList.length > 0) {
                                    this.dom.find('.showalldata').removeClass('hide');
                                }
                                if (pagedata.imageAnnotationList) {
                                    this.multlist.setData(pagedata.imageAnnotationList);
                                }
                                return _context7.abrupt('break', 67);

                            case 15:
                                json = {
                                    projectId: this.projectId
                                };

                                this.app.loading.show();
                                _context7.next = 19;
                                return this.api.projectdetail(json);

                            case 19:
                                res = _context7.sent;

                                this.app.loading.hide();

                                if (!(res.code == 0)) {
                                    _context7.next = 66;
                                    break;
                                }

                                pagedata = res.data;
                                // pagedata = this.app.session.get('data_2') ? JSON.parse(this.app.session.get('data_2')) : pagedata
                                this.model.setData('apiData', pagedata);
                                lastpage = void 0;
                                json1 = {
                                    id: this.projectId
                                };

                                if (pagedata.window) {
                                    if (_typeof(pagedata.window) !== 'object') {
                                        pagedata.window = JSON.parse(pagedata.window);
                                    }
                                    this.dom.find('.widthlevelset .check-box').click();
                                    this.dom.find('.windowId .option[data-idx="' + pagedata.window.id + ',' + pagedata.window.value + '"]').click();
                                }
                                if (pagedata.discardList) {
                                    if (pagedata.discardList.length > 0) {
                                        this.dom.find('.viewreason').removeClass('hide');
                                    }
                                }
                                if (pagedata.showReport) {
                                    this.dom.find('.showReport .check-box').click();
                                }
                                if (pagedata.componetCount <= 0) {
                                    this.dom.find('.export').remove();
                                }
                                //delete pagedata.project
                                this.app.loading.show();
                                _context7.next = 33;
                                return this.api.project_basic_read(json1);

                            case 33:
                                res1 = _context7.sent;

                                this.app.loading.hide();
                                lastpage = res1.data;
                                if (!this.app.session.get('data_1')) {
                                    this.app.session.set('data_1', JSON.stringify(lastpage));
                                }
                                // lastpage = JSON.parse(this.app.session.get('data_1'))
                                if (lastpage.modality) {
                                    this.dom.find('.yblx .option[data-idx="' + lastpage.modality + '"]').click();
                                }
                                if (lastpage.seriesImgFileType) {
                                    this.dom.find('.seriesImgFileType .option[data-idx="' + lastpage.seriesImgFileType + '"]').click();
                                }
                                if (lastpage.sicknessType) {
                                    this.dom.find('.sicknessType .option[data-idx="' + lastpage.sicknessType + '"]').click();
                                }
                                if (lastpage.projectFunction) {
                                    this.dom.find('.projectFunction .option[data-idx="' + lastpage.projectFunction + '"]').click();
                                }
                                if (lastpage.rangeConditions) {
                                    this.dom.find('.rangeConditions .option[data-idx="' + lastpage.rangeConditions + '"]').click();
                                }
                                if (lastpage.studyAnno) {
                                    // this.dom.find('.marktypeset .check-box').click()
                                }
                                if (lastpage.largeFigure) {
                                    this.dom.find('.largeFigure .check-box').click();
                                }
                                if (lastpage.aggreConditions) {
                                    if (this.type == 'view' || this.status == 2) {
                                        this.projectGroupSet.setData(JSON.parse(lastpage.aggreConditions), 'view');
                                    } else {
                                        this.projectGroupSet.setData(JSON.parse(lastpage.aggreConditions), 'edit');
                                    }
                                }
                                this.dom.find('.department[data-id="' + lastpage.category + '"]').find('.radio-box').click();

                                if (!lastpage.isYayAttributes) {
                                    _context7.next = 63;
                                    break;
                                }

                                this.dom.find('.isYayAttributes .check-box').click();
                                _context7.t1 = lastpage.yayAttributes;
                                _context7.next = _context7.t1 === 1 ? 51 : _context7.t1 === 2 ? 54 : _context7.t1 === 3 ? 57 : _context7.t1 === 4 ? 60 : 63;
                                break;

                            case 51:
                                this.dom.find('.yin .option[data-idx="0"]').click();
                                this.dom.find('.yang .option[data-idx="1"]').click();
                                return _context7.abrupt('break', 63);

                            case 54:
                                this.dom.find('.yin .option[data-idx="0"]').click();
                                this.dom.find('.yang .option[data-idx="0"]').click();
                                return _context7.abrupt('break', 63);

                            case 57:
                                this.dom.find('.yin .option[data-idx="1"]').click();
                                this.dom.find('.yang .option[data-idx="0"]').click();
                                return _context7.abrupt('break', 63);

                            case 60:
                                this.dom.find('.yin .option[data-idx="1"]').click();
                                this.dom.find('.yang .option[data-idx="1"]').click();
                                return _context7.abrupt('break', 63);

                            case 63:
                                if (pagedata.annotationItemList.length > 0) {
                                    this.dom.find('.showalldata').removeClass('hide');
                                }
                                if (this.type == 'view' || this.status == 2) {
                                    this.multlist.setData(pagedata.imageAnnotationList, 'view');
                                    this.todisabled();
                                } else {
                                    this.multlist.setData(pagedata.imageAnnotationList);
                                }
                                this.app.session.del('ischanged');

                            case 66:
                                return _context7.abrupt('break', 67);

                            case 67:
                                this.initscroll();

                            case 68:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function render() {
                return _ref7.apply(this, arguments);
            }

            return render;
        }()
    }, {
        key: 'todisabled',
        value: function todisabled() {
            if (this.type == 'view') {
                this.dom.find('.save').addClass('hide');
            }
            for (var i in this.dropobj) {
                this.dropobj[i].disable();
            }
            this.dom.find('.bigadd').addClass('hide');
            this.dom.find('.alldata').addClass('hide');
            this.dom.find('.discardreason').addClass('hide');
            this.dom.find('.check-box').off('click');
            this.dom.find('.radio-box').off('click');
            this.dom.find('.inputBox').attr('readonly', 'readonly');
            this.multlist.disable();
            this.projectGroupSet.disable();
        }

        //===================弹窗部分==========================
        //显示用户所选的组件

    }, {
        key: 'showytjComponent',
        value: function showytjComponent(type, v1) {
            var _this4 = this;

            var initData = { type: this.type, status: this.status, data: [] };
            if (type == 'all') {
                initData.data = JSON.parse(JSON.stringify(this.model.apiData.annotationItemList));
            } else {
                //initData.data = this.model.apiData.imageAnnotationList[v1.num].annotationItemList
                initData.data = this.multlist.data[v1.num].annotationItemList ? JSON.parse(JSON.stringify(this.multlist.data[v1.num].annotationItemList)) : [];
            }
            this.ytjcomponent = this.app.loadModal(this.ytjbiaozhulist, { adv: true }, initData);
            this.ytjcomponent.event._addEvent('biaozhulist.showcomponent', function (value) {
                _this4.showDetailComponent(value);
            });
            this.ytjcomponent.event._addEvent('ytjbiaozhulist.datachange', function (value) {
                _this4.addComponentData(value.data, type, v1);
                _this4.ytjcomponent.close();
            });
        }

        //查看所有组件列表，并进行添加

    }, {
        key: 'chooseComponent',
        value: function chooseComponent(type, v1) {
            var _this5 = this;

            var initData = { chooseddata: [] };
            if (type == 'all') {
                initData.chooseddata = this.model.apiData.annotationItemList;
            } else {
                // initData.chooseddata = this.model.apiData.imageAnnotationList&&this.model.apiData.imageAnnotationList[v1.num]?this.model.apiData.imageAnnotationList[v1.num].annotationItemList:[]
                initData.chooseddata = this.multlist.data[v1.num].annotationItemList ? this.multlist.data[v1.num].annotationItemList : [];
            }
            this.addcomponent = this.app.loadModal(this.biaozhulist, { adv: true }, initData);
            this.model.setData('componentdata', { page: 1, pageSize: 10 });
            //显示详情
            this.addcomponent.event._addEvent('biaozhulist.showcomponent', function (value) {
                _this5.showDetailComponent(value);
            });
            //搜索列表
            this.addcomponent.event._addEvent('search.change', function (value) {
                _this5.model.setData('componentdata', value);
            });
            this.addcomponent.event._addEvent('biaozhulist.adddata', function (value) {
                _this5.addComponentData(value.list, type, v1);
                _this5.addcomponent.close();
            });
        }

        //查看并添加废片理由

    }, {
        key: 'choosediscurdreason',
        value: function choosediscurdreason(type, v1) {
            var _this6 = this;

            var initData = { chooseddata: [] };
            console.log(this.model.apiData, 'this.model.apiData');
            initData.chooseddata = this.model.apiData.discardList ? JSON.parse(JSON.stringify(this.model.apiData.discardList)) : [];
            this.discurdreason = this.app.loadModal(this.discurdlist, { adv: true }, initData);
            this.model.setData('discurddata', { page: 1, pageSize: 10, value: 'DISCARD' });
            //搜索列表
            this.discurdreason.event._addEvent('search.change', function (value) {
                _this6.model.setData('discurddata', value);
            });
            this.discurdreason.event._addEvent('biaozhulist.adddata', function (value) {
                console.log(value.list, 'value,lsit');
                _this6.addDiscurdData(value.list);
                _this6.discurdreason.close();
            });
        }
    }, {
        key: 'showDetailComponent',
        value: function () {
            var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(value) {
                var json, res, showcomponent;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                json = {
                                    id: value.id
                                };

                                this.app.loading.show();
                                _context8.next = 4;
                                return this.api.getcomponentdetail(json);

                            case 4:
                                res = _context8.sent;

                                this.app.loading.hide();
                                if (res.code == 0) {
                                    showcomponent = __webpack_require__(787);

                                    this.app.loadModal(showcomponent, { adv: true }, { type: 'view', data: res.data });
                                }

                            case 7:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function showDetailComponent(_x2) {
                return _ref8.apply(this, arguments);
            }

            return showDetailComponent;
        }()
    }, {
        key: 'addComponentData',
        value: function addComponentData(value, type, v1) {
            var that = this;
            if (type == "all") {
                this.model.apiData.annotationItemList = JSON.parse(JSON.stringify(value));
                if (this.model.apiData.annotationItemList.length == 0) {
                    this.dom.find('.showalldata').addClass('hide');
                } else {
                    if (this.model.apiData.annotationItemList.some(function (item) {
                        return item.action !== 3;
                    })) {
                        this.dom.find('.showalldata').removeClass('hide');
                    } else {
                        this.dom.find('.showalldata').addClass('hide');
                    }
                }
            } else {
                //console.log(this.model.apiData.imageAnnotationList,v1.num)
                //this.model.apiData.imageAnnotationList=this.model.apiData.imageAnnotationList?this.model.apiData.imageAnnotationList:[]
                //this.model.apiData.imageAnnotationList[v1.num]=this.model.apiData.imageAnnotationList[v1.num]?this.model.apiData.imageAnnotationList[v1.num]:{}
                //this.model.apiData.imageAnnotationList[v1.num].annotationItemList = value
                this.multlist.data[v1.num].annotationItemList = JSON.parse(JSON.stringify(value));
                this.model.apiData.imageAnnotationList = this.multlist.getData();
                if (this.multlist.data[v1.num].annotationItemList.length == 0) {
                    this.dom.find('.multili' + v1.num).find('.ytjdata').addClass('hide');
                } else {
                    if (this.multlist.data[v1.num].annotationItemList.some(function (item) {
                        return item.action != 3;
                    })) {
                        that.dom.find('.multili' + v1.num).find('.ytjdata').removeClass('hide');
                    } else {
                        that.dom.find('.multili' + v1.num).find('.ytjdata').addClass('hide');
                    }
                }
            }
            this.model.setData('apiData', this.model.apiData);
        }
    }, {
        key: 'addDiscurdData',
        value: function addDiscurdData(value) {
            var _this7 = this;

            this.model.apiData.discardList = value;
            this.model.setData('apiData', this.model.apiData);
            if (value.length == 0) {
                this.dom.find('.viewreason').addClass('hide');
            } else {
                value.map(function (item) {
                    if (item.action != 3) {
                        _this7.dom.find('.viewreason').removeClass('hide');
                        return;
                    } else {
                        _this7.dom.find('.viewreason').addClass('hide');
                    }
                });
            }
        }
    }, {
        key: 'showdiscurdreason',
        value: function showdiscurdreason() {
            var _this8 = this;

            var initData = { type: this.type, status: this.status, data: [] };
            initData.data = JSON.parse(JSON.stringify(this.model.apiData.discardList));
            this.ytjcomponent = this.app.loadModal(this.ytjdiscurdlist, { adv: true }, initData);
            this.ytjcomponent.event._addEvent('ytjbiaozhulist.datachange', function (value) {
                _this8.addDiscurdData(value.data);
                _this8.ytjcomponent.close();
            });
        }

        //===================弹窗部分==========================

    }, {
        key: 'resize',
        value: function resize() {
            var ch = ES.selctorDoc(window).box().clientHeight - 100;
            var cw = ES.selctorDoc(window).box().clientWidth - 40;
            ES.selctorDoc('.createprotwo').css({ 'height': ch, 'width': cw });
            this.initscroll();
        }
    }, {
        key: 'initscroll',
        value: function initscroll() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }
            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            ES.selctorDoc('.createprotwo').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }]);

    return createprotwo;
}(Interstellar.pagesBase);

module.exports = createprotwo;

/***/ }),

/***/ 765:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(766);
// var html = require('./tpl.html')

var textcontrols = function (_Interstellar$moduleB) {
    _inherits(textcontrols, _Interstellar$moduleB);

    function textcontrols(app, dom, value, addMode) {
        _classCallCheck(this, textcontrols);

        var _this = _possibleConstructorReturn(this, (textcontrols.__proto__ || Object.getPrototypeOf(textcontrols)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(768);
        _this.name = "textcontrols";
        return _this;
    }

    _createClass(textcontrols, [{
        key: 'complete',
        value: function complete() {
            this.render();
            this.addevent();
            this.hasinput = {};
            var that = this;
            this.dom.find('.textname').on('change', function (res) {
                that.hasinput['textname'] = ES.selctorDoc(this).val();
            });
        }
    }, {
        key: 'render',
        value: function render(value) {
            var that = this;
            var dropdown = __webpack_require__(638);
            that.drop = that.app.loadModule(dropdown, that.dom.find('.texttype'), {
                className: 'xlk',
                firstSelect: {
                    val: '请选择',
                    idx: ''
                },
                data: [{
                    val: '文本型',
                    idx: 'text'
                }, {
                    val: '数字型',
                    idx: 'num'
                }]
            });
            that.drop.event._addEvent('option.click', function (res) {
                that.hasinput.texttype = res.idx;
            });
            if (value) {
                that.setData(value);
            }
        }
    }, {
        key: 'addevent',
        value: function addevent() {
            var that = this;
            that.dom.find('.labelsinput').on('keydown', function (e) {
                var keyCode = e.keyCode;
                if (event.keyCode === 13) {
                    if (ES.selctorDoc(this).val() != '') {
                        that.createlabel(ES.selctorDoc(this).val());
                    }
                }
            });
            that.dom.find('.labelsarea').on('blur', function () {
                if (ES.selctorDoc(this).val() != '') {
                    that.createlabel(ES.selctorDoc(this).val());
                }
            });
            that.dom.find('.labelsarea').on('click', function () {
                // that.dom.find('.labelsinput').focus();
                $('.labelsinput').focus();
            });
            that.dom.find('.labelsinput').on('input', function () {
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.event._dispatch('controls.inputlabel', { val: ES.selctorDoc(this).val() });
            });
        }
    }, {
        key: 'bindlabeldelete',
        value: function bindlabeldelete() {
            var that = this;
            that.dom.find('.labelitem .icon-guanbi').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
                that.event._dispatch('controls.heightchange');
            });
        }
    }, {
        key: 'checkrequired',
        value: function checkrequired() {
            var that = this;
            that.dom.find('.inputLine').dom.forEach(function (val, idx) {
                val.find('.' + val.attr('redlabel')).removeClass('redborder');
                val.find('.required').remove();
                if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                    console.log(val.attr('redlabel'));
                    val.find('.' + val.attr('redlabel')).addClass('redborder');
                    val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                }
            });
            if (that.dom.find('.redborder').dom) {
                return false;
            } else {
                return that.returndata();
            }
        }
    }, {
        key: 'returndata',
        value: function returndata() {
            var that = this;
            var obj = {};
            obj.type = 'text';
            obj.name = that.dom.find('.textname').val();
            obj.parameter = {};
            obj.parameter.texttype = that.dom.find('.texttype .nowname').attr('data-idx');
            //obj.parameter.isrequired=that.dom.find('.isrequired').hasClass('choose')
            obj.parameter = JSON.stringify(obj.parameter);
            var arr = [];
            if (that.dom.find('.labelsarea .labelitem').dom) {
                that.dom.find('.labelsarea .labelitem').dom.forEach(function (val, idx) {
                    if (val.attr('dataid')) {
                        arr.push(parseInt(val.attr('dataid')));
                    }
                });
            }
            obj.tagIdList = arr;
            return obj;
        }
    }, {
        key: 'setData',
        value: function setData(value) {
            var that = this;
            that.dom.find('.textname').val(value.name);
            console.log(that.dom.find('.texttype .nowname'));
            that.dom.find('.texttype .nowname').click();
            that.dom.find('.texttype .option[data-idx="' + JSON.parse(value.parameter).texttype + '"]').click();
            value.tagList.forEach(function (val, idx) {
                var label = '<span class="labelitem" dataid="' + val.id + '">\n' + '                            <label>' + val.text + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
            });
            that.bindlabeldelete();
        }
    }, {
        key: 'labelul',
        value: function labelul(value) {
            var that = this;
            var html = '';
            if (value) {
                value.forEach(function (val, idx) {
                    html += '<li class="labelli" dataid="' + val.id + '">' + val.text + '</li>';
                });
                that.dom.find('.labelul').html(html);
                that.dom.find('.labelli').on('click', function () {
                    ES.selctorDoc(this).parent().html('');
                    that.createlabel(ES.selctorDoc(this).html(), ES.selctorDoc(this).attr('dataid'));
                });
            } else {
                that.dom.find('.labelul').html('');
            }
        }
    }, {
        key: 'createlabel',
        value: function createlabel(value, value2) {
            var that = this;
            that.hasinput.tagList = '';
            if (that.dom.find('.mask').dom) that.dom.find('.mask').addClass('hide');
            that.dom.find('.labelul').html('');
            that.dom.find('.tips').css({ 'color': '#666' });
            if (that.dom.find('.labelitem').dom && that.dom.find('.labelitem').dom.length >= 10) {
                that.dom.find('.tips').css({ 'color': 'red' });
                that.dom.find('.labelsinput').val('');
            } else {
                var label = '<span class="labelitem" dataid="' + value2 + '">\n' + '                            <label>' + value + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
                if (!value2) {
                    that.event._dispatch('controls.createlabel', { val: that.dom.find('.labelsinput').val() });
                }
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.bindlabeldelete();
                that.dom.find('.labelsinput').val('');
                that.event._dispatch('controls.heightchange');
                that.hasinput.tagList = 'yes';
            }
        }
    }, {
        key: 'setid',
        value: function setid(value1, value2) {
            var that = this;
            console.log(value1, value2);
            that.dom.find('.labelitem').dom.forEach(function (val, idx) {
                if (val.find('label').html() == value2) {
                    val.attr('dataid', value1);
                }
            });
        }
    }, {
        key: 'getisinput',
        value: function getisinput() {
            console.log(this.hasinput, 'this,hasinput');
            return this.hasinput;
        }
    }]);

    return textcontrols;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = textcontrols;

/***/ }),

/***/ 766:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(767);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./textcontrols.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./textcontrols.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 767:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".textcontrols {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.textcontrols .inputLine {\n  margin-left: 60px;\n  margin-bottom: 10px;\n}\n.textcontrols .inputLine > span {\n  width: 100px;\n}\n.textcontrols .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 250px;\n  padding-left: 20px;\n}\n.textcontrols .inputLine .texttype {\n  display: inline-block;\n}\n.textcontrols .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.textcontrols .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.textcontrols .textparam {\n  margin-left: 63px;\n  margin-top: 40px;\n}\n.textcontrols .textparam > span {\n  margin-right: 20px;\n}\n.textcontrols .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n  position: relative;\n}\n.textcontrols .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.textcontrols .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.textcontrols .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.textcontrols .labelsarea > span span {\n  width: 22px;\n  height: 22px;\n  text-align: center;\n  background: red;\n  position: relative;\n}\n.textcontrols .labelsarea > span span:hover {\n  color: darkred;\n}\n.textcontrols .labelsarea > span span .icon-guanbi {\n  top: 0px;\n  right: 4px;\n}\n.textcontrols .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.textcontrols .labelsarea .labelul {\n  position: absolute;\n  width: 95%;\n  background: #fff;\n  border-left: 1px solid #e8e8e8;\n  border-right: 1px solid #e8e8e8;\n}\n.textcontrols .labelsarea .labelul .labelli {\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #e8e8e8;\n  cursor: pointer;\n}\n.textcontrols .labelsarea .labelul .labelli:hover {\n  background: #ECF3F4;\n}\n.textcontrols .remarkline {\n  margin-top: 60px;\n}\n.textcontrols .remarkline > span {\n  vertical-align: top;\n}\n.textcontrols .required {\n  left: 400px;\n  top: 8px;\n}\n", ""]);

// exports


/***/ }),

/***/ 768:
/***/ (function(module, exports) {

module.exports = "<div class=\"textarea textcontrols hide\"> <div class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>文本框标题：</span> <input type=text class=\"textname inputBox\" check=empty title=标题 /> </div> <div class=inputLine redlabel=xlk> <label class=redstar>*</label> <span>文本类型：</span> <div class=texttype check=empty></div> </div> <div class=\"inputLine remarkline\"> <span>标签：</span> <div class=labelsarea> <input type=text class=labelsinput /> <ul class=labelul> </ul> </div> <span class=tips>最多可添加10个标签</span> </div> </div> ";

/***/ }),

/***/ 769:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(770);
// var html = require('./tpl.html')

var selectcontrols = function (_Interstellar$moduleB) {
    _inherits(selectcontrols, _Interstellar$moduleB);

    function selectcontrols(app, dom, value, addMode) {
        _classCallCheck(this, selectcontrols);

        var _this = _possibleConstructorReturn(this, (selectcontrols.__proto__ || Object.getPrototypeOf(selectcontrols)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(772);
        _this.name = "selectcontrols";
        return _this;
    }

    _createClass(selectcontrols, [{
        key: 'complete',
        value: function complete() {
            this.bindxlkli();
            this.addevent();
            this.hasinput = {};
            var that = this;
            this.dom.find('.inputBox').on('change', function () {
                that.hasinput[ES.selctorDoc(this).attr('class')] = ES.selctorDoc(this).val();
            });
            console.log(that.nowParam);
            switch (that.nowParam.controlType) {
                case 'radiobox':
                    that.dom.find('.wspan').html('单选框标题');
                    that.dom.find('.selectcontrols').addClass('radioboxarea');
                    break;
                case 'select':
                    that.dom.find('.selectcontrols').addClass('selectarea');
                    break;
            }
        }
    }, {
        key: 'addevent',
        value: function addevent() {
            var that = this;
            that.dom.find('.labelsinput').on('keydown', function (e) {
                var keyCode = e.keyCode;
                if (event.keyCode === 13) {
                    if (ES.selctorDoc(this).val() != '') {
                        that.createlabel(ES.selctorDoc(this).val());
                    }
                }
            });
            that.dom.find('.labelsarea').on('blur', function () {
                if (ES.selctorDoc(this).val() != '') {
                    that.createlabel(ES.selctorDoc(this).val());
                }
            });
            that.dom.find('.labelsarea').on('click', function () {
                // that.dom.find('.labelsinput').focus();
                $('.labelsinput').focus();
            });
            that.dom.find('.labelsinput').on('input', function () {
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.event._dispatch('controls.inputlabel', { val: ES.selctorDoc(this).val() });
            });
            that.dom.find('.check-box').on('click', function () {
                if (ES.selctorDoc(this).hasClass('choose')) {
                    ES.selctorDoc(this).removeClass('choose');
                } else {
                    ES.selctorDoc(this).addClass('choose');
                }
            });
        }
    }, {
        key: 'bindlabeldelete',
        value: function bindlabeldelete() {
            var that = this;
            that.dom.find('.labelitem .icon-guanbi').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
            });
        }
    }, {
        key: 'bindxlkli',
        value: function bindxlkli() {
            var that = this;
            that.dom.find('.icon-tianjia').on('click', function () {
                that.dom.find('.itemarea').append('<li class="item">\n' + '<p class="inputLine" redlabel="inputBox">' + '<label class="redstar">*</label>' + '                    <span class="num">选项<label>' + (that.dom.find('.selectmain .item').dom.length + 1) + '</label></span>\n' + '                    <input type="text" class="item' + (that.dom.find('.selectmain .item').dom.length + 1) + 'value inputBox " check="empty" api="value"/>\n' + '</p>' + '<p class="inputLine" redlabel="inputBox">' + '<label class="redstar">*</label>\n' + '                <span>默认值</span>\n' + '                <input type="text" class="item' + (that.dom.find('.selectmain .item').dom.length + 1) + 'code inputBox " check="empty|num" api="code" reg ="/^[0-9]*$/" error="请输入大于等于0的整数"/>' + '                    <i class="iconfont icon-shanchu"></i>\n' + '</p>' + '                </li>');
                that.dom.find('.icon-tianjia').off('click');
                if (that.dom.find('.item').dom.length > 1 && that.nowParam.type !== 'correct') {
                    that.dom.find('.icon-shanchu').removeClass('hide');
                }
                console.log('aaaaa');
                that.bindxlkli();
                that.event._dispatch('controls.heightchange');
            });
            that.dom.find('.icon-shanchu').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
                if (that.dom.find('.item').dom.length < 2) {
                    that.dom.find('.icon-shanchu').addClass('hide');
                }
                that.dom.find('.item').dom.forEach(function (val, idx) {
                    console.log(ES.selctorDoc(val).dom, 'number');
                    ES.selctorDoc(val).dom.find('.num label').html(idx + 1 + '');
                });
                that.event._dispatch('controls.heightchange');
            });
        }
    }, {
        key: 'checkrequired',
        value: function checkrequired() {
            var that = this;
            that.dom.find('.inputLine').dom.forEach(function (val, idx) {
                val.find('.' + val.attr('redlabel')).removeClass('redborder');
                val.find('.required').remove();
                if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                    console.log(val.attr('redlabel'));
                    val.find('.' + val.attr('redlabel')).addClass('redborder');
                    val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                }
            });
            if (that.dom.find('.redborder').dom) {
                return false;
            } else {
                var result = that.returndata();
                if (result) {
                    return result;
                } else {
                    return false;
                }
            }
        }
    }, {
        key: 'returndata',
        value: function returndata() {
            var that = this;
            var obj = {};
            obj.type = that.nowParam.controlType;
            obj.name = that.dom.find('.xialaname').val();
            obj.parameter = {};
            obj.parameter.isdefault = that.dom.find('.isdefault').hasClass('choose');
            obj.parameter = JSON.stringify(obj.parameter);
            var arr = [];
            if (that.dom.find('.labelsarea .labelitem').dom) {
                that.dom.find('.labelsarea .labelitem').dom.forEach(function (val, idx) {
                    if (val.attr('dataid')) {
                        arr.push(parseInt(val.attr('dataid')));
                    }
                });
            }
            obj.tagIdList = arr;
            obj.data = [];
            var tempStr = ',';
            var tempStr1 = ',';
            var flag = true;
            that.dom.find('.itemarea li').dom.forEach(function (val, idx) {
                console.log(val, 'val');
                if (tempStr.lastIndexOf(',' + val.find('input[api=code]').val() + ',') != -1) {
                    val.find('input[api=code]').addClass('redborder');
                    val.find('input[api=code]').val('');
                    val.find('input[api=code]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                if (tempStr1.lastIndexOf(',' + val.find('input[api=value]').val() + ',') != -1) {
                    val.find('input[api=value]').addClass('redborder');
                    val.find('input[api=value]').val('');
                    val.find('input[api=value]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                tempStr += val.find('input[api=code]').val() + ',';
                tempStr1 += val.find('input[api=value]').val() + ',';
                var obj1 = {};
                console.log(val, val.find('input[api=value]').val(), val.find('input[api=code]').val());
                obj1.text = val.find('input[api=value]').val();
                obj1.code = val.find('input[api=code]').val();
                obj.data.push(obj1);
            });
            obj.data = JSON.stringify(obj.data);
            if (flag) {
                return obj;
            } else {
                return false;
            }
        }
    }, {
        key: 'render',
        value: function render(value) {
            console.log(value);
            var that = this;
            that.dom.find('.xialaname').val(value.name);
            if (JSON.parse(value.parameter).isdefault) {
                that.dom.find('.isdefault').click();
            }
            JSON.parse(value.data).forEach(function (val, idx) {
                if (idx != JSON.parse(value.data).length - 1) {
                    that.dom.find('.icon-tianjia').click();
                }
                that.dom.find('.item' + (idx * 1 + 1) + 'value').val(val.text);
                that.dom.find('.item' + (idx * 1 + 1) + 'code').val(val.code);
            });
            value.tagList.forEach(function (val, idx) {
                var label = '<span class="labelitem" dataid="' + val.id + '">\n' + '                            <label>' + val.text + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
            });
            that.bindlabeldelete();
        }
    }, {
        key: 'labelul',
        value: function labelul(value) {
            var that = this;
            var html = '';
            if (value) {
                value.forEach(function (val, idx) {
                    html += '<li class="labelli" dataid="' + val.id + '">' + val.text + '</li>';
                });
                that.dom.find('.labelul').html(html);
                that.dom.find('.labelli').on('click', function () {
                    ES.selctorDoc(this).parent().html('');
                    that.createlabel(ES.selctorDoc(this).html(), ES.selctorDoc(this).attr('dataid'));
                });
            } else {
                that.dom.find('.labelul').html('');
            }
        }
    }, {
        key: 'createlabel',
        value: function createlabel(value, value2) {
            var that = this;
            that.hasinput.tagList = '';
            if (that.dom.find('.mask').dom) that.dom.find('.mask').addClass('hide');
            that.dom.find('.labelul').html('');
            that.dom.find('.tips').css({ 'color': '#666' });
            if (that.dom.find('.labelitem').dom && that.dom.find('.labelitem').dom.length >= 10) {
                that.dom.find('.tips').css({ 'color': 'red' });
                that.dom.find('.labelsinput').val('');
            } else {
                var label = '<span class="labelitem" dataid="' + value2 + '">\n' + '                            <label>' + value + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
                if (!value2) {
                    that.event._dispatch('controls.createlabel', { val: that.dom.find('.labelsinput').val() });
                }
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.bindlabeldelete();
                that.dom.find('.labelsinput').val('');
                that.event._dispatch('controls.heightchange');
                that.hasinput.tagList = 'yes';
            }
        }
    }, {
        key: 'setid',
        value: function setid(value1, value2) {
            var that = this;
            that.dom.find('.labelitem').dom.forEach(function (val, idx) {
                if (val.find('label').html() == value2) {
                    val.attr('dataid', value1);
                }
            });
        }
    }, {
        key: 'getisinput',
        value: function getisinput() {
            return this.hasinput;
        }
    }]);

    return selectcontrols;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = selectcontrols;

/***/ }),

/***/ 770:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(771);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./selectcontrols.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./selectcontrols.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 771:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".selectcontrols {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.selectcontrols .inputLine {\n  margin-left: 60px;\n  margin-bottom: 20px;\n}\n.selectcontrols .inputLine > span {\n  width: 50px;\n  white-space: nowrap;\n}\n.selectcontrols .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 100px;\n  padding-left: 20px;\n  margin-right: 10px;\n}\n.selectcontrols .inputLine .texttype {\n  display: inline-block;\n}\n.selectcontrols .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.selectcontrols .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.selectcontrols .inputLine .wspan {\n  width: 100px;\n}\n.selectcontrols .inputLine .winput {\n  width: 250px;\n}\n.selectcontrols .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n  position: relative;\n}\n.selectcontrols .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.selectcontrols .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.selectcontrols .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.selectcontrols .labelsarea > span span {\n  width: 22px;\n  height: 22px;\n  text-align: center;\n  background: red;\n  position: relative;\n}\n.selectcontrols .labelsarea > span span:hover {\n  color: darkred;\n}\n.selectcontrols .labelsarea > span span .icon-guanbi {\n  top: 0px;\n  right: 4px;\n}\n.selectcontrols .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.selectcontrols .labelsarea .labelul {\n  position: absolute;\n  width: 95%;\n  background: #fff;\n  border-left: 1px solid #e8e8e8;\n  border-right: 1px solid #e8e8e8;\n}\n.selectcontrols .labelsarea .labelul .labelli {\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #e8e8e8;\n  cursor: pointer;\n}\n.selectcontrols .labelsarea .labelul .labelli:hover {\n  background: #ECF3F4;\n}\n.selectcontrols .remarkline {\n  margin-top: 60px;\n}\n.selectcontrols .remarkline > span {\n  vertical-align: top;\n}\n.selectcontrols .selectparam {\n  margin-left: 63px;\n  margin-top: 40px;\n}\n.selectcontrols .selectparam > span {\n  margin-right: 20px;\n}\n.selectcontrols {\n  position: relative;\n}\n.selectcontrols .icon-tianjia {\n  color: #4c9fa9;\n  position: absolute;\n  left: 560px;\n  bottom: 30px;\n  z-index: 1000;\n  cursor: pointer;\n}\n.selectcontrols .icon-shanchu {\n  color: red;\n  cursor: pointer;\n  margin-left: 100px;\n}\n.selectcontrols .itemarea {\n  position: relative;\n}\n.selectcontrols .itemarea .item > p {\n  display: inline-block;\n}\n.selectcontrols .itemarea .item > p:nth-child(2n+1) {\n  margin-left: 80px;\n}\n.selectcontrols .itemarea .item > p:nth-child(2n) {\n  margin-left: 20px;\n}\n.selectcontrols .required {\n  left: 400px;\n  top: 8px;\n}\n.selectcontrols .item .required {\n  left: 65px;\n  top: 36px;\n}\n", ""]);

// exports


/***/ }),

/***/ 772:
/***/ (function(module, exports) {

module.exports = "<div class=\"selectcontrols hide\"> <div class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span class=wspan>下拉菜单标题：</span> <input type=text class=\"xialaname inputBox winput\" check=empty /> </div> <div class=selectmain> <ul class=itemarea> <i class=\"iconfont icon-tianjia\"></i> <li class=item> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>选项1</span> <input type=text class=\"item1value inputBox\" check=empty api=value /> </p> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>默认值</span> <input type=text class=\"item1code inputBox\" check=empty|num api=code reg=/^[0-9]*$/ error=请输入大于等于0的整数 /> <i class=\"iconfont icon-shanchu hide\"></i> </p> </li> </ul> <div class=selectparam> <i class=\"isdefault check-box\"></i> <span>是否要设置默认值</span> <span>提示：设置的默认值是选项1</span> </div> <div class=\"inputLine remarkline\"> <span>标签：</span> <div class=labelsarea> <input type=text class=labelsinput /> <ul class=labelul> </ul> </div> <span class=tips>最多可添加10个标签</span> </div> </div> </div> ";

/***/ }),

/***/ 773:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(774);
// var html = require('./tpl.html')

var checkboxcontrols = function (_Interstellar$moduleB) {
    _inherits(checkboxcontrols, _Interstellar$moduleB);

    function checkboxcontrols(app, dom, value, addMode) {
        _classCallCheck(this, checkboxcontrols);

        var _this = _possibleConstructorReturn(this, (checkboxcontrols.__proto__ || Object.getPrototypeOf(checkboxcontrols)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(776);
        _this.name = "checkboxcontrols";
        return _this;
    }

    _createClass(checkboxcontrols, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            this.bindcheckboxli();
            this.addevent();
            this.hasinput = {};
            console.log(this.nowParam, 'fffff');
            this.dom.find('.inputBox').on('change', function () {
                that.hasinput[ES.selctorDoc(this).attr('class')] = ES.selctorDoc(this).val();
            });
        }
    }, {
        key: 'addevent',
        value: function addevent() {
            var that = this;
            that.dom.find('.labelsinput').on('keydown', function (e) {
                var keyCode = e.keyCode;
                if (event.keyCode === 13) {
                    if (ES.selctorDoc(this).val() != '') {
                        that.createlabel(ES.selctorDoc(this).val());
                    }
                }
            });
            that.dom.find('.labelsarea').on('blur', function () {
                if (ES.selctorDoc(this).val() != '') {
                    that.createlabel(ES.selctorDoc(this).val());
                }
            });
            that.dom.find('.labelsarea').on('click', function () {
                // that.dom.find('.labelsinput').focus();
                $('.labelsinput').focus();
            });
            that.dom.find('.labelsinput').on('input', function () {
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.event._dispatch('controls.inputlabel', { val: ES.selctorDoc(this).val() });
            });
            that.dom.find('.check-box').on('click', function () {
                if (ES.selctorDoc(this).hasClass('choose')) {
                    ES.selctorDoc(this).removeClass('choose');
                } else {
                    ES.selctorDoc(this).addClass('choose');
                }
            });
        }
    }, {
        key: 'createlabel',
        value: function createlabel(value, value2) {
            var that = this;
            that.hasinput.tagList = '';
            if (that.dom.find('.mask').dom) that.dom.find('.mask').addClass('hide');
            that.dom.find('.labelul').html('');
            that.dom.find('.tips').css({ 'color': '#666' });
            if (that.dom.find('.labelitem').dom && that.dom.find('.labelitem').dom.length >= 10) {
                that.dom.find('.tips').css({ 'color': 'red' });
                that.dom.find('.labelsinput').val('');
            } else {
                var label = '<span class="labelitem" dataid="' + value2 + '">\n' + '                            <label>' + value + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
                if (!value2) {
                    that.event._dispatch('controls.createlabel', { val: that.dom.find('.labelsinput').val() });
                }
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.bindlabeldelete();
                that.dom.find('.labelsinput').val('');
                that.event._dispatch('controls.heightchange');
                that.hasinput.tagList = 'yes';
            }
        }
    }, {
        key: 'bindlabeldelete',
        value: function bindlabeldelete() {
            var that = this;
            that.dom.find('.labelitem .icon-guanbi').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
            });
        }
    }, {
        key: 'bindcheckboxli',
        value: function bindcheckboxli() {
            var that = this;
            that.dom.find('.icon-tianjia').on('click', function () {
                that.dom.find('.itemarea').append('<li class="item">\n' + '<p class="inputLine" redlabel="inputBox">' + '                    <label class="redstar">*</label>' + '                    <span class="num">选项<label>' + (that.dom.find('.checkboxmain .item').dom.length + 1) + '</label></span>\n' + '                    <input type="text" class="item' + (that.dom.find('.checkboxmain .item').dom.length + 1) + 'value inputBox" redlabel="inputBox" check="empty" api="value"/>\n' + '</p>' + '<p class="inputLine" redlabel="inputBox">' + '<label class="redstar">*</label>\n' + '                <span>默认值</span>\n' + '                <input type="text" class="item' + (that.dom.find('.checkboxmain .item').dom.length + 1) + 'code inputBox" check="empty|num" api="code" reg ="/^[0-9]*$/" error="请输入大于等于0的整数"/>' + '                    <i class="iconfont icon-shanchu"></i>\n' + '                </p>' + '</li>');
                that.dom.find('.icon-tianjia').off('click');
                that.dom.find('.itemarea .check-box').off('click');
                that.dom.find('.itemarea .check-box').on('click', function () {
                    if (ES.selctorDoc(this).hasClass('choose')) {
                        ES.selctorDoc(this).removeClass('choose');
                    } else {
                        ES.selctorDoc(this).addClass('choose');
                    }
                });
                if (that.dom.find('.item').dom.length > 1 && that.nowParam.type !== 'correct') {
                    that.dom.find('.icon-shanchu').removeClass('hide');
                }
                that.bindcheckboxli();
                that.event._dispatch('controls.heightchange');
            });
            that.dom.find('.icon-shanchu').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
                if (that.dom.find('.item').dom.length < 2) {
                    that.dom.find('.icon-shanchu').addClass('hide');
                }
                that.dom.find('.item').dom.forEach(function (val, idx) {
                    console.log(ES.selctorDoc(val).dom, 'number');
                    ES.selctorDoc(val).dom.find('.num label').html(idx + 1 + '');
                });
                that.event._dispatch('controls.heightchange');
            });
        }
    }, {
        key: 'checkrequired',
        value: function checkrequired() {
            var that = this;
            console.log(that.dom.find('.inputLine').dom.length);
            that.dom.find('.inputLine').dom.forEach(function (val, idx) {
                val.find('.' + val.attr('redlabel')).removeClass('redborder');
                val.find('.required').remove();
                console.log(Tool.checkForm(ES.selctorDoc(val).dom, 'red'));
                if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                    val.find('.' + val.attr('redlabel')).addClass('redborder');
                    val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                }
            });
            if (that.dom.find('.redborder').dom) {
                return false;
            } else {
                var result = that.returndata();
                if (result) {
                    return result;
                } else {
                    return false;
                }
            }
        }
    }, {
        key: 'returndata',
        value: function returndata() {
            var that = this;
            var obj = {};
            obj.type = 'checkbox';
            obj.name = that.dom.find('.checkboxname').val();
            var arr = [];
            if (that.dom.find('.labelsarea .labelitem').dom) {
                that.dom.find('.labelsarea .labelitem').dom.forEach(function (val, idx) {
                    if (val.attr('dataid')) {
                        arr.push(parseInt(val.attr('dataid')));
                    }
                });
            }
            obj.tagIdList = arr;
            obj.data = [];
            obj.parameter = {};
            obj.parameter.hasnull = that.dom.find('.nullarea i').hasClass('choose');
            obj.parameter = JSON.stringify(obj.parameter);
            var tempStr = ',';
            var tempStr1 = ',';
            var flag = true;
            that.dom.find('.itemarea li').dom.forEach(function (val, idx) {
                if (tempStr.lastIndexOf(',' + val.find('input[api=code]').val() + ',') != -1) {
                    val.find('input[api=code]').addClass('redborder');
                    val.find('input[api=code]').val('');
                    val.find('input[api=code]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                if (tempStr1.lastIndexOf(',' + val.find('input[api=value]').val() + ',') != -1) {
                    val.find('input[api=value]').addClass('redborder');
                    val.find('input[api=value]').val('');
                    val.find('input[api=value]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                tempStr += val.find('input[api=code]').val() + ',';
                tempStr1 += val.find('input[api=value]').val() + ',';
                var obj1 = {};
                obj1.text = val.find('input[api=value]').val();
                obj1.code = val.find('input[api=code]').val();
                obj.data.push(obj1);
            });
            obj.data = JSON.stringify(obj.data);
            if (flag) {
                return obj;
            } else {
                return false;
            }
        }
    }, {
        key: 'render',
        value: function render(value) {
            var that = this;
            that.dom.find('.checkboxname').val(value.name);
            JSON.parse(value.data).forEach(function (val, idx) {
                if (idx != JSON.parse(value.data).length - 1) {
                    that.dom.find('.icon-tianjia').click();
                }
                that.dom.find('.item' + (idx * 1 + 1) + 'value').val(val.text);
                that.dom.find('.item' + (idx * 1 + 1) + 'code').val(val.code);
            });
            if (JSON.parse(value.parameter).hasnull) {
                that.dom.find('.nullarea i').addClass('choose');
            }
            value.tagList.forEach(function (val, idx) {
                var label = '<span class="labelitem" dataid="' + val.id + '">\n' + '                            <label>' + val.text + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
            });
            that.bindlabeldelete();
        }
    }, {
        key: 'labelul',
        value: function labelul(value) {
            var that = this;
            var html = '';
            if (value) {
                value.forEach(function (val, idx) {
                    html += '<li class="labelli" dataid="' + val.id + '">' + val.text + '</li>';
                });
                that.dom.find('.labelul').html(html);
                that.dom.find('.labelli').on('click', function () {
                    ES.selctorDoc(this).parent().html('');
                    that.createlabel(ES.selctorDoc(this).html(), ES.selctorDoc(this).attr('dataid'));
                });
            } else {
                that.dom.find('.labelul').html('');
            }
        }
    }, {
        key: 'setid',
        value: function setid(value1, value2) {
            var that = this;
            that.dom.find('.labelitem').dom.forEach(function (val, idx) {
                if (val.find('label').html() == value2) {
                    val.attr('dataid', value1);
                }
            });
        }
    }, {
        key: 'getisinput',
        value: function getisinput() {
            return this.hasinput;
        }
    }]);

    return checkboxcontrols;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = checkboxcontrols;

/***/ }),

/***/ 774:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(775);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./checkboxcontrols.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./checkboxcontrols.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 775:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".checkboxarea {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.checkboxarea .inputLine {\n  margin-left: 60px;\n  margin-bottom: 20px;\n}\n.checkboxarea .inputLine > span {\n  width: 50px;\n  white-space: nowrap;\n}\n.checkboxarea .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 100px;\n  padding-left: 20px;\n  margin-right: 10px;\n}\n.checkboxarea .inputLine .texttype {\n  display: inline-block;\n}\n.checkboxarea .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.checkboxarea .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.checkboxarea .inputLine .wspan {\n  width: 100px;\n}\n.checkboxarea .inputLine .winput {\n  width: 250px;\n}\n.checkboxarea .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n  position: relative;\n}\n.checkboxarea .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.checkboxarea .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.checkboxarea .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.checkboxarea .labelsarea > span span {\n  width: 22px;\n  height: 22px;\n  text-align: center;\n  background: red;\n  position: relative;\n}\n.checkboxarea .labelsarea > span span:hover {\n  color: darkred;\n}\n.checkboxarea .labelsarea > span span .icon-guanbi {\n  top: 0px;\n  right: 4px;\n}\n.checkboxarea .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.checkboxarea .labelsarea .labelul {\n  position: absolute;\n  width: 95%;\n  background: #fff;\n  border-left: 1px solid #e8e8e8;\n  border-right: 1px solid #e8e8e8;\n}\n.checkboxarea .labelsarea .labelul .labelli {\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #e8e8e8;\n  cursor: pointer;\n}\n.checkboxarea .labelsarea .labelul .labelli:hover {\n  background: #ECF3F4;\n}\n.checkboxarea .remarkline {\n  margin-top: 60px;\n}\n.checkboxarea .remarkline > span {\n  vertical-align: top;\n}\n.checkboxparam {\n  margin-left: 63px;\n  margin-top: 40px;\n}\n.checkboxparam > span {\n  margin-right: 20px;\n}\n.checkboxarea {\n  position: relative;\n}\n.checkboxarea .icon-tianjia {\n  color: #4c9fa9;\n  position: absolute;\n  left: 560px;\n  bottom: 30px;\n  cursor: pointer;\n  z-index: 1000;\n}\n.checkboxarea .icon-shanchu {\n  color: red;\n  cursor: pointer;\n  margin-left: 100px;\n}\n.checkboxarea .itemarea {\n  position: relative;\n}\n.checkboxarea .itemarea .item > p {\n  display: inline-block;\n}\n.checkboxarea .itemarea .item > p:nth-child(2n+1) {\n  margin-left: 80px;\n}\n.checkboxarea .itemarea .item > p:nth-child(2n) {\n  margin-left: 20px;\n}\n.checkboxarea .ishuchi {\n  display: inline-block;\n  margin-left: 80px;\n}\n.checkboxarea .nullarea {\n  margin-left: 60px;\n  margin-top: 30px;\n}\n.checkboxarea .required {\n  left: 400px;\n  top: 8px;\n}\n.checkboxarea .item .required {\n  left: 65px;\n  top: 36px;\n}\n", ""]);

// exports


/***/ }),

/***/ 776:
/***/ (function(module, exports) {

module.exports = "<div class=\"checkboxarea checkboxcontrols hide\"> <div class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span class=wspan>复选组标题：</span> <input type=text class=\"checkboxname inputBox winput\" check=empty /> </div> <div class=checkboxmain> <ul class=itemarea> <i class=\"iconfont icon-tianjia\"></i> <li class=item> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>选项1</span> <input type=text class=\"item1value inputBox\" check=empty api=value /> </p> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>默认值</span> <input type=text class=\"item1code inputBox\" check=empty|num api=code reg=/^[0-9]*$/ error=请输入大于等于0的整数 /> <i class=\"iconfont icon-shanchu hide\"></i> </p> </li> </ul> <div class=nullarea> <i class=\"check-box mutex\"></i> <span>是否设置“无”选项&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此选项为互斥效果</span> </div> <div class=\"inputLine remarkline\"> <span>标签：</span> <div class=labelsarea> <input type=text class=labelsinput /> <ul class=labelul> </ul> </div> <span class=tips>最多可添加10个标签</span> </div> </div> </div>";

/***/ }),

/***/ 787:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(788);

var createcomponent = function (_Interstellar$modalBa) {
    _inherits(createcomponent, _Interstellar$modalBa);

    function createcomponent(app, dom, value, addMode) {
        _classCallCheck(this, createcomponent);

        var _this = _possibleConstructorReturn(this, (createcomponent.__proto__ || Object.getPrototypeOf(createcomponent)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(790);
        _this.name = 'createcomponent';
        return _this;
    }

    _createClass(createcomponent, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            this.flag = true;
            this.yymcdata = [{
                val: '医院1',
                idx: '1'
            }, {
                val: '医院2',
                idx: '2'
            }];
            console.log(this.api, 'this.api');
            this.type = this.api.type;
            this.componentId = this.api.componentid;
            this.apiData = {};
            this.nowcontrols = null;
            this.dom.find('.component').on('click', function () {
                if (ES.selctorDoc(this).hasClass('disabled')) return;
                var textcontrol = __webpack_require__(765);
                var selectcontrol = __webpack_require__(769);
                var checkboxcontrol = __webpack_require__(773);
                var obj = {
                    text: textcontrol,
                    select: selectcontrol,
                    radiobox: selectcontrol,
                    checkbox: checkboxcontrol
                };
                that.nowcontrols = that.app.loadModule(obj[ES.selctorDoc(this).attr('type')], that.dom.find('.mainarea'), { type: that.type, controlType: ES.selctorDoc(this).attr('type') });
                if (that.type !== 'view') {
                    that.dom.find('.save').removeClass('hide');
                }
                that.nowcontrols.event._addEvent('controls.heightchange', function () {
                    that.initscroll();
                });
                that.nowcontrols.event._addEvent('controls.createlabel', function (value) {
                    that.event._dispatch('component.createlabel', { data: value });
                });
                that.nowcontrols.event._addEvent('controls.inputlabel', function (value) {
                    setTimeout(function () {
                        that.event._dispatch('component.inputlabel', { data: value });
                    }, 1000);
                });
                that.flag = false;
                that.dom.find('.component').addClass('hide');
                ES.selctorDoc(this).removeClass('hide');
                that.apiData = {};
                that.apiData.type = ES.selctorDoc(this).attr('type');
                that.dom.find('.' + ES.selctorDoc(this).attr('type') + 'area').removeClass('hide');
                that.dom.find('.component').addClass('disabled');
                that.initscroll();
            });
            that.dom.find('.mask').on('click', function () {
                that.nowcontrols.labelul('');
                that.dom.find('.mask').addClass('hide');
            });
            that.dom.find('.icon-guanbi').on('click', function () {
                that.close();
            });
            this.dom.find('.cancel').on('click', function () {
                that.dom.find('.mask').addClass('hide');
                that.dom.find('.component').removeClass('disabled');
                if (that.type == 'edit' || that.type == 'view' || that.type == 'correct') {
                    that.close();
                } else {
                    if (that.nowcontrols !== null) {
                        var data = that.getisinput();
                        for (var i in data) {
                            console.log(data);
                            if (data[i] !== '' && data[i] != undefined) {
                                that.app.alert.show({
                                    title: ' ',
                                    msg: '内容有更新，返回将不做保存。',
                                    close: true,
                                    sure: function sure() {
                                        that.dom.find('.mainarea').html('');
                                        that.dom.find('.component').removeClass('hide');
                                        that.initscroll();
                                        that.nowcontrols = null;
                                        that.dom.find('.save').addClass('hide');
                                    }
                                });
                                return false;
                            } else {
                                continue;
                            }
                        }
                        that.dom.find('.mainarea').html('');
                        that.dom.find('.component').removeClass('hide');
                        that.initscroll();
                        that.nowcontrols = null;
                        that.dom.find('.save').addClass('hide');
                    } else {
                        that.close();
                    }
                }
            });
            that.dom.find('.save').on('click', function () {
                that.apiData = that.nowcontrols.checkrequired();
                if (that.apiData) {
                    if (that.type == 'new') {
                        that.event._dispatch('component.new', { data: that.apiData });
                    } else {
                        console.log(that.apiData, 'that.apiData', that.componentId);
                        that.apiData.id = that.componentId;
                        that.event._dispatch('component.edit', { data: that.apiData });
                    }
                }
            });
            switch (this.type) {
                case 'edit':
                    that.dom.find('.bigtitle').html('编辑标注字段');
                    that.dom.find('.stitle').addClass('hide');
                    that.setData(that.api.data);
                    break;
                case 'view':
                    that.dom.find('.bigtitle').html('查看标注字段');
                    that.dom.find('.save').addClass('hide');
                    that.dom.find('.cancel').html('关闭');
                    that.dom.find('.stitle').addClass('hide');
                    that.setData(that.api.data);
                    break;
                case 'editlabel':
                    that.dom.find('.bigtitle').html('编辑标签');
                    that.dom.find('.stitle').addClass('hide');
                    that.setData(that.api.data);
                    break;
                case 'correct':
                    that.dom.find('.bigtitle').html('修正标注');
                    that.dom.find('.stitle').addClass('hide');
                    that.setData(that.api.data);
                    break;
            }
        }
    }, {
        key: 'createlabel',
        value: function createlabel(res, value) {
            var that = this;
            that.nowcontrols.setid(res.data.id, value.data.val);
        }
    }, {
        key: 'showlabel',
        value: function showlabel(res) {
            var that = this;
            if (res.data.list.length > 0) {
                that.nowcontrols.labelul(res.data.list);
                that.dom.find('.mask').removeClass('hide');
            } else {
                that.nowcontrols.labelul('');
                that.dom.find('.mask').addClass('hide');
            }
        }
    }, {
        key: 'setData',
        value: function setData(value) {
            var that = this;
            var json = {
                id: parseInt(that.componentId)
            };
            that.dom.find('.component[type="' + value.type + '"]').click();
            that.nowcontrols.render(value);
            that.dom.find('.component').off('click');
            switch (that.type) {
                case 'view':
                    if (that.dom.find('.iconfont').dom) {
                        that.dom.find('.mainarea .iconfont').addClass('hide');
                    }
                    that.dom.find('.labelitem span').css({ 'background': '#fff' });
                    if (that.dom.find('.check-box').dom) {
                        that.dom.find('.check-box').dom.forEach(function (val, idx) {
                            if (val.hasClass('choose')) {
                                val.removeClass('choose');
                                that.dom.find('.check-box').off('click');
                                val.addClass('choose');
                            } else {
                                that.dom.find('.check-box').off('click');
                            }
                        });
                    }
                    that.dom.find('.isdefault').off('click');
                    that.dom.find('input').attr('disabled', 'disabled');
                    that.nowcontrols.drop.disable();
                    break;
                case 'edit':
                    break;
                case 'editlabel':
                    that.dom.find('.inputLine').addClass('hide');
                    that.dom.find('.remarkline').removeClass('hide');
                    that.dom.find('.selectparam').addClass('hide');
                    that.dom.find('.itemarea').addClass('hide');
                    that.dom.find('.nullarea').addClass('hide');
                    that.initscroll();
                    break;
                case 'correct':
                    if (that.dom.find('input[api="code"]').dom) {
                        that.dom.find('input[api="code"]').attr('disabled', 'disabled');
                    }
                    that.dom.find('.icon-shanchu').addClass('hide');
                    break;
            }
        }
    }, {
        key: 'initscroll',
        value: function initscroll() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }
            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            ES.selctorDoc('.createcomponent').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }, {
        key: 'getisinput',
        value: function getisinput() {
            return this.nowcontrols.getisinput();
        }
    }]);

    return createcomponent;
}(Interstellar.modalBase);

module.exports = createcomponent;

/***/ }),

/***/ 788:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(789);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./createcomponent.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./createcomponent.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 789:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".createcom {\n  background: #fff;\n  height: 500px;\n  font-size: 14px;\n  overflow: hidden;\n  position: relative;\n  width: 850px;\n  margin-left: -400px;\n  margin-top: -250px;\n}\n.createcom .icon-guanbi {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n}\n.createcom .createcomponent {\n  height: 340px;\n  overflow: hidden;\n  position: relative;\n}\n.createcom .createcomponent > .scroll {\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  padding-bottom: 50px;\n}\n.createcom .bigtitle {\n  font-size: 18px;\n  margin: 30px;\n}\n.createcom .componentmain {\n  margin-left: 60px;\n  font-size: 16px;\n}\n.createcom .componentmain .component {\n  cursor: pointer;\n  display: inline-block;\n  margin: 30px 50px;\n}\n.createcom .componentmain .component i {\n  color: #4c9fa9;\n  font-size: 16px;\n}\n.createcom .details {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.createcom .details .inputLine {\n  margin-left: 60px;\n  margin-bottom: 10px;\n}\n.createcom .details .inputLine > span {\n  width: 100px;\n}\n.createcom .details .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 250px;\n  padding-left: 20px;\n}\n.createcom .details .inputLine .texttype {\n  display: inline-block;\n}\n.createcom .details .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.createcom .details .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.createcom .details .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n}\n.createcom .details .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.createcom .details .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.createcom .details .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.createcom .details .labelsarea > span span {\n  width: 22px;\n  text-align: center;\n  background: red;\n  height: 22px;\n}\n.createcom .details .labelsarea > span span:hover {\n  color: darkred;\n}\n.createcom .details .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.createcom .details .remarkline {\n  margin-top: 60px;\n}\n.createcom .details .remarkline > span {\n  vertical-align: top;\n}\n.createcom .btnarea {\n  height: 40px;\n  bottom: 30px;\n  text-align: center;\n}\n.createcom .btnarea .biaozhubtn {\n  height: 40px;\n  width: 120px;\n  line-height: 40px;\n  margin-right: 30px;\n}\n.createcom .btnarea .save {\n  background: #4c9fa9;\n  color: #fff;\n}\n.createcom .btnarea .cancel {\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n.createcom .mask {\n  position: fixed;\n  width: 2000px;\n  height: 2000px;\n  top: 0;\n  left: 0;\n  z-index: 10;\n}\n.createcom .labelul {\n  z-index: 11;\n}\n.createcom input {\n  background: #fff;\n}\n", ""]);

// exports


/***/ }),

/***/ 790:
/***/ (function(module, exports) {

module.exports = "<div class=\"modal createcom\"> <div class=bigtitle>创建标注字段</div> <i class=\"iconfont icon-guanbi\"></i> <div class=createcomponent> <div class=scroll> <div class=componentmain> <p class=stitle>添加选择控件</p> <div class=\"text component\" type=text> <i class=\"iconfont icon-wenbenkuang\"></i> <span>文本框</span> </div> <div class=\"select component\" type=select> <i class=\"iconfont icon-xialacaidan\"></i> <span>下拉菜单</span> </div> <div class=\"radiobox component\" type=radiobox> <i class=\"iconfont icon-xuanzhong\"></i> <span>单选框</span> </div> <div class=\"checkbox component\" type=checkbox> <i class=\"iconfont icon-duoxuankuang\"></i> <span>复选组</span> </div> </div> <div class=mainarea> </div> <div class=\"mask hide\"></div> </div> </div> <div class=btnarea> <a class=\"biaozhubtn save hide\">保存</a> <a class=\"biaozhubtn cancel\">取消</a> </div> </div> ";

/***/ }),

/***/ 837:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(838);
// var html = require('./tpl.html')

var bztoollist = function (_Interstellar$moduleB) {
    _inherits(bztoollist, _Interstellar$moduleB);

    function bztoollist(app, dom, value, addMode) {
        _classCallCheck(this, bztoollist);

        var _this = _possibleConstructorReturn(this, (bztoollist.__proto__ || Object.getPrototypeOf(bztoollist)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(840);
        _this.name = "bztoollist";
        _this.data = [];
        return _this;
    }

    _createClass(bztoollist, [{
        key: 'complete',
        value: function complete() {
            this.multiliModule = __webpack_require__(841);
        }
    }, {
        key: 'setData',
        value: function setData(value, type) {
            if (value.length != 0) {
                for (var i = 0; i < value.length; i++) {
                    this.addli(value[i], type);
                }
            }
        }
    }, {
        key: 'getData',
        value: function getData() {
            var _this2 = this;

            var that = this;
            var temp = [];
            console.log(this.data);
            var tempstr = ',';
            for (var i = 0; i < this.data.length; i++) {
                if (this.data[i].action == 3 && !this.data[i].id) {} else {
                    var _ret = function () {
                        console.log(that.data[i].type, 'that.data[i].type');
                        if (tempstr.lastIndexOf(',' + that.data[i].type + ',') !== -1 && that.data[i].type && _this2.nowParam.protype !== 'audit') {
                            that.app.alert.show({
                                title: ' ',
                                msg: '该影像标注已存在',
                                close: true
                            });
                            that.data[i].type == '';
                            that.ulitem[i].cleartype();
                            return {
                                v: void 0
                            };
                        } else {
                            tempstr += that.data[i].type + ',';
                        }
                        var tempD = { id: that.data[i].id ? that.data[i].id : null, action: that.data[i].id ? that.data[i].action : 1, type: _this2.data[i].type, annotationItemList: _this2.data[i].annotationItemList, toolList: [] };
                        _this2.data[i].toolList.map(function (res) {
                            if (res.action == 3 && !res.id) {} else {
                                tempD.toolList.push(res);
                            }
                        });
                        temp.push(tempD);
                    }();

                    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
                }
            }
            console.log(temp, 'this.data');
            return temp; //this.data
        }
    }, {
        key: 'addli',
        value: function addli(value, type) {
            var _this3 = this;

            console.log(value, 'value');
            this.dom.append('<li class="multili multili' + this.data.length + '"></li>');
            var temp = value ? value : { id: null, action: 1, annotationItemList: [], toolList: [{ id: null, action: 1 }] };
            temp.action = 1;
            var hascomp = false;
            if (value) {
                if (value.id) {
                    temp.action = 2;
                }
                if (value.annotationItemList.length > 0) {
                    hascomp = true;
                }
            }
            this.data.push(temp);
            this.ulitem = {};
            this.ulitem[this.data.length - 1] = this.app.loadModule(this.multiliModule, this.dom.find('.multili' + (this.data.length - 1)), {
                num: this.data.length - 1,
                toolList: temp.toolList,
                data: temp,
                type: type,
                hascomp: hascomp,
                protype: this.nowParam.protype
            });
            this.ulitem[this.data.length - 1].event._addEvent('li.delete', function (value) {
                //console.log('heredelete')
                _this3.dom.find('.multili' + value.num).remove();
                _this3.data[value.num].action = 3;
                _this3.event._dispatch('bztoollist.toolListchange');
            });
            this.ulitem[this.data.length - 1].event._addEvent('li.datachange', function (value) {
                console.log(value, 'li.datachange');
                _this3.data[value.num]['type'] = value.data.type;
                var newarr = value.data.toolList.filter(function (val) {
                    return val != undefined;
                });
                _this3.data[value.num]['toolList'] = newarr;
                _this3.event._dispatch('bztoollist.toolListchange');
            });
            this.ulitem[this.data.length - 1].event._addEvent('li.specialchange', function (value) {
                _this3.event._dispatch('bztoollist.specialchange');
            });
            this.ulitem[this.data.length - 1].event._addEvent('li.adddata', function (v1) {
                _this3.event._dispatch('bztoollist.add', v1);
            });
            this.ulitem[this.data.length - 1].event._addEvent('li.showdata', function (v1) {
                _this3.event._dispatch('bztoollist.show', v1);
            });
            this.event._dispatch('bztoollist.toolListchange');
        }
    }, {
        key: 'disable',
        value: function disable() {
            //console.log(ES.selctorDoc('.icon-shanchu'))
            ES.selctorDoc('.icon-shanchu').addClass('hide');
            ES.selctorDoc('.icon-tianjia').addClass('hide');
            ES.selctorDoc('.actionul .bzdata').addClass('hide');
        }
    }]);

    return bztoollist;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = bztoollist;

/***/ }),

/***/ 838:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(839);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./bztoollist.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./bztoollist.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 839:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".bztoolli {\n  position: relative;\n}\n.bztoolli .icon-shanchu {\n  position: absolute;\n  margin-left: 10px;\n  color: red;\n  cursor: pointer;\n  font-size: 18px;\n}\n.bztoolli .borderarea {\n  border: 1px dashed #e8e8e8;\n  padding: 20px;\n  border-radius: 4px;\n  display: inline-block;\n  width: 93%;\n}\n.bztoolli .borderarea > div {\n  display: inline-block;\n  margin-left: 20px;\n}\n.bztoolli .borderarea .bzlx {\n  vertical-align: top;\n}\n.bztoolli .borderarea .toolarea {\n  display: inline-block;\n}\n.bztoolli .borderarea .toolarea .toolitem > div {\n  display: inline-block;\n  margin-left: 20px;\n}\n.bztoolli .borderarea .toolarea .mt10 {\n  margin-top: 10px;\n}\n.bztoolli .actionarea {\n  float: right;\n  margin-right: 20px;\n  margin-top: 10px;\n  position: relative;\n}\n.bztoolli .actionarea .icon-caozuo {\n  cursor: pointer;\n}\n.bztoolli .actionarea .actionul {\n  position: absolute;\n  width: 120px;\n  background: #fff;\n  text-align: center;\n  left: -50px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px 2px rgba(180, 180, 180, 0.5);\n  z-index: 20;\n}\n.bztoolli .actionarea .actionul .actionli {\n  height: 40px;\n  line-height: 40px;\n  cursor: pointer;\n}\n.bztoolli .actionarea .actionul .actionli:hover {\n  background: #ECF3F4;\n}\n.bztoolli .actionarea .mask {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  z-index: 10;\n}\n.bztoolli .bzxlk {\n  display: inline-block;\n}\n.bztoolli .xlk {\n  width: 130px!important;\n}\n.bztoolli .xlk .nowname {\n  width: 90px;\n}\n.bztoolli .adddelli {\n  width: 55px;\n}\n.bztoolli .adddelli i {\n  cursor: pointer;\n  font-size: 16px;\n}\n.bztoolli .adddelli .icon-tianjia {\n  color: #4c9fa9;\n}\n.bztoolli .adddelli .icon-shanchu {\n  color: red;\n}\n", ""]);

// exports


/***/ }),

/***/ 840:
/***/ (function(module, exports) {

module.exports = "";

/***/ }),

/***/ 841:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(842);
// var html = require('./tpl.html')

var bztoolli = function (_Interstellar$moduleB) {
    _inherits(bztoolli, _Interstellar$moduleB);

    function bztoolli(app, dom, value, addMode) {
        _classCallCheck(this, bztoolli);

        var _this = _possibleConstructorReturn(this, (bztoolli.__proto__ || Object.getPrototypeOf(bztoolli)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(844);
        _this.name = "bztoolli";
        return _this;
    }

    _createClass(bztoolli, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            this.dropdown1 = __webpack_require__(638);
            this.bzlx = that.app.loadModule(that.dropdown1, that.dom.find('.bzxlk'), {
                className: 'xlk',
                firstSelect: {
                    val: '病灶类型',
                    idx: ''
                },
                data: Tool.configxlkformat(that.app.constmap.LESION),
                maxshownum: 5,
                input: true
            });
            that.bzlx.event._addEvent('option.click', function (value) {
                that.apidata.type = value.idx;
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
                that.event._dispatch('li.specialchange');
            });
            that.bzlx.event._addEvent('dropDown.clear', function (value) {
                that.apidata.type = '';
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
                that.bzlx.renderHtml(Tool.configxlkformat(that.app.constmap.LESION));
            });
            that.bzlx.event._addEvent('drop.input', function (value) {
                var temp = Tool.configxlkformat(that.app.constmap.LESION).filter(function (val) {
                    console.log(val.val.indexOf(value), val, value);
                    return val.val.indexOf(value.data) >= 0;
                });
                that.bzlx.renderHtml(temp);
            });
            if (that.nowParam.protype == 'audit') {
                that.dom.find('.adddelli').remove();
                that.dom.find('.actionarea').remove();
                that.dom.find('.auditpercent').removeClass('hide');
            }
            this.apidata = {};
            this.apidata.toolList = this.nowParam.toolList ? this.nowParam.toolList : [{ id: null, action: 1 }];
            that.apidata.toolList.filter(function (value) {
                if (value.id) {
                    value.action = 2;
                }
            });
            console.log('================', this.apidata, this.nowParam);
            this.apidata.data = this.nowParam.data;
            this.dom.find('.toolarea').html('');
            //that.addtool(0)
            console.log('wwwwwwwwwwwwww');
            for (var i = 0; i < this.apidata.toolList.length; i++) {
                this.addtool(i);
            }
            console.log(this.apidata);
            if (that.nowParam.hascomp) {
                that.dom.find('.ytjdata').removeClass('hide');
            }
            if (that.apidata.data.type) {
                that.dom.find('.bzlx .option[data-idx="' + that.apidata.data.type + '"]').click();
            }
            if (that.nowParam.type) {
                that.bzlx.disable();
            }

            //删除整个元素
            that.dom.find('.bigdel').on('click', function () {
                that.event._dispatch('li.delete', { num: that.nowParam.num });
            });
            //打开添加标注组件
            that.dom.find('.icon-caozuo').on('click', function () {
                var dom = ES.selctorDoc(this).parent();
                dom.find('.actionul').removeClass('hide');
                dom.find('.mask').removeClass('hide');
            });
            //添加标注组件
            that.dom.find('.bzdata').on('click', function () {
                that.event._dispatch('li.adddata', { num: that.nowParam.num });
                ES.selctorDoc(this).parent().addClass('hide');
                ES.selctorDoc(this).parent().parent().find('.mask').addClass('hide');
            });
            //查看标注组件
            that.dom.find('.ytjdata').on('click', function () {
                that.event._dispatch('li.showdata', { num: that.nowParam.num });
                ES.selctorDoc(this).parent().addClass('hide');
                ES.selctorDoc(this).parent().parent().find('.mask').addClass('hide');
            });
            //关闭添加标注组件
            that.dom.find('.mask').on('click', function () {
                ES.selctorDoc(this).parent().find('.actionul').addClass('hide');
                ES.selctorDoc(this).addClass('hide');
            });
        }
    }, {
        key: 'initli',
        value: function initli(val) {
            console.log(val, 'val');
            var valType = Tool.configxlkformat(this.app.constmap['TOOL_TYPE'])[val] ? Tool.configxlkformat(this.app.constmap['TOOL_TYPE'])[val].type : "";
            //console.log(valType, 'valTypevalType')
            var choose = Tool.configxlkformat(this.app.constmap['TOOL_TYPE']).filter(function (item) {
                return item.idx == valType;
            })[0];
            //console.log(choose)
            var firstSelect = {
                val: '工具',
                idx: ''
                /*if(choose){
                   firstSelect=choose
                }*/

            };var that = this;
            var gongju = this.app.loadModule(that.dropdown1, that.dom.find('.toolitem' + val + ' .tool1'), {
                className: 'xlk',
                firstSelect: firstSelect,
                data: Tool.configxlkformat(that.app.constmap['TOOL_TYPE']),
                maxshownum: 5
            });

            var fztag = this.app.loadModule(that.dropdown1, that.dom.find('.toolitem' + val + ' .fztag'), {
                className: 'xlk',
                firstSelect: {
                    val: '选择辅助Tag',
                    idx: ''
                },
                data: [{
                    val: '',
                    idx: ''
                }]
            });
            //console.log(choose, 'valTypevalType')
            gongju.event._addEvent('option.click', function (value) {
                that.dom.find('.toolitem' + val + ' .notinit').addClass('hide');
                that.dom.find('.choose').removeClass('choose');
                //that.apidata.toolList[val]['property']=null
                that.apidata.toolList[val]['type'] = value.idx;
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
                that.event._dispatch('li.specialchange');
            });
            gongju.event._addEvent('dropDown.clear', function (value) {
                that.dom.find('.toolitem' + val + ' .notinit').addClass('hide');
                that.apidata.toolList[val]['type'] = '';
                that.apidata.toolList[val]['property'] = null;
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
            });
            that.dom.find('.toolitem' + val + ' .adddelli .icon-tianjia').on('click', function () {
                var data = { id: null, action: 1 };
                that.apidata.toolList.push(data);
                that.addtool(that.apidata.toolList.length - 1);
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
            });
            that.dom.find('.toolitem' + val + ' .adddelli .icon-shanchu').on('click', function () {
                that.apidata.toolList[val].action = 3; // undefined
                ES.selctorDoc(this).parent().parent().remove();
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
            });
            that.dom.find('.toolitem' + val + ' .yzsz .check-box').on('click', function () {
                if (ES.selctorDoc(this).hasClass('choose')) {
                    ES.selctorDoc(this).removeClass('choose');
                    //that.dom.find('.toolitem' + val + ' .yzsz')
                    that.dom.find('.toolitem' + val + ' .yzarea').addClass('hide');
                } else {
                    ES.selctorDoc(this).addClass('choose');
                    that.dom.find('.toolitem' + val + ' .yzset').val('');
                    //that.apidata.toolList[val]['property'] = JSON.stringify(tempobj);
                    that.dom.find('.toolitem' + val + ' .yzarea').removeClass('hide');
                }
                console.log();
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
            });
            that.dom.find('.toolitem' + val + ' .canshu').on('change', function () {
                that.apidata.toolList[val]['property'] = ES.selctorDoc(this).val();
                that.event._dispatch('li.datachange', { num: that.nowParam.num, data: that.apidata });
            });
            //console.log(choose, 'valTypevalType', that.nowParam.type)
            if (that.nowParam.type) {
                //console.log(choose, 'valTypevalType', that.nowParam.type)
                gongju.disable();
                //console.log(choose,'valTypevalType',that.dom.find('.hbwidth'),that.dom.find('.yzset'))
                //that.dom.find('.hbwidth').attr('readonly', 'readonly')
                //that.dom.find('.yzset').attr('readonly', 'readonly')
                that.dom.find('.bzdata').addClass('hide');
                if (!that.nowParam.hascomp) {
                    that.dom.find('.actionarea').remove();
                }
                that.dom.find('.icon-shanchu').addClass('hide');
                that.dom.find('.icon-tianjia').addClass('hide');
            }
            //console.log(this.apidata.toolList[val], val)
            that.setToolData(this.apidata.toolList[val], val);
            //console.log('++++++++++++++++++++++')
        }
    }, {
        key: 'setToolData',
        value: function setToolData(value, idx) {
            var that = this;
            console.log(value, +'=========', idx);
            if (value.type) {
                that.dom.find('.toolitem' + idx + ' .option[data-idx="' + value.type + '"]').click();
                if (value.property) {
                    that.dom.find('.canshu').val(value.property);
                }
            }
        }
    }, {
        key: 'addtool',
        value: function addtool(pos) {
            var that = this;
            var html = '<li class="' + (pos != 0 ? "mt10" : "") + ' toolitem toolitem' + pos + '">\n' + '                <div class="inputLine" redlabel="xlk">\n' + '                    <div class="tool1" check="empty"></div>\n' + '                </div>' + '                <div class="adddelli">\n' + '                    <i class="iconfont icon-tianjia" title="继续添加工具"></i>\n' + '                    <i class="iconfont icon-shanchu deltool" title="删除此工具"></i>\n' + '                </div>\n' + '                <div class="fztag  notinit hide"></div>' + '                <div class="auditpercent hide">' + '                    <span>一致性匹配系数：</span>' + '                    <div class="inputLine hide" redlabel="inputBox">\n' + '                        <input type="text" class="canshu inputBox" check="empty|int" reg="/^([1-9]\\d{0,1}|100)$/" error="请输入1-100之间的整数"/>\n' + '                    </div>' + '                    <span>%</span>' + '                </div>' + '            </li>';
            this.dom.find('.toolarea').append(html);
            if (that.nowParam.protype == 'audit') {
                that.dom.find('.auditpercent').removeClass('hide');
                that.dom.find('.auditpercent .inputLine').removeClass('hide');
                that.dom.find('.adddelli').remove();
            }
            this.dom.find('.deltool').eq(0).addClass('hide');
            this.initli(pos);

            //this.render(pos);
        }
    }, {
        key: 'cleartype',
        value: function cleartype() {
            this.bzlx.reset();
        }
    }]);

    return bztoolli;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = bztoolli;

/***/ }),

/***/ 842:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(843);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./bztoolli.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./bztoolli.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 843:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".bztoolli {\n  position: relative;\n}\n.bztoolli .icon-shanchu {\n  position: absolute;\n  margin-left: 10px;\n  color: red;\n  cursor: pointer;\n  font-size: 18px;\n}\n.bztoolli .borderarea {\n  border: 1px dashed #e8e8e8;\n  padding: 20px;\n  border-radius: 4px;\n  display: inline-block;\n  width: 93%;\n}\n.bztoolli .borderarea > div {\n  display: inline-block;\n  margin-left: 20px;\n}\n.bztoolli .borderarea .bzlx {\n  vertical-align: top;\n}\n.bztoolli .borderarea .toolarea {\n  display: inline-block;\n}\n.bztoolli .borderarea .toolarea .toolitem > div {\n  display: inline-block;\n  margin-left: 20px;\n}\n.bztoolli .borderarea .toolarea .mt10 {\n  margin-top: 10px;\n}\n.bztoolli .actionarea {\n  float: right;\n  margin-right: 20px;\n  margin-top: 10px;\n  position: relative;\n}\n.bztoolli .actionarea .icon-caozuo {\n  cursor: pointer;\n}\n.bztoolli .actionarea .actionul {\n  position: absolute;\n  width: 120px;\n  background: #fff;\n  text-align: center;\n  left: -50px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px 2px rgba(180, 180, 180, 0.5);\n  z-index: 20;\n}\n.bztoolli .actionarea .actionul .actionli {\n  height: 40px;\n  line-height: 40px;\n  cursor: pointer;\n}\n.bztoolli .actionarea .actionul .actionli:hover {\n  background: #ECF3F4;\n}\n.bztoolli .actionarea .mask {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  z-index: 10;\n  top: 0;\n  left: 0;\n}\n.bztoolli .bzxlk {\n  vertical-align: top;\n  display: inline-block;\n  margin-top: 5px;\n}\n.bztoolli .xlk {\n  width: 130px!important;\n}\n.bztoolli .xlk .nowname {\n  width: 90px;\n}\n.bztoolli .adddelli {\n  width: 55px;\n}\n.bztoolli .adddelli i {\n  cursor: pointer;\n  font-size: 16px;\n}\n.bztoolli .adddelli .icon-tianjia {\n  color: #4c9fa9;\n}\n.bztoolli .adddelli .icon-shanchu {\n  color: red;\n}\n.bztoolli .inputLine {\n  display: inline-block;\n}\n.bztoolli .inputLine input {\n  height: 30px;\n  line-height: 30px;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n}\n.bztoolli .bzlx .inputLine {\n  vertical-align: top;\n}\n.bztoolli .required {\n  left: 0;\n  top: 25px;\n}\n", ""]);

// exports


/***/ }),

/***/ 844:
/***/ (function(module, exports) {

module.exports = "<div class=bztoolli> <div class=borderarea> <div class=bzlx> <span style=line-height:25px;text-align:center;margin-right:10px>影像标注<br>(病灶类型)</span> <div class=inputLine redlabel=xlk> <div class=bzxlk check=empty></div> </div> </div> <ul class=toolarea> <li class=\"toolitem toolitem1\"> <div class=inputLine redlabel=xlk> <div class=tool1 check=empty></div> </div> <div class=adddelli> <i class=\"iconfont icon-tianjia\" title=继续添加工具></i> <i class=\"iconfont icon-shanchu hide deltool\" title=删除此工具></i> </div> <div class=\"fztag notinit hide\"></div> <div class=\"auditpercent hide\"> <span>一致性匹配系数：</span> <div class=\"inputLine hide\" redlabel=inputBox> <input type=text class=\"canshu inputBox\" check=empty|int reg=/^([1-9]\\d{0,1}|100)$/ /> </div> <span>%</span> </div> </li> </ul> <div class=actionarea> <i class=\"iconfont icon-caozuo\"></i> <ul class=\"actionul hide\"> <li class=\"actionli bzdata\">添加标注组件</li> <li class=\"actionli ytjdata hide\">查看标注组件</li> </ul> <div class=\"mask hide\"></div> </div> </div> <i class=\"iconfont icon-shanchu bigdel\"></i> </div>";

/***/ }),

/***/ 911:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(912);

// var html = require('./tpl.html')

var projectGroupSet = function (_Interstellar$moduleB) {
    _inherits(projectGroupSet, _Interstellar$moduleB);

    function projectGroupSet(app, dom, value, addMode) {
        _classCallCheck(this, projectGroupSet);

        var _this = _possibleConstructorReturn(this, (projectGroupSet.__proto__ || Object.getPrototypeOf(projectGroupSet)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(914);
        _this.name = "projectGroupSet";
        _this.data = [];
        _this.DayToMillisecond = 86400000;
        return _this;
    }

    _createClass(projectGroupSet, [{
        key: 'complete',
        value: function complete() {
            this.index = 0;
            this.liArr = [{ type: 'NON_TIME' }];
            this.objArr = [];
            this.condition = this.nowParam.conditions;
            this.dropdown = __webpack_require__(638);
            this.render();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            console.log(this.nowParam.conditions, 'cin');
            this.dom.find('.groupSet').on('click', function (e) {
                if (_this2.dom.find('.projectGroupSet .item').dom.length < 3) {
                    _this2.addHtml(true);
                    _this2.addli(_this2.index);
                } else {
                    _this2.dom.find('.projectGroupSet .icon-tianjia').after('<span class="required">最多可选择三个聚合条件</span>');
                }
            });
            this.dom.find('.condition').on('click', function (e) {
                console.log(e.target.nodeName, 'target');
                if (e.target.nodeName == 'I') {
                    ES.selctorDoc(e.target).parent().remove();
                    _this2.liArr[ES.selctorDoc(e.target).parent().attr('data-id')].delete = 2;
                }
            });
            this.dom.find('.condition').on('change', function (e) {
                console.log(ES.selctorDoc(e.target).val(), e.target.nodeName, 'target', _this2.liArr);
                if (e.target.nodeName == 'INPUT') {
                    ES.selctorDoc(e.target).removeClass('redborder');
                    console.log(ES.selctorDoc(e.target).parent().parent().attr('data-id'), 'id');
                    _this2.liArr[ES.selctorDoc(e.target).parent().parent().attr('data-id')].limitTime = ES.selctorDoc(e.target).val() == "" ? ES.selctorDoc(e.target).val() : ES.selctorDoc(e.target).val() * _this2.DayToMillisecond;
                    console.log(_this2.liArr, 'af');
                }
            });
            this.addli(this.index);
        }
    }, {
        key: 'errorShow',
        value: function errorShow(msg) {
            this.dom.find('.projectGroupSet .icon-tianjia').after('<span class="required">' + msg + '</span>');
        }
    }, {
        key: 'addHtml',
        value: function addHtml(reset) {
            this.index++;
            var html = '<li class="item item' + this.index + '" data-id="' + this.index + '">\n' + '            <div class="inputLine" redlabel="xlk">\n' + '                <div class="conditions" title="聚合条件" check="empty"></div>\n' + '            </div>' + '            <i class="icon-shanchu iconfont"></i>' + '        </li>';
            this.dom.find('.condition').append(html);
            if (reset) {
                this.liArr[this.index] = { type: 'NON_TIME' };
            }
        }
    }, {
        key: 'addli',
        value: function addli(idx) {
            var _this3 = this;

            var itemobj = {};
            itemobj.conditions = this.app.loadModule(this.dropdown, this.dom.find('.item' + idx + ' .conditions'), {
                className: 'xlk',
                firstSelect: { val: '', idx: '' },
                data: this.condition
            });
            itemobj.conditions.event._addEvent('option.click', function (value) {
                _this3.liArr[idx] = _this3.liArr[idx] ? _this3.liArr[idx] : {};
                _this3.liArr[idx].field = value.idx.split(',')[0];
                _this3.liArr[idx].dataType = value.props;
                if (value.props == 'Date') {
                    _this3.dom.find('.item' + idx + ' .timeType').remove();
                    _this3.dom.find('.item' + idx).append('<div class="inputLine" redlabel="xlk"><div class="timeType" title="时间类型" check="empty"></div></div>');
                    itemobj.timeType = _this3.app.loadModule(_this3.dropdown, _this3.dom.find('.item' + idx + ' .timeType'), {
                        className: 'xlk',
                        firstSelect: { val: '', idx: '' },
                        data: [{ val: '自然时间', idx: 'NATURE_TIME' }, { val: '逻辑时间', idx: 'LOGICAL_TIME' }, { val: '非时间字段', idx: 'NON_TIME' }]
                    });
                    itemobj.timeType.event._addEvent('option.click', function (timeType) {
                        if (_this3.dom.find('.item' + idx + ' .dimensionxlk').dom) {
                            _this3.dom.find('.item' + idx + ' .dimensionxlk').parent().remove();
                        }
                        if (_this3.dom.find('.item' + idx + ' .dimensioninput').dom) {
                            _this3.dom.find('.item' + idx + ' .dimensioninput').parent().remove();
                        }
                        _this3.liArr[idx].type = timeType.idx;
                        if (timeType.idx == 'NATURE_TIME') {
                            _this3.dom.find('.item' + idx).append('<div class="inputLine" redlabel="xlk"><div class="dimensionxlk" title="维度" check="empty"></div></div>');
                            _this3.liArr[idx].limitTime = null;
                            itemobj.dimensionxlk = _this3.app.loadModule(_this3.dropdown, _this3.dom.find('.item' + idx + ' .dimensionxlk'), {
                                className: 'xlk',
                                firstSelect: { val: '', idx: '' },
                                data: [{ val: '按年', idx: 'YEAR' }, { val: '按季度', idx: 'QUARTER' }, { val: '按月', idx: 'MONTH' }, {
                                    val: '按周',
                                    idx: 'WEEK'
                                }, { val: '按日', idx: 'DAY' }, { val: '按小时', idx: 'HOUR' }]
                            });
                            itemobj.dimensionxlk.event._addEvent('option.click', function (dimensionxlk) {
                                _this3.liArr[idx].unit = dimensionxlk.idx;
                            });
                        } else if (timeType.idx == 'LOGICAL_TIME') {
                            _this3.liArr[idx].unit = null;
                            _this3.dom.find('.item' + idx).append('<div class="inputLine" redlabel="inputBox"><input class="dimensioninput inputBox" type="text" check="empty|int"/><label class="dayunit">天</label></div>');
                        }
                    });
                } else {
                    _this3.liArr[idx].type = 'NON_TIME';
                    if (_this3.dom.find('.item' + idx + ' .timeType').dom) {
                        _this3.dom.find('.item' + idx + ' .timeType').parent().remove();
                    }
                    if (_this3.dom.find('.item' + idx + ' .dimensionxlk').dom) {
                        _this3.dom.find('.item' + idx + ' .dimensionxlk').parent().remove();
                    }
                    if (_this3.dom.find('.item' + idx + ' .dimensioninput').dom) {
                        _this3.dom.find('.item' + idx + ' .dimensioninput').parent().remove();
                    }
                }
            });
            this.objArr.push(itemobj);
        }
    }, {
        key: 'setData',
        value: function setData(value, type) {
            var _this4 = this;

            this.liArr = value;
            value.forEach(function (val, idx) {
                console.log(value, val, idx);
                if (idx !== value.length && idx !== 0 && val !== null) {
                    _this4.addHtml();
                    //this.addli(this.index)
                    _this4.addli(idx);
                } else if (val == null) {
                    return;
                }
                _this4.dom.find('.item' + idx + ' .conditions .option[data-idx="' + val.field + '"]').click();
                if (val.dataType == 'Date') {
                    _this4.dom.find('.item' + idx + ' .timeType .option[data-idx="' + val.type + '"]').click();
                    if (val.unit && val.type == 'NATURE_TIME') {
                        _this4.dom.find('.item' + idx + ' .dimensionxlk .option[data-idx="' + val.unit + '"]').click();
                    } else if (val.limitTime && val.type == 'LOGICAL_TIME') {
                        _this4.dom.find('.item' + idx + ' .dimensioninput').val(val.limitTime / _this4.DayToMillisecond);
                        if (type == 'view') {
                            _this4.dom.find('.item' + idx + ' .dimensioninput').attr('readonly', 'readonly');
                            _this4.dom.find('.item' + idx + ' .dimensioninput').css({ "background": "#e8e8e8" });
                        }
                    }
                }
            });
            if (type == 'view' && this.objArr) {
                this.objArr.map(function (item) {
                    if (item.conditions) {
                        item.conditions.disable();
                    }
                    if (item.timeType) {
                        item.timeType.disable();
                    }
                    if (item.dimensionxlk) {
                        item.dimensionxlk.disable();
                    }
                });
            }
        }
    }, {
        key: 'disable',
        value: function disable() {
            //console.log(ES.selctorDoc('.icon-shanchu'))
            ES.selctorDoc('.icon-shanchu').addClass('hide');
            ES.selctorDoc('.icon-tianjia').addClass('hide');
        }
    }]);

    return projectGroupSet;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = projectGroupSet;

/***/ }),

/***/ 912:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(913);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./projectGroupSet.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./projectGroupSet.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 913:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".projectGroupSet {\n  position: relative;\n  margin-top: 10px;\n}\n.projectGroupSet .groupsettitle {\n  padding-left: 0;\n  font-size: 14px;\n}\n.projectGroupSet .icon-tianjia {\n  color: #4c9fa9;\n  margin-left: 20px;\n  cursor: pointer;\n}\n.projectGroupSet .icon-shanchu {\n  position: absolute;\n  margin-left: 10px;\n  color: red;\n  cursor: pointer;\n  font-size: 18px;\n}\n.projectGroupSet .condition {\n  position: absolute;\n  z-index: 1000;\n}\n.projectGroupSet .condition .item {\n  height: 50px;\n  line-height: 65px;\n  display: flex;\n  position: relative;\n}\n.projectGroupSet .condition .item > div {\n  display: inline-block;\n  margin-left: 20px;\n}\n.projectGroupSet .condition .item .icon-shanchu {\n  position: absolute;\n  top: -15px;\n  right: -40px;\n}\n.projectGroupSet .condition .item .dimensioninput {\n  margin-left: 20px;\n  height: 32px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  width: 90px;\n  padding-left: 10px;\n  vertical-align: top;\n}\n.projectGroupSet .condition .item label {\n  position: absolute;\n  left: 98px;\n  top: -13px;\n}\n.projectGroupSet .required {\n  top: 0px;\n  left: 200px;\n}\n.projectGroupSet .inputLine .required {\n  top: 15px;\n  left: 25px;\n}\n", ""]);

// exports


/***/ }),

/***/ 914:
/***/ (function(module, exports) {

module.exports = "<div class=projectGroupSet> <label class=redstar>*</label> <span class=groupsettitle>聚合条件设置</span> <i class=\"iconfont icon-tianjia groupSet\" title=\"\"></i> <ul class=condition> <li class=\"item item0\" data-id=0> <div class=inputLine redlabel=xlk> <div class=conditions title=聚合条件 check=empty></div> </div> </li> </ul> </div> ";

/***/ }),

/***/ 915:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(916);
// var html = require('./tpl.html')

var biaozhulist = function (_Interstellar$modalBa) {
    _inherits(biaozhulist, _Interstellar$modalBa);

    function biaozhulist(app, dom, value, addMode) {
        _classCallCheck(this, biaozhulist);

        var _this = _possibleConstructorReturn(this, (biaozhulist.__proto__ || Object.getPrototypeOf(biaozhulist)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(918);
        _this.name = 'biaozhulist';
        _this.flag = true;
        _this.code = '';
        _this.nowParam = value;
        _this.refreshPage = true;
        _this.apidata = {};
        _this.apidata.page = 1;
        _this.apidata.pagesize = 10;
        return _this;
    }

    _createClass(biaozhulist, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            that.datalist = that.api.chooseddata ? JSON.parse(JSON.stringify(that.api.chooseddata)) : [];
            this.dom.find('.icon-guanbi').on('click', function () {
                that.close();
            });
            this.dom.find('.cancel').on('click', function () {
                that.close();
            });
            that.dom.find('.searchbtn').on('click', function () {
                that.refreshPage = true;
                that.apidata.page = 1;
                that.event._dispatch('search.change', that.apidata);
            });
            that.dom.find('.add').on('click', function () {
                that.datalist = that.datalist.filter(function (val) {
                    return val.id !== null || val.action !== 3;
                });
                //console.log(that.datalist)
                that.event._dispatch('biaozhulist.adddata', { data: that.idlist, list: that.datalist });
            });
            this.render();
        }
    }, {
        key: 'render',
        value: function render(value) {
            var that = this;
            new Promise(function(resolve) { resolve(); }).then((function () {
                var dropdown = __webpack_require__(638);
                that.type = that.app.loadModule(dropdown, that.dom.find('.kjlx'), {
                    className: 'xlk',
                    firstSelect: {
                        val: '控件类型选择',
                        idx: ''
                    },
                    data: [{
                        val: '文本框',
                        idx: 'text'
                    }, {
                        val: '下拉框',
                        idx: 'select'
                    }, {
                        val: '单选框',
                        idx: 'radiobox'
                    }, {
                        val: '复选框',
                        idx: 'checkbox'
                    }]
                });
                that.type.event._addEvent('option.click', function (value) {
                    that.apidata.type = value.idx;
                });
                that.type.event._addEvent('dropDown.clear', function (value) {
                    that.apidata.type = '';
                });
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
            that.dom.find('.filterarea input').on('change', function () {
                that.apidata[ES.selctorDoc(this).attr('class')] = ES.selctorDoc(this).val();
            });
            that.setTitle();
        }
    }, {
        key: 'setTitle',
        value: function setTitle() {
            var obj = {};
            var that = this;
            obj['icon'] = {
                "code": { name: '<span data-i18n="age" data-name="年龄">标注字段编码</span>', type: 'text', code: 'checkid', w: '25%', ww: '25%', n: "40" },
                "name": { name: '<span data-i18n="age" data-name="年龄">标注字段名称</span>', type: 'link', code: 'checkid', w: '25%', ww: '25%', n: "40" },
                "type": { name: '<span data-i18n="age" data-name="年龄">控件类型</span>', type: 'text', code: 'pid', w: '25%', ww: '25%' },
                "label": { name: '<span data-i18n="age" data-name="年龄">标签</span>', type: 'text', code: 'pname', w: '25%', ww: '25%' }
            };
            obj['type'] = 'center';
            obj['chose'] = 'all';
            obj['chosew'] = '30px';
            obj['tablewidth'] = ES.selctorDoc('.biaozhulist').box().clientWidth - 60;
            __webpack_require__.e/* require.ensure */(55/* duplicate */).then((function () {
                var cont_table = __webpack_require__(640);
                that.table = that.app.loadModule(cont_table, that.dom.find('.biaozhutable'), {
                    id: 'biaozhutable',
                    header: obj
                });
                that.table.event._addEvent('table.check', function (value) {
                    var temp = value;
                    var idsStr = ',' + temp.id.toString() + ',';
                    that.datalist.map(function (item) {
                        var idStr = ',' + item.formComponentId + ',';
                        if (idsStr.lastIndexOf(idStr) != -1) {
                            if (temp.type == 'add') {
                                item.action = item.id ? 2 : 1;
                            } else {
                                item.action = 3;
                            }
                            idsStr = idsStr.replace(idStr, ',');
                        }
                    });
                    if (idsStr != ',') {
                        if (temp.type == 'add') {
                            temp.data.id = null;
                            temp.data.action = 1;
                        }
                        if (temp.type == 'del') {
                            temp.data.id = temp.data.id;
                            item.action = 3;
                        }
                        temp.data.optional = false;
                        temp.data.formComponentId = temp.data.formComponentId;
                        temp.data.sequence = 1;
                        temp.data.alias = '';
                        that.datalist.push(temp.data);
                    }
                });
                that.table.event._addEvent('table.allcheck', function (value) {
                    console.log(value, 'value');
                    var temp = value;
                    var idsStr = ',' + temp.id.toString() + ',';
                    console.log(that.datalist, 'before');
                    that.datalist.map(function (item) {
                        var idStr = ',' + item.formComponentId + ',';
                        if (idsStr.lastIndexOf(idStr) != -1) {
                            if (temp.type == 'add') {
                                item.action = item.id ? 2 : 1;
                            } else {
                                item.action = 3;
                            }
                            idsStr = idsStr.replace(idStr, ',');
                        }
                    });
                    if (idsStr != ',' && temp.type == 'add') {
                        temp.data.map(function (item) {
                            if (idsStr.lastIndexOf(',' + item.id + ',') != -1) {
                                item.formComponentId = item.id;
                                item.id = null;
                                item.optional = false;
                                item.action = 1;
                                item.sequence = 1;
                                item.alias = '';
                                that.datalist.push(item);
                            }
                        });
                    } else if (temp.type == 'del') {
                        temp.data.map(function (item) {
                            if (idsStr.lastIndexOf(',' + item.id + ',') != -1) {
                                item.formComponentId = item.id;
                                item.id = item.id;
                                item.optional = false;
                                item.action = 3;
                                item.sequence = 1;
                                item.alias = '';
                                that.datalist.push(item);
                            }
                        });
                    }
                    console.log(that.datalist, 'after');
                });
                that.table.event._addEvent('table.listlink', function (value) {
                    that.event._dispatch('biaozhulist.showcomponent', { id: value.id });
                });
                that.table.event._addEvent('table.pagenumber', function (value) {
                    that.dom.find('.list-header .check-box').removeClass('choose');
                    that.apidata.page = parseInt(value);
                    that.refreshPage = false;
                    that.table.changenum(that.apidata.page);
                    that.event._dispatch('search.change', that.apidata);
                });
                that.table.event._addEvent('table.pagesize', function (value) {
                    that.apidata.pageSize = value.num;
                    that.apidata.page = 1;
                    that.refreshPage = true;
                    that.event._dispatch('search.change', that.apidata);
                });
                that.dom.find('.list-content').removeClass('hide');
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        }
    }, {
        key: 'setMain',
        value: function setMain(bool, value) {
            var that = this;
            var data2 = [];
            var res = '';
            if (value) {
                res = value;
            }
            if (res.code == 0) {
                if (res.data.list.length > 0) {
                    res.data.list.forEach(function (val, idx) {
                        if (that.datalist.some(function (item) {
                            return item.formComponentId == val.id && item.action != 3;
                        })) {
                            val.choosed = true;
                        }
                        val.formComponentId = val.id;
                        var obj = {};
                        obj.id = val.id;
                        obj.formComponentId = val.id;
                        obj.operation = that.action;
                        data2.push(obj);
                        val.label = '';
                        val.tagList.forEach(function (value, index) {
                            if (index < val.tagList.length - 1) {
                                val.label += value.text + ',';
                            } else {
                                val.label += value.text;
                            }
                        });
                        switch (val.type) {
                            case 'text':
                                val.type = '文本框';
                                break;
                            case 'select':
                                val.type = '下拉框';
                                break;
                            case 'checkbox':
                                val.type = '复选框';
                                break;
                            case 'radiobox':
                                val.type = '单选框';
                                break;
                        }
                    });
                    that.table.setData(res.data.list, data2);
                } else {
                    that.table.noData();
                }
            }
            if (that.refreshPage) {
                that.table.getTotal(res.data.pages, 2, res.data.total);
            }
            that.initscrollmenu();
        }
    }, {
        key: 'initscrollmenu',
        value: function initscrollmenu() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }

            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            this.dom.find('.biaozhutable').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }]);

    return biaozhulist;
}(Interstellar.modalBase);

//原型链一定要有的


module.exports = biaozhulist;

/***/ }),

/***/ 916:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(917);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./biaozhulist.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./biaozhulist.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 917:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".biaozhulist {\n  box-sizing: border-box;\n  background: #fff;\n  border-radius: 4px;\n  font-family: \"Microsoft YaHei\";\n  font-size: 16px;\n  width: 800px;\n  height: 500px;\n  margin-left: -400px;\n  position: relative;\n}\n.biaozhulist .icon-guanbi {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n}\n.biaozhulist .filterarea {\n  margin: 20px 0 20px 20px;\n}\n.biaozhulist .filterarea > input {\n  padding-left: 10px;\n  border-radius: 4px;\n  width: 170px;\n  border: 1px solid #e8e8e8;\n  height: 30px;\n  margin-right: 10px;\n}\n.biaozhulist .filterarea .kjlx {\n  display: inline-block;\n}\n.biaozhulist .filterarea .xlk {\n  height: 30px;\n  line-height: 30px;\n  width: 170px;\n}\n.biaozhulist .biaozhumain {\n  padding: 30px 0 20px 10px;\n  font-size: 14px;\n}\n.biaozhulist .biaozhumain .searchbtn {\n  width: 100px;\n  height: 30px;\n  border: 1px solid #4c9fa9;\n  line-height: 30px;\n  color: #4c9fa9;\n  float: right;\n  margin-right: 40px;\n}\n.biaozhulist .biaozhumain .biaozhutable {\n  height: 310px;\n  overflow: hidden;\n  position: relative;\n}\n.biaozhulist .biaozhumain .biaozhutable .table {\n  padding-bottom: 20px;\n  position: relative;\n}\n.biaozhulist .biaozhumain span {\n  font-size: 16px;\n}\n.biaozhulist .biaozhumain .btnarea {\n  height: 30px;\n  text-align: right;\n  margin-right: 20px;\n  margin-top: 20px;\n}\n.biaozhulist .biaozhumain .btnarea .biaozhubtn {\n  width: 100px;\n  height: 30px;\n  line-height: 30px;\n  background: #4c9fa9;\n  border: 1px solid #4c9fa9;\n  color: #fff;\n  margin-left: 20px;\n}\n.biaozhulist .biaozhumain .btnarea .cancel {\n  background: #fff;\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n", ""]);

// exports


/***/ }),

/***/ 918:
/***/ (function(module, exports) {

module.exports = "<div class=\"modal biaozhulist\"> <i class=\"icon-guanbi iconfont\"></i> <div class=biaozhumain> <div class=filterarea> <input class=name type=text placeholder=标注字段名称 /> <input class=text type=text placeholder=标签 /> <div class=kjlx></div> <a class=\"searchbtn biaozhubtn\">查询</a> </div> <div class=biaozhutable> </div> <div class=btnarea> <a class=\"biaozhubtn add\">添加</a> <a class=\"biaozhubtn cancel\">取消</a> </div> </div> </div>";

/***/ }),

/***/ 919:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(920);
// var html = require('./tpl.html')

var ytjbiaozhulist = function (_Interstellar$modalBa) {
    _inherits(ytjbiaozhulist, _Interstellar$modalBa);

    function ytjbiaozhulist(app, dom, value, addMode) {
        _classCallCheck(this, ytjbiaozhulist);

        var _this = _possibleConstructorReturn(this, (ytjbiaozhulist.__proto__ || Object.getPrototypeOf(ytjbiaozhulist)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(922);
        _this.name = 'ytjbiaozhulist';
        _this.flag = true;
        _this.code = '';
        _this.nowParam = value;
        _this.refreshPage = true;
        _this.idlist = value.idlist;
        _this.apidata = {};
        _this.apidata.page = 1;
        _this.apidata.pagesize = 10;
        return _this;
    }

    _createClass(ytjbiaozhulist, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            that.action = {
                up: { dis: 'inline', link: 'noLink', content: '上移' },
                down: { dis: 'inline', link: 'noLink', content: '下移' },
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            that.action1 = {
                down: { dis: 'inline', link: 'noLink', content: '下移' },
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            that.action2 = {
                up: { dis: 'inline', link: 'noLink', content: '上移' },
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            that.action3 = {
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            this.dom.find('.icon-guanbi').on('click', function () {
                that.close();
            });
            this.dom.find('.cancel').on('click', function () {
                that.close();
            });
            this.dom.find('.save').on('click', function () {
                that.returndata = that.returndata.filter(function (val) {
                    return val.id !== null || val.action !== 3;
                });
                console.log(that.returndata);
                that.event._dispatch('ytjbiaozhulist.datachange', { data: that.returndata });
            });
            if (that.api.type == 'view' || that.api.status == 2) {
                that.dom.find('.save').addClass('hide');
                that.setTitle_view();
            } else {
                that.setTitle_edit();
            }
        }
    }, {
        key: 'setTitle_edit',
        value: function setTitle_edit() {
            var obj = {};
            var that = this;
            obj['icon'] = {
                "formComponentId": { name: '<span data-i18n="age" data-name="年龄">标注字段编码</span>', type: 'text', code: 'checkid', w: '8%', ww: '8%', n: "40" },
                "componentName": { name: '<span data-i18n="age" data-name="年龄">标注字段名称</span>', type: 'link', code: 'checkid', w: '16%', ww: '16%', n: "40" },
                "type": { name: '<span data-i18n="age" data-name="年龄">控件类型</span>', type: 'text', code: 'pid', w: '16%', ww: '16%' },
                "label": { name: '<span data-i18n="age" data-name="年龄">标签</span>', type: 'text', code: 'pname', w: '20%', ww: '20%' },
                "optional": { name: '<span data-i18n="age" data-name="年龄">是否必填</span>', type: 'onoff', code: 'pname', w: '20%', ww: '20%' },
                "operation": { name: '<span data-i18n="age" data-name="年龄">操作</span>', type: 'action', code: 'pname', w: '20%', ww: '20%' }
            };
            obj['onofftype'] = { 0: '否', 1: '是' };
            obj['type'] = 'center';
            obj['tablewidth'] = ES.selctorDoc('.ytjbiaozhulist').box().clientWidth - 60;
            that.render(obj);
        }
    }, {
        key: 'setTitle_view',
        value: function setTitle_view() {
            var obj = {};
            var that = this;
            obj['icon'] = {
                "formComponentId": { name: '<span data-i18n="age" data-name="年龄">标注字段编码</span>', type: 'text', code: 'checkid', w: '15%', ww: '15%', n: "40" },
                "componentName": { name: '<span data-i18n="age" data-name="年龄">标注字段名称</span>', type: 'link', code: 'checkid', w: '20%', ww: '20%' },
                "type": { name: '<span data-i18n="age" data-name="年龄">控件类型</span>', type: 'text', code: 'pid', w: '20%', ww: '20%' },
                "label": { name: '<span data-i18n="age" data-name="年龄">标签</span>', type: 'text', code: 'pname', w: '25%', ww: '25%' },
                "isrequired": { name: '<span data-i18n="age" data-name="年龄">是否必填</span>', type: 'text', code: 'pname', w: '20%', ww: '20%' }
            };
            obj['type'] = 'center';
            obj['tablewidth'] = ES.selctorDoc('.ytjbiaozhulist').box().clientWidth - 60;
            that.render(obj);
        }
    }, {
        key: 'render',
        value: function render(obj) {
            var that = this;
            __webpack_require__.e/* require.ensure */(56/* duplicate */).then((function () {
                var cont_table = __webpack_require__(748);
                that.table = that.app.loadModule(cont_table, that.dom.find('.biaozhutable'), {
                    icon: obj['icon'],
                    type: 'center',
                    tablewidth: ES.selctorDoc('.ytjbiaozhulist').box().clientWidth - 60,
                    minwidth: 100,
                    mainId: 'formComponentId',
                    onofftype: { 0: '否', 1: '是' }
                });
                that.table.event._addEvent('list.action', function (value) {
                    var temp = that.returndata[value.position * 1];
                    var tempidlist = that.returndata[value.position * 1];
                    switch (value.classname) {
                        case 'up':
                            that.returndata.splice(value.position * 1, 1);
                            that.returndata.splice(value.position * 1 - 1, 0, temp);
                            break;
                        case 'down':
                            console.log(that.returndata, 'bef');
                            that.returndata.splice(value.position * 1, 1);
                            that.returndata.splice(value.position * 1 + 1, 0, temp);
                            console.log(that.returndata, 'af');
                            break;
                        case 'del':
                            that.returndata.map(function (item) {
                                if (item.formComponentId * 1 == parseInt(value.id)) {
                                    item.action = 3;
                                }
                            });
                            that.returndata.splice(value.position * 1, 1);
                            console.log(that.returndata, 'before');
                            that.returndata.splice(that.returndata.length, 0, temp);
                            console.log(that.returndata, 'after');
                            break;
                    }
                    that.setMain(that.returndata);
                });
                that.table.event._addEvent('list.onoff', function (value) {
                    that.returndata.map(function (item) {
                        if (item.formComponentId * 1 == parseInt(value.id)) {
                            item.optional = value.dom.hasClass('off') ? false : true;
                        }
                    });
                    that.setMain(that.returndata);
                });
                that.table.event._addEvent('list.listlink', function (value) {
                    that.event._dispatch('biaozhulist.showcomponent', { id: value.id });
                });
                that.dom.find('.list-content').removeClass('hide');
                that.setMain();
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        }
    }, {
        key: 'setMain',
        value: function setMain(value) {
            var that = this;
            var data2 = [];
            var res = '';
            if (!value) {
                value = that.api.data;
            }
            console.log(value);
            that.returndata = value;
            var count = 0;
            value.forEach(function (val) {
                if (val.action !== 3) {
                    count++;
                }
            });
            var temp = JSON.parse(JSON.stringify(value));
            temp = temp.filter(function (vs) {
                return vs.action !== 3;
            });
            temp.forEach(function (val, idx) {
                val.isrequired = val.optional ? '是' : '否';
                val.componentName = val.componentName ? val.componentName : val.name;
                val.componentType = val.componentType ? val.componentType : val.type;
                val.formComponentId = val.formComponentId ? val.formComponentId : val.code;
                console.log(val.componentType, 'val.componentType');
                if (val.action != 3) {
                    val.label = "";
                    val.tagList.forEach(function (value, index) {
                        if (index < val.tagList.length - 1) {
                            val.label += value.text + ',';
                        } else {
                            val.label += value.text;
                        }
                    });
                    switch (val.componentType) {
                        case 'text':
                            val.type = '文本框';
                            break;
                        case 'select':
                            val.type = '下拉框';
                            break;
                        case 'checkbox':
                            val.type = '复选框';
                            break;
                        case 'radiobox':
                            val.type = '单选框';
                            break;
                    }
                    if (count == 1) {
                        val.operation = that.action3;
                    } else {
                        if (idx == 0) {
                            val.operation = that.action1;
                        } else if (idx == temp.length - 1) {
                            val.operation = that.action2;
                        } else {
                            val.operation = that.action;
                        }
                    }
                    data2.push(val);
                }
            });
            that.table.setData(data2);
            that.initscrollmenu();
        }
    }, {
        key: 'initscrollmenu',
        value: function initscrollmenu() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }
            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            this.dom.find('.biaozhutable').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }]);

    return ytjbiaozhulist;
}(Interstellar.modalBase);

//原型链一定要有的


module.exports = ytjbiaozhulist;

/***/ }),

/***/ 920:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(921);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./ytjbiaozhulist.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./ytjbiaozhulist.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 921:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".ytjbiaozhulist {\n  box-sizing: border-box;\n  background: #fff;\n  border-radius: 4px;\n  font-family: \"Microsoft YaHei\";\n  font-size: 16px;\n  width: 800px;\n  height: 500px;\n  margin-left: -400px;\n  position: relative;\n}\n.ytjbiaozhulist .title {\n  height: 60px;\n  line-height: 60px;\n  margin-left: 20px;\n}\n.ytjbiaozhulist .icon-guanbi {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n}\n.ytjbiaozhulist .biaozhumain {\n  padding: 30px 0 20px 10px;\n  font-size: 14px;\n}\n.ytjbiaozhulist .biaozhumain .searchbtn {\n  width: 100px;\n  height: 30px;\n  border: 1px solid #4c9fa9;\n  line-height: 30px;\n  color: #4c9fa9;\n  float: right;\n  margin-right: 40px;\n}\n.ytjbiaozhulist .biaozhumain .biaozhutable {\n  height: 310px;\n  overflow: hidden;\n  position: relative;\n}\n.ytjbiaozhulist .biaozhumain .biaozhutable .table {\n  padding-bottom: 20px;\n  position: relative;\n}\n.ytjbiaozhulist .biaozhumain .biaozhutable .list-content .tableList {\n  text-align: left!important;\n}\n.ytjbiaozhulist .biaozhumain span {\n  font-size: 16px;\n}\n.ytjbiaozhulist .biaozhumain .btnarea {\n  height: 30px;\n  text-align: right;\n  margin-right: 20px;\n  margin-top: 20px;\n}\n.ytjbiaozhulist .biaozhumain .btnarea .biaozhubtn {\n  width: 100px;\n  height: 30px;\n  line-height: 30px;\n  background: #4c9fa9;\n  border: 1px solid #4c9fa9;\n  color: #fff;\n  margin-left: 20px;\n}\n.ytjbiaozhulist .biaozhumain .btnarea .cancel {\n  background: #fff;\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n", ""]);

// exports


/***/ }),

/***/ 922:
/***/ (function(module, exports) {

module.exports = "<div class=\"ytjbiaozhulist modal\"> <p class=title>查看已添加的标注数据</p> <i class=\"icon-guanbi iconfont\"></i> <div class=biaozhumain> <div class=biaozhutable> </div> <div class=btnarea> <a class=\"biaozhubtn save\">保存</a> <a class=\"biaozhubtn cancel\">关闭</a> </div> </div> </div>";

/***/ }),

/***/ 923:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(924);
// var html = require('./tpl.html')

var discurdreason = function (_Interstellar$modalBa) {
    _inherits(discurdreason, _Interstellar$modalBa);

    function discurdreason(app, dom, value, addMode) {
        _classCallCheck(this, discurdreason);

        var _this = _possibleConstructorReturn(this, (discurdreason.__proto__ || Object.getPrototypeOf(discurdreason)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(926);
        _this.name = 'discurdreason';
        _this.flag = true;
        _this.code = '';
        _this.nowParam = value;
        _this.refreshPage = true;
        _this.apidata = {};
        _this.apidata.page = 1;
        _this.apidata.pagesize = 10;
        return _this;
    }

    _createClass(discurdreason, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            that.datalist = that.api.chooseddata ? JSON.parse(JSON.stringify(that.api.chooseddata)) : [];
            this.dom.find('.icon-guanbi').on('click', function () {
                that.close();
            });
            this.dom.find('.cancel').on('click', function () {
                that.close();
            });
            that.dom.find('.searchbtn').on('click', function () {
                that.refreshPage = true;
                that.apidata.page = 1;
                that.event._dispatch('search.change', that.apidata);
            });
            that.dom.find('.add').on('click', function () {
                that.datalist = that.datalist.filter(function (val) {
                    return val.id !== null || val.action !== 3;
                });
                //console.log(that.datalist)
                that.event._dispatch('biaozhulist.adddata', { data: that.idlist, list: that.datalist });
            });
            this.render();
        }
    }, {
        key: 'render',
        value: function render(value) {
            var that = this;
            that.dom.find('.filterarea input').on('change', function () {
                that.apidata[ES.selctorDoc(this).attr('class')] = ES.selctorDoc(this).val();
            });
            that.setTitle();
        }
    }, {
        key: 'setTitle',
        value: function setTitle() {
            var obj = {};
            var that = this;
            obj['icon'] = {
                "value": { name: '<span data-i18n="age" data-name="年龄">编码</span>', type: 'text', code: 'checkid', w: '50%', ww: '50%', n: "40" },
                "name": { name: '<span data-i18n="age" data-name="年龄">名称</span>', type: 'text', code: 'checkid', w: '50%', ww: '50%' }
            };
            obj['type'] = 'center';
            obj['chose'] = 'all';
            obj['chosew'] = '30px';
            obj['tablewidth'] = ES.selctorDoc('.discurdtable').box().clientWidth - 60;
            __webpack_require__.e/* require.ensure */(56/* duplicate */).then((function () {
                var cont_table = __webpack_require__(748);
                that.table = that.app.loadModule(cont_table, that.dom.find('.discurdtable'), {
                    icon: obj['icon'],
                    type: 'center',
                    chose: 'all',
                    chosew: '30px',
                    tablewidth: ES.selctorDoc('.discurdtable').box().clientWidth - 60,
                    minwidth: 100
                });
                that.table.event._addEvent('list.check', function (value) {
                    var temp = value;
                    var idsStr = ',' + temp.id.toString() + ',';
                    if (temp.type == 'del') {
                        that.datalist = that.datalist.filter(function (item) {
                            return item.id != temp.id;
                        });
                    } else {
                        that.datalist.push(temp.data);
                    }
                });
                that.table.event._addEvent('list.allcheck', function (value) {
                    console.log(value, 'value');
                    var temp = value;
                    var idsStr = ',' + temp.id.toString() + ',';
                    console.log(that.datalist, 'before', idsStr);
                    if (temp.type == 'add') {
                        temp.data.map(function (item) {
                            if (idsStr.lastIndexOf(',' + item.id + ',') != -1) {
                                that.datalist.push(item);
                            }
                        });
                    } else if (temp.type == 'del') {
                        // temp.data=temp.data.filter((item) => {
                        //     return idsStr.lastIndexOf(',' + item.id + ',') == -1
                        // })
                        that.datalist = that.datalist.filter(function (item) {
                            return idsStr.lastIndexOf(',' + item.id + ',') == -1;
                        });
                    }
                    console.log(that.datalist, 'after');
                });
                that.dom.find('.list-content').removeClass('hide');
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        }
    }, {
        key: 'setMain',
        value: function setMain(bool, value) {
            console.log(value, 'valuelallalala');
            var that = this;
            var data2 = [];
            var res = '';
            if (value) {
                res = value;
            }
            if (res.length > 0) {
                res.forEach(function (val, idx) {
                    if (that.datalist.some(function (item) {
                        return item.id == val.id;
                    })) {
                        val.choosed = true;
                    }
                    var obj = {};
                    obj.id = val.id;
                    obj.operation = that.action;
                    data2.push(obj);
                });
                that.table.setData(res, data2);
            } else {
                that.table.noData();
            }
            that.initscrollmenu();
        }
    }, {
        key: 'initscrollmenu',
        value: function initscrollmenu() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }

            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            this.dom.find('.discurdtable').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }]);

    return discurdreason;
}(Interstellar.modalBase);

//原型链一定要有的


module.exports = discurdreason;

/***/ }),

/***/ 924:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(925);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./discurdreason.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./discurdreason.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 925:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".discurdreason {\n  box-sizing: border-box;\n  background: #fff;\n  border-radius: 4px;\n  font-family: \"Microsoft YaHei\";\n  font-size: 16px;\n  width: 800px;\n  height: 500px;\n  margin-left: -400px;\n  position: relative;\n}\n.discurdreason .icon-guanbi {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n}\n.discurdreason .modal-title {\n  height: 60px;\n  line-height: 60px;\n  padding-left: 20px;\n  font-weight: bold;\n}\n.discurdreason .filterarea {\n  margin: 0 0 20px 20px;\n}\n.discurdreason .filterarea > input {\n  padding-left: 10px;\n  border-radius: 4px;\n  width: 170px;\n  border: 1px solid #e8e8e8;\n  height: 30px;\n  margin-right: 10px;\n  font-size: 12px;\n}\n.discurdreason .filterarea .searchbtn {\n  width: 100px;\n  height: 30px;\n  border: 1px solid #4c9fa9;\n  line-height: 30px;\n  color: #4c9fa9;\n  float: right;\n  margin-right: 40px;\n}\n.discurdreason .mainarea {\n  padding-left: 10px;\n  font-size: 14px;\n}\n.discurdreason .mainarea .discurdtable {\n  height: 310px;\n  overflow: hidden;\n  position: relative;\n}\n.discurdreason .mainarea .discurdtable .table {\n  padding-bottom: 20px;\n  position: relative;\n}\n.discurdreason .mainarea span {\n  font-size: 16px;\n}\n.discurdreason .btnarea {\n  height: 30px;\n  text-align: right;\n  margin-right: 20px;\n  margin-top: 20px;\n}\n.discurdreason .btnarea .biaozhubtn {\n  width: 100px;\n  height: 30px;\n  line-height: 30px;\n  background: #4c9fa9;\n  border: 1px solid #4c9fa9;\n  color: #fff;\n  margin-left: 20px;\n}\n.discurdreason .btnarea .cancel {\n  background: #fff;\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n", ""]);

// exports


/***/ }),

/***/ 926:
/***/ (function(module, exports) {

module.exports = "<div class=\"discurdreason modal\"> <i class=\"icon-guanbi iconfont\"></i> <p class=modal-title>废片原因设置</p> <div class=filterarea> <input class=name type=text placeholder=废片理由名称 /> <a class=\"searchbtn biaozhubtn\">查询</a> </div> <div class=mainarea> <div class=discurdtable> </div> </div> <div class=btnarea> <a class=\"biaozhubtn add\">添加</a> <a class=\"biaozhubtn cancel\">取消</a> </div> </div>";

/***/ }),

/***/ 927:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(928);
// var html = require('./tpl.html')

var ytjdiscurdreason = function (_Interstellar$modalBa) {
    _inherits(ytjdiscurdreason, _Interstellar$modalBa);

    function ytjdiscurdreason(app, dom, value, addMode) {
        _classCallCheck(this, ytjdiscurdreason);

        var _this = _possibleConstructorReturn(this, (ytjdiscurdreason.__proto__ || Object.getPrototypeOf(ytjdiscurdreason)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(930);
        _this.name = 'ytjdiscurdreason';
        _this.flag = true;
        _this.code = '';
        _this.nowParam = value;
        _this.refreshPage = true;
        _this.idlist = value.idlist;
        _this.apidata = {};
        _this.apidata.page = 1;
        _this.apidata.pagesize = 10;
        return _this;
    }

    _createClass(ytjdiscurdreason, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            that.action = {
                up: { dis: 'inline', link: 'noLink', content: '上移' },
                down: { dis: 'inline', link: 'noLink', content: '下移' },
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            that.action1 = {
                down: { dis: 'inline', link: 'noLink', content: '下移' },
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            that.action2 = {
                up: { dis: 'inline', link: 'noLink', content: '上移' },
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            that.action3 = {
                del: { dis: 'inline', link: 'noLink', content: '删除' }
            };
            this.dom.find('.icon-guanbi').on('click', function () {
                that.close();
            });
            this.dom.find('.cancel').on('click', function () {
                that.close();
            });
            this.dom.find('.save').on('click', function () {
                that.returndata = that.returndata.filter(function (val) {
                    return val.id !== null || val.action !== 3;
                });
                console.log(that.returndata);
                that.event._dispatch('ytjbiaozhulist.datachange', { data: that.returndata });
            });
            if (that.api.type == 'view' || that.api.status == 2) {
                that.dom.find('.save').addClass('hide');
                that.setTitle_view();
            } else {
                that.setTitle_edit();
            }
        }
    }, {
        key: 'setTitle_edit',
        value: function setTitle_edit() {
            var obj = {};
            var that = this;
            obj['icon'] = {
                "value": { name: '<span data-i18n="age" data-name="年龄">编码</span>', type: 'text', code: 'checkid', w: '30%', ww: '30%' },
                "name": { name: '<span data-i18n="age" data-name="年龄">名称</span>', type: 'text', code: 'checkid', w: '40%', ww: '40%', n: "40" },
                "operation": { name: '<span data-i18n="age" data-name="年龄">操作</span>', type: 'action', code: 'pname', w: '30%', ww: '30%' }
            };
            obj['type'] = 'center';
            obj['tablewidth'] = ES.selctorDoc('.biaozhutable').box().clientWidth - 60;
            that.render(obj);
        }
    }, {
        key: 'setTitle_view',
        value: function setTitle_view() {
            var obj = {};
            var that = this;
            obj['icon'] = {
                "value": { name: '<span data-i18n="age" data-name="年龄">编码</span>', type: 'text', code: 'checkid', w: '50%', ww: '50%' },
                "name": { name: '<span data-i18n="age" data-name="年龄">名称</span>', type: 'text', code: 'checkid', w: '50%', ww: '50%', n: "40" }
            };
            obj['type'] = 'center';
            obj['tablewidth'] = ES.selctorDoc('.biaozhutable').box().clientWidth - 60;
            that.render(obj);
        }
    }, {
        key: 'render',
        value: function render(obj) {
            var that = this;
            __webpack_require__.e/* require.ensure */(56/* duplicate */).then((function () {
                var cont_table = __webpack_require__(748);
                that.table = that.app.loadModule(cont_table, that.dom.find('.biaozhutable'), {
                    icon: obj['icon'],
                    type: 'center',
                    tablewidth: ES.selctorDoc('.biaozhutable').box().clientWidth - 60,
                    minwidth: 100
                });
                that.table.event._addEvent('list.action', function (value) {
                    var temp = that.returndata[value.position * 1];
                    var tempidlist = that.returndata[value.position * 1];
                    switch (value.classname) {
                        case 'up':
                            that.returndata.splice(value.position * 1, 1);
                            that.returndata.splice(value.position * 1 - 1, 0, temp);
                            break;
                        case 'down':
                            that.returndata.splice(value.position * 1, 1);
                            that.returndata.splice(value.position * 1 + 1, 0, temp);
                            break;
                        case 'del':
                            that.returndata.splice(value.position * 1, 1);
                            console.log(that.returndata, 'after');
                            break;
                    }
                    that.setMain(that.returndata);
                });
                that.dom.find('.list-content').removeClass('hide');
                that.setMain();
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        }
    }, {
        key: 'setMain',
        value: function setMain(value) {
            var that = this;
            var data2 = [];
            var res = '';
            if (!value) {
                value = that.api.data;
            }
            console.log(value);
            that.returndata = value;
            var count = 0;
            value.forEach(function (val) {
                if (val.action !== 3) {
                    count++;
                }
            });
            var temp = JSON.parse(JSON.stringify(value));
            temp.forEach(function (val, idx) {
                if (value.length == 1) {
                    val.operation = that.action3;
                } else {
                    if (idx == 0) {
                        val.operation = that.action1;
                    } else if (idx == temp.length - 1) {
                        val.operation = that.action2;
                    } else {
                        val.operation = that.action;
                    }
                }
                data2.push(val);
            });
            that.table.setData(data2);
            that.initscrollmenu();
        }
    }, {
        key: 'initscrollmenu',
        value: function initscrollmenu() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }
            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            this.dom.find('.biaozhutable').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }]);

    return ytjdiscurdreason;
}(Interstellar.modalBase);

//原型链一定要有的


module.exports = ytjdiscurdreason;

/***/ }),

/***/ 928:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(929);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./ytjdiscurdreason.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./ytjdiscurdreason.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 929:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".ytjdiscurdreason {\n  box-sizing: border-box;\n  background: #fff;\n  border-radius: 4px;\n  font-family: \"Microsoft YaHei\";\n  font-size: 16px;\n  width: 800px;\n  height: 500px;\n  margin-left: -400px;\n  position: relative;\n}\n.ytjdiscurdreason .title {\n  height: 60px;\n  line-height: 60px;\n  margin-left: 20px;\n}\n.ytjdiscurdreason .icon-guanbi {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n}\n.ytjdiscurdreason .biaozhumain {\n  padding: 30px 0 20px 10px;\n  font-size: 14px;\n}\n.ytjdiscurdreason .biaozhumain .searchbtn {\n  width: 100px;\n  height: 30px;\n  border: 1px solid #4c9fa9;\n  line-height: 30px;\n  color: #4c9fa9;\n  float: right;\n  margin-right: 40px;\n}\n.ytjdiscurdreason .biaozhumain .biaozhutable {\n  height: 310px;\n  overflow: hidden;\n  position: relative;\n}\n.ytjdiscurdreason .biaozhumain .biaozhutable .table {\n  padding-bottom: 20px;\n  position: relative;\n}\n.ytjdiscurdreason .biaozhumain .biaozhutable .list-content .tableList {\n  text-align: left!important;\n}\n.ytjdiscurdreason .biaozhumain span {\n  font-size: 16px;\n}\n.ytjdiscurdreason .biaozhumain .btnarea {\n  height: 30px;\n  text-align: right;\n  margin-right: 20px;\n  margin-top: 20px;\n}\n.ytjdiscurdreason .biaozhumain .btnarea .biaozhubtn {\n  width: 100px;\n  height: 30px;\n  line-height: 30px;\n  background: #4c9fa9;\n  border: 1px solid #4c9fa9;\n  color: #fff;\n  margin-left: 20px;\n}\n.ytjdiscurdreason .biaozhumain .btnarea .cancel {\n  background: #fff;\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n", ""]);

// exports


/***/ }),

/***/ 930:
/***/ (function(module, exports) {

module.exports = "<div class=\"ytjdiscurdreason modal\"> <p class=title>查看已添加的废片理由</p> <i class=\"icon-guanbi iconfont\"></i> <div class=biaozhumain> <div class=biaozhutable> </div> <div class=btnarea> <a class=\"biaozhubtn save\">保存</a> <a class=\"biaozhubtn cancel\">关闭</a> </div> </div> </div>";

/***/ }),

/***/ 931:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".createprotwo {\n  margin: 20px;\n  background: #fff;\n  height: 100%;\n  font-size: 14px;\n  overflow: hidden;\n  border: 1px solid #fff;\n  position: relative;\n}\n.createprotwo .bigtitle {\n  padding: 20px;\n  font-size: 17px;\n}\n.createprotwo .title {\n  font-size: 16px;\n  height: 40px;\n  line-height: 40px;\n  padding-left: 66px;\n  margin-bottom: 20px;\n}\n.createprotwo > div {\n  line-height: 40px;\n}\n.createprotwo .inputLine {\n  line-height: 60px;\n}\n.createprotwo .half {\n  display: inline-block;\n  margin-left: 60px;\n  vertical-align: top;\n}\n.createprotwo .tagarea > div {\n  display: inline-block;\n}\n.createprotwo .required {\n  left: 0;\n  top: 10px;\n}\n.createprotwo .bigadd {\n  cursor: pointer;\n  margin-left: 20px;\n  color: #4c9fa9;\n}\n.createprotwo .xsyx {\n  display: inline-block;\n}\n.createprotwo .isYayAttributes .choosearea {\n  margin-left: 20px;\n}\n.createprotwo .isYayAttributes .choosearea > div {\n  display: inline-block;\n}\n.createprotwo .isYayAttributes .choosearea > div .xlk {\n  width: 90px;\n}\n.createprotwo > span {\n  margin-left: 20px;\n  text-align: right;\n}\n.createprotwo .yblx,\n.createprotwo .bzyq,\n.createprotwo .seriesImgFileType,\n.createprotwo .rangeConditions {\n  display: inline-block;\n}\n.createprotwo .yblx .required,\n.createprotwo .bzyq .required,\n.createprotwo .seriesImgFileType .required,\n.createprotwo .rangeConditions .required {\n  left: 80px;\n  top: 25px;\n}\n.createprotwo .category .required {\n  left: 340px;\n  top: 2px;\n}\n.createprotwo .xlk {\n  height: 30px;\n  line-height: 30px;\n  width: 180px;\n}\n.createprotwo .splitnum {\n  margin-top: 10px;\n}\n.createprotwo .splitnum input {\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  height: 30px;\n  line-height: 30px;\n  width: 170px;\n  padding-left: 10px;\n  margin-left: 5px;\n}\n.createprotwo .widthlevelset {\n  height: 50px;\n  line-height: 50px;\n}\n.createprotwo .widthlevelset .windowId,\n.createprotwo .widthlevelset p {\n  display: inline-block;\n}\n.createprotwo .scroll > div {\n  margin-left: 80px;\n}\n.createprotwo .department {\n  display: inline-block;\n  line-height: 50px;\n}\n.createprotwo .department .radio-box {\n  vertical-align: middle;\n}\n.createprotwo .yxtitle {\n  font-size: 15px;\n  margin-top: 30px;\n  margin-left: 50px;\n}\n.createprotwo .multi {\n  margin: 20px;\n  border-radius: 4px;\n  margin-left: 50px;\n  overflow: hidden;\n}\n.createprotwo .multi .title {\n  padding-left: 0;\n  margin-left: 10px;\n}\n.createprotwo .multi .biaozhubtn {\n  border: 1px solid #4c9fa9;\n  color: #333;\n  height: 35px;\n  line-height: 35px;\n  width: 210px;\n  margin: 80px 40px 40px 20px;\n}\n.createprotwo .multi > li {\n  margin-top: 10px;\n}\n.createprotwo .multi .alldata {\n  margin-left: 0;\n}\n.createprotwo .multi .export {\n  float: right;\n  margin-right: 85px;\n}\n.createprotwo .winWidthId {\n  margin: 10px 0;\n}\n.createprotwo .winWidthId .required {\n  left: 515px;\n  top: 0;\n}\n.createprotwo .discurdarea {\n  margin: 10px 0;\n  margin-left: 80px;\n}\n.createprotwo .discurdarea .biaozhubtn {\n  padding: 0 20px;\n  height: 35px;\n  line-height: 35px;\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n.createprotwo .discurdarea .viewreason {\n  margin-left: 50px;\n  text-decoration: underline;\n  color: #4c9fa9;\n}\n.createprotwo .save {\n  background: #4c9fa9;\n  color: #fff;\n  height: 40px;\n  line-height: 40px;\n  width: 120px;\n  margin: 20px;\n  bottom: 5px;\n  position: absolute;\n  right: 20px;\n  top: 10px;\n}\n.createprotwo .w135 {\n  width: 155px!important;\n  text-align: right;\n}\n.createprotwo .windowId .required {\n  left: 510px;\n}\n.createprotwo .scroll .ml150 {\n  margin-left: 150px;\n}\n", ""]);

// exports


/***/ })

});
//# sourceMappingURL=7217a521f886f52389ed.0.min.js.map