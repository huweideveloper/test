webpackJsonp([48],{

/***/ 195:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var createauditpro1 = function (_Interstellar$pagesBa) {
  _inherits(createauditpro1, _Interstellar$pagesBa);

  function createauditpro1() {
    _classCallCheck(this, createauditpro1);

    return _possibleConstructorReturn(this, (createauditpro1.__proto__ || Object.getPrototypeOf(createauditpro1)).apply(this, arguments));
  }

  _createClass(createauditpro1, [{
    key: 'complete',
    value: function complete() {
      var that = this;
      this.app.header.openControl('auditproject');
      this.app.header.changeselected(1);
      this.type = this.app.parpam.type;
      this.id = this.app.parpam.projectid;
      this.status = parseInt(this.app.parpam.status);
      this.styleModel(1);
      this.resize();
      this.upload();

      if (this.type !== 'new') {
        this.render();
      }

      // 存储空间名称。既可以在这里配置，也可以在SDK中全局配置。
      // 例如 var bucketName = "example-name";
      var bucketName = "proximatest";

      // 存储空间域名URL地址。既可以在这里配置，也可以在SDK中全局配置。
      // 例如 var bucketUrl = "https://example-name.cn-bj.ufileos.com/";
      var bucketUrl = "https://proximatest.internal-cn-sh2-01.ufileos.com/";

      // 计算token的地址。既可以在这里配置，也可以在SDK中全局配置。
      // 例如 var tokenUrl = "token_server.php";
      var tokenUrl = "../../libs/token_server.php";

      // 实例化UCloudUFile
      //that.ufile =  new UCloudUFile(bucketName, bucketUrl, tokenUrl);
      //数据变化的时候处理
      // if ((this.type != 'new' && !this.projectId) || !this.type) {
      //     this.app.changePage('projectmanage')
      //     return
      // }
      this.model._event._addEvent('apiData.change', function () {
        if (that.dom.find('.proname').val() || that.dom.find('textarea').val()) {
          that.app.session.set('ischanged', true);
        }
        if (JSON.stringify(that.model.getData('apiData')) == '{}') {
          that.app.session.del('data_1');
          return;
        }
        if (that.model.getData('apiData').name && that.model.getData('apiData').remark) {
          that.app.session.set('data_1', JSON.stringify(that.model.getData('apiData')));
        } else {
          that.app.session.del('data_1');
        }
      });
      this.eventAdd();
      this.initscroll();
    }
  }, {
    key: 'eventAdd',
    value: function eventAdd() {
      var _this3 = this;

      var that = this;
      this.dom.find('.uploadarea').on('click', function () {
        _this3.dom.find('.dianjiupload').click();
      });
      this.dom.find('.dianjiupload').on('change', function () {
        var thisurl = 'http://video-static.xdcdn.xiaodutv.com/browse_static/v3/common/widget/global/player/newPlayer_e2332cd1.swf';
        // that.uploadufile()
        var temp = _this3.model.getData('apiData');
        temp['remarkFileUrl'] = JSON.parse(temp['remarkFileUrl']);
        temp['remarkFileUrl'].push(thisurl);
        temp['remarkFileUrl'] = JSON.stringify(temp['remarkFileUrl']);
        //temp['remarkFileUrl'] = 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1539756479843&di=46adde08da81fbb964771f15c6be8ba3&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimage%2Fc0%253Dpixel_huitu%252C0%252C0%252C294%252C40%2Fsign%3D84b6266e084f78f0940692b310496f39%2Fa08b87d6277f9e2f7853a5321430e924b899f3a2.jpg'
        // temp['remarkFileUrl']='http://video-static.xdcdn.xiaodutv.com/browse_static/v3/common/widget/global/player/newPlayer_e2332cd1.swf'
        _this3.model.setData('apiData', temp);
      });
      this.dom.find('.apidata').on('change', function () {
        if (ES.selctorDoc(this).attr('api')) {
          var keyname = ES.selctorDoc(this).attr('api');
          var temp = that.model.getData('apiData');
          temp[keyname] = JSON.stringify(ES.selctorDoc(this).val().trim()).slice(1, -1);
          that.model.setData('apiData', temp);
        }
      });
      this.dom.find('.proname').on('blur', function () {
        if (this.type !== 'view') {
          ES.selctorDoc(this).removeClass('redborder');
          ES.selctorDoc(this).parent().find('.required1').remove();
          ES.selctorDoc(this).parent().find('.required').remove();
          if (ES.selctorDoc(this).val().trim() == this.proname) {
            return;
          }
          var json = {
            name: ES.selctorDoc(this).val().trim()
            // that.api.isrepeat(json).done(function(res) {
            //     if (res.code == 401) {
            //         let temp = that.model.getData('apiData')
            //         temp.name=''
            //         that.model.setData('apiData', temp)
            //         that.dom.find('.proname').after('<span class="required1">项目名称已存在</span>')
            //         that.dom.find('.proname').addClass('redborder')
            //     }
            // })
          };
        }
      });
      this.app.header.event._addEvent('header.changePageError', function () {
        _this3.dom.find('.redlabel').removeClass('redborder');
        _this3.dom.find('.required').remove();
        _this3.dom.find('.inputLine').dom.forEach(function (val, idx) {
          if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
            val.find('.' + val.attr('redlabel')).addClass('redborder');
            val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
          }
        });
      });
      this.dom.find('.save').on('click', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var res;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this3.dom.find('.redborder').removeClass('redborder');
                _this3.dom.find('.required').remove();
                _this3.dom.find('.inputLine').dom.forEach(function () {
                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(val, idx) {
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                              val.find('.' + val.attr('redlabel')).addClass('redborder');
                              val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                            }

                          case 1:
                          case 'end':
                            return _context.stop();
                        }
                      }
                    }, _callee, _this3);
                  }));

                  return function (_x, _x2) {
                    return _ref2.apply(this, arguments);
                  };
                }());

                if (!(_this3.dom.find('.redborder').dom && _this3.dom.find('.redborder').dom.some(function (item) {
                  return item.box().clientHeight !== 0;
                }))) {
                  _context2.next = 7;
                  break;
                }

                return _context2.abrupt('return', false);

              case 7:
                if (_this3.type == 'new') {
                  _this3.model.apiData.action = 1;
                } else {
                  _this3.model.apiData.action = 2;
                  _this3.model.apiData.auditProjectId = _this3.id;
                }
                _this3.app.loading.show();
                _context2.next = 11;
                return _this3.api.audit_project_edit(_this3.model.apiData);

              case 11:
                res = _context2.sent;

                _this3.app.loading.hide();
                if (res.code == 0) {
                  _this3.app.session.clearAll();
                  _this3.app.changePage('createauditpro2', {
                    type: 'edit',
                    projectid: res.data ? res.data.auditProjectId : _this3.id,
                    status: _this3.status
                  });
                } else {
                  _this3.errorshow(res.msg);
                }

              case 14:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, _this3);
      })));
    }
  }, {
    key: 'errorshow',
    value: function errorshow(msg) {
      this.app.alert.show({
        title: ' ',
        msg: msg,
        close: false
      });
    }
  }, {
    key: 'render',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var pagedata, json, res;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                pagedata = {};
                json = {
                  auditProjectId: this.id
                };

                this.app.loading.show();
                _context3.next = 5;
                return this.api.auditproject_read(json);

              case 5:
                res = _context3.sent;

                this.app.loading.hide();
                if (res.code == 0) {
                  pagedata.name = res.data.name;
                  pagedata.remark = res.data.remark;
                  pagedata.remarkFileUrl = res.data.remarkFileUrl;
                  pagedata.description = res.data.description;
                } else {
                  this.errorshow(res.msg);
                }
                this.proname = pagedata.name;
                this.model.setData('apiData', pagedata);
                this.dom.find('.apidata[api=name]').val(pagedata.name);
                this.dom.find('.apidata[api=remark]').val(JSON.parse('"' + pagedata.remark + '"'));
                this.dom.find('.apidata[api=description]').val(JSON.parse('"' + pagedata.description + '"'));
                this.app.session.clearAll();
                if (this.type == 'view') {
                  this.dom.find('.apidata').attr('readonly', 'readonly');
                  this.dom.find('.save').remove();
                }

              case 15:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function render() {
        return _ref3.apply(this, arguments);
      }

      return render;
    }()
  }, {
    key: 'upload',
    value: function upload() {
      var _this4 = this;

      //利用html5 FormData() API,创建一个接收文件的对象，因为可以多次拖拽，这里采用单例模式创建对象Dragfiles
      var Dragfiles = function () {
        var instance;
        return function () {
          if (!instance) {
            instance = new FormData();
          }
          return instance;
        };
      }();
      //为Dragfiles添加一个清空所有文件的方法
      FormData.prototype.deleteAll = function () {
        var _this = this;
        this.forEach(function (value, key) {
          _this.delete(key);
        });
      };
      //添加拖拽事件
      var dz = document.getElementById('uploadarea');
      dz.ondragover = function (ev) {
        //阻止浏览器默认打开文件的操作
        ev.preventDefault();
        //拖入文件后边框颜色变红
        this.style.borderColor = 'red';
      };
      dz.ondrop = function (ev) {
        //恢复边框颜色
        _this4.style.borderColor = 'gray';
        //阻止浏览器默认打开文件的操作
        ev.preventDefault();
        var files = ev.dataTransfer.files;
        var len = files.length,
            i = 0;
        var frag = document.createDocumentFragment(); //为了减少js修改dom树的频度，先创建一个fragment，然后在fragment里操作
        var tr, time, size;
        var newForm = Dragfiles(); //获取单例
        var it = newForm.entries(); //创建一个迭代器，测试用
        while (i < len) {
          tr = document.createElement('tr');
          //获取文件大小
          size = Math.round(files[i].size * 100 / 1024) / 100 + 'KB';
          //获取格式化的修改时间
          time = files[i].lastModifiedDate.toLocaleDateString() + ' ' + files[i].lastModifiedDate.toTimeString().split(' ')[0];
          tr.innerHTML = '<td>' + files[i].name + '</td><td>' + time + '</td><td>' + size + '</td><td>删除</td>';
          console.log(size + ' ' + time);
          var html = '<li class="file">\n' + '                        <i class="iconfont icon-qubiezhen"></i>\n' + '                        <span class="filename">' + files[i].name + '</span>\n' + '                        <span class="progress"></span>' + '                        <i class="iconfont icon-guanbi"></i>' + '                    </li>';
          console.log(ES.selctorDoc('.filelist').dom, 'dom');
          ES.selctorDoc('.filelist').append(html);
          _this4.resize();
          frag.appendChild(tr);
          //添加文件到newForm
          newForm.append(files[i].name, files[i]);
          //console.log(it.next());
          i++;
        }
        _this4.upload1(Dragfiles);
        //this.childNodes[1].childNodes[1].appendChild(frag);
        //为什么是‘1'？文档里几乎每一样东西都是一个节点，甚至连空格和换行符都会被解释成节点。而且都包含在childNodes属性所返回的数组中.不同于jade模板
      };
    }
  }, {
    key: 'upload1',
    value: function upload1(value) {
      var data = value(); //获取formData
      $.ajax({
        url: 'upload',
        type: 'POST',
        data: data,
        async: true,
        cache: false,
        contentType: false,
        processData: false,
        success: function success(data) {
          alert('succeed!'); //可以替换为自己的方法
          closeModal();
          data.deleteAll(); //清空formData
          $('.tbody').empty(); //清空列表
        },
        error: function error(returndata) {
          alert('failed!'); //可以替换为自己的方法
        }
      });
    }
  }, {
    key: 'uploadufile',
    value: function uploadufile() {
      var fileRename = this.dom.find(".dianjiupload").val();
      var file = document.getElementById("uploader").files[0];
      var data = {
        file: file,
        fileRename: fileRename
      };
      var successCallBack = function successCallBack(res) {
        alert('上传成功');
        var html = '<li class="file" linkurl="' + res + '">\n' + '                        <i class="iconfont icon-qubiezhen"></i>\n' + '                        <span class="filename">' + file.name + '</span>\n' + '                        <span class="progress"></span>' + '                        <i class="iconfont icon-guanbi"></i>' + '                    </li>';
        console.log(ES.selctorDoc('.filelist').dom, 'dom');
        ES.selctorDoc('.filelist').append(html);
        // $("#result").html("上传成功");
        // $("#result").append(JSON.stringify(res));
      };
      var progressCallBack = function progressCallBack(res) {
        var percentComplete = "上传进度：" + res * 100 + "%";
        console.log(percentComplete);
        //$("#result").html(percentComplete);
      };
      var errorCallBack = function errorCallBack(res) {
        // $("#result").html("errorCallBack: " + JSON.stringify(res));
        console.error("errorCallBack", res);
      };
      this.ufile.uploadFile(data, successCallBack, errorCallBack, progressCallBack);
    }
  }, {
    key: 'resize',
    value: function resize() {
      var ch = ES.selctorDoc(window).box().clientHeight - 100;
      var cw = ES.selctorDoc(window).box().clientWidth - 40;
      ES.selctorDoc('.createauditpro1').css({ 'height': ch, 'width': cw });
      this.initscroll();
    }
  }, {
    key: 'initscroll',
    value: function initscroll() {
      if (this.myScroll) {
        this.myScroll.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      ES.selctorDoc('.createauditpro1').attr('id', rid);
      this.myScroll = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }]);

  return createauditpro1;
}(Interstellar.pagesBase);

module.exports = createauditpro1;

/***/ }),

/***/ 555:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(956);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./createauditpro1.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./createauditpro1.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 556:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlDict = {
  audit_project_edit: '/audit/project/edit',
  auditproject_read: '/audit/project/read'
};
var api = {

  audit_project_edit: function audit_project_edit(value) {
    return this.HttpRequest.POST(urlDict.audit_project_edit, value);
  },

  auditproject_read: function auditproject_read(value) {
    return this.HttpRequest.POST(urlDict.auditproject_read, value);
  }
};
module.exports = api;

/***/ }),

/***/ 557:
/***/ (function(module, exports) {

module.exports = "<div class=createauditpro1> <div class=scroll> <a class=\"biaozhubtn save\">保存</a> <p class=title>第一步：审核项目信息</p> <div class=\"inputLine w100\" redlabel=inputBox> <span class=w135><label class=redstar>*</label>审核项目名称：</span> <input type=text class=\"inputBox apidata proname\" check=empty api=name /> </div> <br> <div class=\"inputLine w100\" redlabel=inputBox> <span class=w135><label class=redstar>*</label>审核项目描述：</span> <textarea type=text class=\"inputBox apidata\" check=empty api=remark></textarea> </div> <div class=uploadarea id=uploadarea> <img src=/images/page/shangchuan.png> <p>可以上传图片、视频文件等规范外部医生标注</p> <input type=file class=dianjiupload id=uploader /> </div> <ul class=filelist> </ul> <div class=\"inputLine w100\" redlabel=inputBox> <span class=w135>审核项目备注：</span> <textarea type=text class=\"inputBox apidata\" check=\"\" api=description></textarea> </div> </div> </div>";

/***/ }),

/***/ 558:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//这边基本上引入需要使用的资源less，api，需要使用的模块等等。

var createauditpro1 = function (_Interstellar$modelBa) {
    _inherits(createauditpro1, _Interstellar$modelBa);

    function createauditpro1(app) {
        _classCallCheck(this, createauditpro1);

        var _this = _possibleConstructorReturn(this, (createauditpro1.__proto__ || Object.getPrototypeOf(createauditpro1)).call(this, app));

        _this.listInfo = {};
        _this.hospitalInfo = {};
        _this.modalityInfo = {};
        _this.totalInfo = {};
        _this.componentdata = {};

        _this.apiData = { "name": "", "remark": "", "remarkFileUrl": "[]", "description": "" };

        return _this;
    }

    return createauditpro1;
}(Interstellar.modelBase);

module.exports = createauditpro1;

/***/ }),

/***/ 956:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".createauditpro1 {\n  margin: 20px;\n  background: #fff;\n  height: 100%;\n  font-size: 14px;\n  overflow: hidden;\n  border: 1px solid #fff;\n  position: relative;\n}\n.createauditpro1 .scroll {\n  overflow: hidden;\n  padding: 20px 0;\n}\n.createauditpro1 .scroll .save {\n  position: absolute;\n  right: 40px;\n  padding: 0 20px;\n  height: 40px;\n  line-height: 40px;\n  background: #4c9fa9;\n  color: #fff;\n}\n.createauditpro1 .bigtitle {\n  padding: 20px;\n  font-size: 17px;\n}\n.createauditpro1 .title {\n  font-size: 16px;\n  height: 40px;\n  line-height: 40px;\n  padding-left: 66px;\n  margin-bottom: 20px;\n}\n.createauditpro1 .inputLine {\n  width: 80%;\n  position: relative;\n  margin: 10px 0;\n  display: inline-block;\n}\n.createauditpro1 .inputLine > span {\n  width: 100px;\n  text-align: right;\n}\n.createauditpro1 .inputLine input {\n  padding-left: 10px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 40px;\n  line-height: 40px;\n}\n.createauditpro1 .inputLine textarea {\n  padding-left: 10px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  width: 80%;\n  height: 120px;\n  resize: none;\n}\n.createauditpro1 .w100 {\n  width: 100%;\n}\n.createauditpro1 .w100 input {\n  width: 80%;\n}\n.createauditpro1 .w100 span {\n  display: inline-block;\n  vertical-align: top;\n}\n.createauditpro1 .w135 {\n  width: 155px!important;\n  text-align: right;\n}\n.createauditpro1 .hangnei {\n  display: inline-block;\n}\n.createauditpro1 .uploadarea {\n  padding-left: 10px;\n  text-align: center;\n  height: 200px;\n  width: 80%;\n  border: 1px dashed #448e97;\n  margin: 20px 20px 20px 162px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n.createauditpro1 .uploadarea img {\n  width: 95px;\n  height: 105px;\n  margin-top: 30px;\n  margin-bottom: 10px;\n}\n.createauditpro1 .uploadarea p:first-child {\n  margin-top: 105px;\n}\n.createauditpro1 .uploadarea .dianjiupload {\n  position: absolute;\n  top: 2000px;\n  left: 2000px;\n}\n.createauditpro1 .filelist {\n  width: 80%;\n  margin: 20px 0 50px 162px;\n}\n.createauditpro1 .filelist li {\n  width: 100%;\n  position: relative;\n  margin-bottom: 20px;\n  /* Standard syntax */\n}\n.createauditpro1 .filelist li i {\n  font-size: 24px;\n  color: #448e97;\n}\n.createauditpro1 .filelist li .filename {\n  vertical-align: top;\n}\n.createauditpro1 .filelist li .progress {\n  position: absolute;\n  top: 20px;\n  left: 27px;\n  height: 7px;\n  display: inline-block;\n  background: #448e97;\n  width: 90%;\n  border-radius: 8px;\n  -webkit-transition: width .8s ease;\n  -moz-transition: width .8s ease;\n  transition: width .8s ease;\n  -webkit-animation: progressbar 7s 1;\n  animation: progressbar 7s 1;\n}\n.createauditpro1 .filelist li .icon-guanbi {\n  position: absolute;\n  right: 10px;\n  font-size: 18px;\n  top: 7px;\n  cursor: pointer;\n}\n@-webkit-keyframes progressbar {\n  from {\n    width: 0;\n  }\n  to {\n    width: 90%;\n  }\n}\n@keyframes progress {\n  from {\n    width: 0;\n  }\n  to {\n    width: 90%;\n  }\n}\n.createauditpro1 .required1 {\n  width: unset!important;\n  color: red;\n  position: absolute;\n}\n", ""]);

// exports


/***/ })

});
//# sourceMappingURL=1ce30d9558308088d9bf.48.min.js.map