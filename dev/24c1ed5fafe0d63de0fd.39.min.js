webpackJsonp([39],{

/***/ 152:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//这边基本上引入需要使用的资源less，api，需要使用的模块等等。
__webpack_require__(472);

var alltasklist = function (_Interstellar$pagesBa) {
  _inherits(alltasklist, _Interstellar$pagesBa);

  function alltasklist() {
    _classCallCheck(this, alltasklist);

    return _possibleConstructorReturn(this, (alltasklist.__proto__ || Object.getPrototypeOf(alltasklist)).apply(this, arguments));
  }

  _createClass(alltasklist, [{
    key: "complete",
    value: function complete() {
      var _this2 = this;

      this.app.header.showcrube();
      this.resize();
      this.styleModel(1);
      this.type = 'doctor';
      this.resetStauts = true;
      this.item = __webpack_require__(857);
      this.pageControl();
      this.model.data.currentTime = Tool.time(new Date().getTime(), 'yyyy-mm-dd HH:MM:ss');
      this.model._event._addEvent('data.change', function () {
        _this2.loadData();
      });
    }
  }, {
    key: "loadData",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var value;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.api.task_search(this.model.getData('data'));

              case 2:
                value = _context.sent;

                this.setData(value.data.list);
                if (this.resetStauts) {
                  if (value.data.list.length != 0) {
                    this.pagina.getTotal(value.data.pages, 3);
                    this.pages.getTotal(value.data.pages, value.data.total);
                  } else {
                    this.pagina.resetAll();
                    this.pages.getTotal(1, value.data.total);
                  }
                }
                this.pages.setnowpage(this.model.getData('data').page);
                this.initscroll('tasklistarea');

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function loadData() {
        return _ref.apply(this, arguments);
      }

      return loadData;
    }()
  }, {
    key: "pageControl",
    value: function pageControl() {
      var _this3 = this;

      __webpack_require__.e/* require.ensure */(52/* duplicate */).then((function () {
        var dropdown = __webpack_require__(638);
        var drop = _this3.app.loadModule(dropdown, _this3.dom.find('.sicknessType'), {
          className: 'xlk',
          firstSelect: { val: '项目标签', idx: '' },
          data: Tool.configxlkformat(_this3.app.constmap['SICKNESS_TYPE'])
        });
        drop.event._addEvent('option.click', function (value) {
          _this3.resetStauts = true;
          _this3.model.data['sicknessType'] = value.idx;
          _this3.loadData();
        });
        drop.event._addEvent('dropDown.clear', function (value) {
          _this3.resetStauts = true;
          _this3.model.data['sicknessType'] = null;
          _this3.loadData();
        });
      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
      __webpack_require__.e/* require.ensure */(63).then((function () {
        var pagination = __webpack_require__(749);
        var pageset = __webpack_require__(750);
        _this3.pagina = _this3.app.loadModule(pagination, _this3.dom.find('.pagination'), {
          total: 1,
          flag: true
        });
        _this3.pagina.event._addEvent('pagination.changePage', function (value) {
          _this3.resetStauts = false;
          var data = _this3.model.getData('data');
          data.page = value;
          _this3.model.setData('data', data);
        });
        _this3.pages = _this3.app.loadModule(pageset, _this3.dom.find('.pageset'));
        _this3.pages.event._addEvent('pagesizeset.change', function (value) {
          _this3.resetStauts = true;
          var data = _this3.model.getData('data');
          data.page = 1;
          data.pageSize = value.num;
          _this3.model.setData('data', data);
        });
        _this3.loadData();
      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
    }
  }, {
    key: "dropdownRender",
    value: function dropdownRender() {
      var _this4 = this;

      __webpack_require__.e/* require.ensure */(64).then((function () {
        var dropdown = __webpack_require__(853);
        _this4.patientSex = _this4.app.loadModule(dropdown, _this4.dom.find('.searchtask'), {
          firstSelect: {
            val: '全部任务',
            idx: ''
          },
          data: [{
            val: '男',
            idx: 'M'
          }, {
            val: '女',
            idx: 'F'
          }]
        });
      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
      __webpack_require__.e/* require.ensure */(52/* duplicate */).then((function () {
        var dropdown = __webpack_require__(638);
        _this4.patientSex = _this4.app.loadModule(dropdown, _this4.dom.find('.taskfilter'), {
          className: 'xlk',
          firstSelect: {
            val: '全部标注类型',
            idx: ''
          },
          data: [{
            val: '男',
            idx: 'M'
          }, {
            val: '女',
            idx: 'F'
          }]
        });
        _this4.patientSex = _this4.app.loadModule(dropdown, _this4.dom.find('.profilter'), {
          className: 'xlk',
          firstSelect: {
            val: '全部项目',
            idx: ''
          },
          data: [{
            val: '男',
            idx: 'M'
          }, {
            val: '女',
            idx: 'F'
          }]
        });
      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
    }
  }, {
    key: "setData",
    value: function setData(value) {
      var that = this;
      this.dom.find('.tasklistarea .taskcontent').html('');
      if (value.length == 0) {
        this.dom.find('.tasklistarea .taskcontent').html('<span>没有任务可以领取！</span>');
        return;
      }
      for (var i = 0; i < value.length; i++) {
        this.dom.find('.tasklistarea .taskcontent').append('<div class="newtask task' + i + '" taskid="' + i + '"></div>');
        value[i].endTime = value[i].endTime ? Tool.time(value[i].endTime, "yyyy-mm-dd") : "无";
        value[i].sicknessType = value[i].sicknessType ? value[i].sicknessType : "";
        if (value[i].type == 2) {
          value[i].algPreAnnotation = "审核任务";
        } else {
          value[i].algPreAnnotation = value[i].algPreAnnotation ? '算法标注' : '人工标注';
        }
        this.app.loadModule(this.item, this.dom.find('.task' + i), value[i]);
        this.dom.find('.task' + i).on('click', function () {
          var tdom = ES.selctorDoc(this);
          var data = value[tdom.attr('taskid')];
          that.app.changePage('newtaskdetail', { taskId: data.id });
        });
      }
    }
  }, {
    key: "initscroll",
    value: function initscroll(val) {
      if (this.myScroll) {
        this.myScroll.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      ES.selctorDoc('.' + val).attr('id', rid);
      this.myScroll = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }, {
    key: "resize",
    value: function resize() {
      var ch = ES.selctorDoc(window).box().clientHeight - 220;
      ES.selctorDoc('.tasklistarea').css({ 'height': ch });
    }
  }]);

  return alltasklist;
}(Interstellar.pagesBase);

module.exports = alltasklist;

/***/ }),

/***/ 472:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(823);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./personalaccount.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./personalaccount.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 477:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(864);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./alltasklist.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./alltasklist.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 478:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlDict = {
  task_search: '/task/user/joinable/search'
};
var api = {
  task_search: function task_search(value) {
    return this.HttpRequest.POST(urlDict.task_search, value);
  }
};
module.exports = api;

/***/ }),

/***/ 479:
/***/ (function(module, exports) {

module.exports = "<div class=alltasklist> <div class=top> <span class=title>新任务</span> <div class=filterarea> <div class=sicknessType></div> </div> </div> <div class=tasklistarea> <div class=taskcontent> </div> </div> <div class=pageset></div> <div class=pagination></div> </div>";

/***/ }),

/***/ 480:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AllTaskListModel = function (_Interstellar$modelBa) {
    _inherits(AllTaskListModel, _Interstellar$modelBa);

    function AllTaskListModel(app) {
        _classCallCheck(this, AllTaskListModel);

        var _this = _possibleConstructorReturn(this, (AllTaskListModel.__proto__ || Object.getPrototypeOf(AllTaskListModel)).call(this, app));

        _this.data = { "userId": JSON.parse(_this.app.local.get('all')).userId, "pageSize": 10, "page": 1, "currentTime": "", "name": "", "project_name": "", "assign_method": null, "status": "2", "projectId": null, "start_time": null, "end_time": null };
        return _this;
    }

    return AllTaskListModel;
}(Interstellar.modelBase);

module.exports = AllTaskListModel;

/***/ }),

/***/ 823:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".personalaccount {\n  background: #f9f9f9;\n  border-top: 1px #f9f9f9 solid;\n  border-bottom: 1px #f9f9f9 solid;\n  margin: 40px;\n}\n.personalaccount .scroll {\n  overflow: hidden;\n}\n.personalaccount .top {\n  font-size: 14px;\n  margin-bottom: 50px;\n}\n.personalaccount .top .firstline {\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 40px;\n}\n.personalaccount .top .errorline {\n  margin-top: 30px;\n}\n.personalaccount .top .errorline a {\n  font-family: MicrosoftYaHei;\n  font-size: 14px;\n  color: #448E97;\n  text-decoration: underline;\n}\n.personalaccount .main {\n  display: flex;\n}\n.personalaccount .main .tasktitle {\n  font-size: 15px;\n  margin-bottom: 10px;\n}\n.personalaccount .main .doingtask {\n  width: 500px;\n}\n.personalaccount .main .doingtask .jxztask {\n  background: #fff;\n  width: 280px;\n  height: 180px;\n  cursor: pointer;\n  border-radius: 2px;\n  margin-bottom: 10px;\n  padding: 0 20px;\n}\n.personalaccount .main .doingtask .jxztask .tasktitle {\n  height: 50px;\n  line-height: 50px;\n  font-size: 16px;\n  margin-bottom: 50px;\n}\n.personalaccount .main .doingtask .jxztask .tasktitle .percent {\n  font-size: 24px;\n  font-weight: bold;\n  float: right;\n}\n.personalaccount .main .doingtask .jxztask .starttime,\n.personalaccount .main .doingtask .jxztask .endtime {\n  margin: 20px 0;\n}\n.personalaccount .main .doingtask .getnewtask {\n  cursor: pointer;\n  width: 320px;\n  height: 140px;\n  background: #fff;\n  color: #CCCCCC;\n  border-radius: 2px;\n  text-align: center;\n  padding-top: 40px;\n}\n.personalaccount .main .doingtask .getnewtask i {\n  font-size: 60px;\n}\n.personalaccount .main .doingtask .getnewtask p {\n  font-size: 14px;\n  margin-top: 10px;\n}\n.personalaccount .main .doingtask .getnewtask:hover {\n  color: #4c9fa9;\n}\n.personalaccount .main .donetask {\n  flex: 1;\n}\n", ""]);

// exports


/***/ }),

/***/ 857:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(858);
// var html = require('./tpl.html')

var alltasklistitem = function (_Interstellar$moduleB) {
    _inherits(alltasklistitem, _Interstellar$moduleB);

    function alltasklistitem(app, dom, value, addMode) {
        _classCallCheck(this, alltasklistitem);

        var _this = _possibleConstructorReturn(this, (alltasklistitem.__proto__ || Object.getPrototypeOf(alltasklistitem)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(860);
        _this.name = "alltasklistitem";
        return _this;
    }

    _createClass(alltasklistitem, [{
        key: 'complete',
        value: function complete() {}
    }]);

    return alltasklistitem;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = alltasklistitem;

/***/ }),

/***/ 858:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(859);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./alltasklistitem.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./alltasklistitem.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 859:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".alltasklistitem {\n  background: #fff;\n  width: 22.8%;\n  height: 170px;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  float: left;\n  margin-right: 2%;\n  margin-bottom: 20px;\n  cursor: pointer;\n}\n.alltasklistitem .mr20 {\n  margin-right: 20px;\n}\n.alltasklistitem .taskheader {\n  height: 40px;\n  line-height: 40px;\n  font-size: 15px;\n  border-bottom: 1px dotted #ccc;\n  padding: 0 20px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n.alltasklistitem .taskheader .taskname {\n  display: unset;\n}\n.alltasklistitem .taskheader .taskstatus {\n  float: right;\n  margin-right: 20px;\n}\n.alltasklistitem .taskxq {\n  margin: 20px 10px 10px 10px;\n}\n.alltasklistitem .taskxq span {\n  margin-bottom: 10px;\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.alltasklistitem .taskxq span label {\n  display: unset;\n}\n", ""]);

// exports


/***/ }),

/***/ 860:
/***/ (function(module, exports) {

module.exports = "<div class=alltasklistitem data-id=\"<%==p.id=%>\"> <p class=taskheader> <span class=taskname title=\"<%==p.name=%>\"> <%==p.name=%></span> </p> <p class=taskxq> <span class=\"\">所属项目：<label><%==p.projectName=%></label></span> <span class=\"\">任务类型：<label><%==p.algPreAnnotation=%></label></span> <span class=\"\">样本数量：<label><%==p.seriesTotalNum=%></label></span> <span class=\"\">结束时间：<label class=mr20><%==p.endTime=%></label>项目标签：<label><%==p.sicknessType=%></label></span> </p> </div>";

/***/ }),

/***/ 864:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".alltasklist {\n  margin: 20px 40px;\n}\n.alltasklist .top {\n  z-index: 100;\n}\n.alltasklist .top .title {\n  font-size: 22px;\n  font-weight: bold;\n  border-bottom: 1px solid #6f6e6e;\n}\n.alltasklist .top .filterarea > div {\n  display: inline-block;\n  position: relative;\n}\n.alltasklist .top .filterarea .sicknessType {\n  margin: 10px 0;\n}\n.alltasklist .top .filterarea .xlk {\n  height: 30px;\n  line-height: 30px;\n  width: 180px;\n}\n.alltasklist .tasklistarea {\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n}\n.alltasklist .tasklistarea .taskcontent {\n  overflow: hidden;\n}\n.alltasklist .newtask:nth-child(4n) {\n  margin-right: 0;\n}\n.alltasklist .pageset {\n  display: inline-block;\n  margin-left: 0px;\n  margin-top: 10px;\n}\n.alltasklist .pageset ._dropdown1 ul {\n  top: -180px;\n}\n.alltasklist .pagination {\n  margin-top: 10px;\n  float: right!important;\n}\n", ""]);

// exports


/***/ })

});
//# sourceMappingURL=24c1ed5fafe0d63de0fd.39.min.js.map