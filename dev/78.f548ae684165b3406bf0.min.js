webpackJsonp([78],{105:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(65);t.default=(0,i.generateRequestFn)({projectNameSearch:"/project/name/search",auditProjectNameSearch:"/audit/project/name/search",auditProjectSearch:"/audit/project/search",auditProjectStatusUpdate:"/audit/project/status/update",auditProjectClone:"/audit/project/clone",taskNameSearch:"/task/name/search",auditTaskSearchv2:"/audit/task/searchv2",auditProjectRead:"/audit/project/read",auditProjectEdit:"/audit/project/edit",auditProjectSourceEdit:"/audit/project/source/edit",auditProjectStatistics:"/audit/project/detail/statistics",auditProjectSeriesRead:"/audit/project/series/read",auditProjectTaskRead:"/audit/project/task/read",auditTaskSearch:"/audit/task/search"})},2067:function(e,t,r){var i=r(2068);"string"==typeof i&&(i=[[e.i,i,""]]);var o={transform:void 0};r(705)(i,o);i.locals&&(e.exports=i.locals)},2068:function(e,t,r){(e.exports=r(704)(!1)).push([e.i,".createaudit-pro-step-one {\n  position: relative;\n  padding: 20px 20px 60px;\n  color: #333;\n  background: #fff;\n}\n.createaudit-pro-step-one .header-title {\n  display: flex;\n  font-size: 16px;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  padding-left: 10px;\n}\n",""])},312:function(e,t,r){"use strict";var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}();r(2067);var o=n(r(105)),a=n(r(65));function n(e){return e&&e.__esModule?e:{default:e}}function s(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,r){return function i(o,a){try{var n=t[o](a),s=n.value}catch(e){return void r(e)}if(!n.done)return Promise.resolve(s).then(function(e){i("next",e)},function(e){i("throw",e)});e(s)}("next")})}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,Interstellar.pagesBase),i(t,[{key:"complete",value:function(){this.app.header.openControl("auditprojectc"),this.app.header.changeselected(1),this.styleModel(1);var e=this.app;new Vue({el:"#createauditProStepOne",data:function(){return{app:e,type:e.parpam.type,id:1*e.parpam.projectid,status:parseInt(e.parpam.status),groupList:[],projectForm:{segmentLayer:[7],projectTargetDesc:""},rules:{name:[{required:!0,message:"请输入C端审核项目名称",trigger:["blur","change"]}],remark:[{required:!0,message:"请输入C端审核项目描述",trigger:["blur","change"]}],seriesImgFileType:[{required:!0,message:"请选择数据类型",trigger:"change"}],auditType:[{required:!0,message:"请选择审核类型",trigger:"change"}],segmentLayer:[{required:!0,message:"请选择分割层数",trigger:"change"}]},sicknessTypeList:Tool.configxlkformat(e.constmap.SICKNESS_TYPE),projectFunctionList:Tool.configxlkformat(e.constmap.PROJECT_FUNCTION),projectTargetList:Tool.configxlkformat(e.constmap.AUDIT_PROJECT_TARGET),seriesImgFileTypeList:{3:"MPR",6:"冠脉分割",7:"冠脉狭窄",8:"冠脉命名",11:"冠脉斑块分割",15:"C端病理大图"},auditTypeMap:{3:{1:"点位",2:"MASK单标",7:"MASK双标"},6:{2:"MASK单标",3:"MASK双标"},7:{5:"点位"},8:{4:"命名双审"},11:{8:"MASK双标"},15:{6:"点位"}},segmentLayerList:[1,2,3,4,5,6,7],windowCodeList:[],docFileList:[]}},computed:{isView:function(){return"view"===this.type},isStart:function(){return 2===this.status},auditTypeSelList:function(){var e=this.projectForm.seriesImgFileType,t=void 0===e?3:e,r=this.auditTypeMap[t]||{};return 1===Object.keys(r).length&&(this.projectForm.auditType=Object.keys(r)[0]),r}},created:function(){this.windowCodeList=Tool.configxlkformat(this.app.constmap.WINDOW)},mounted:function(){this.id&&this.queryAuditProjectDetail(),this.queryProjectGroupList(),this.queryDocFileList()},methods:{queryAuditProjectDetail:function(){var e=s(regeneratorRuntime.mark(function e(){var t,r,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,o.default.auditProjectRead({auditProjectId:this.id});case 2:t=e.sent,(r=t.data||{}).groupId=r.groupId||void 0,r.seriesImgFileType+="",r.auditType+="",i=r.extendJson?JSON.parse(r.extendJson):"",r.segmentLayer=i&&i.segmentLayer||[],this.projectForm=r;case 10:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),handleSeriesImgFileTypeChange:function(e){this.$set(this.projectForm,"auditType","");var t=this.projectForm.segmentLayer||"";6===Number(e)?this.$set(this.projectForm,"segmentLayer",t.length?this.projectForm.segmentLayer:[7]):this.$set(this.projectForm,"segmentLayer","")},queryProjectGroupList:function(){var e=s(regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.default.groupSearch({page:1});case 2:t=e.sent,this.groupList=t.data.list||[];case 4:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),queryDocFileList:function(){var e=s(regeneratorRuntime.mark(function e(){var t,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.default.queryFileList({bizType:"PATHOLOGY_PROJECT",bizName:r});case 2:t=e.sent,this.docFileList=t.data||[];case 4:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),save:function(){var e=this;this.$refs.auditProform.validate(function(){var t=s(regeneratorRuntime.mark(function t(r){var i,a,n,s,l,c,p,u,d,m,f,g,h,j,y,v;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(r){t.next=2;break}return t.abrupt("return");case 2:return i=e.projectForm,a=i.name,n=i.remark,s=i.groupId,l=i.seriesImgFileType,c=i.auditType,p=i.segmentLayer,u=i.description,d=i.windowCode,m=i.bizFileId,f=i.sicknessType,g=i.projectFunction,h=i.projectTarget,j=i.projectTargetDesc,y={name:a,remark:n,groupId:s,seriesImgFileType:+l,auditType:+c,description:u,clientType:2,windowCode:d,bizFileId:m,sicknessType:f,projectFunction:g,projectTarget:h,projectTargetDesc:j},6===Number(l)?y.extendJson={segmentLayer:p}:y.extendJson="","new"===e.type?y.action=1:(y.action=2,y.auditProjectId=e.id),t.next=8,o.default.auditProjectEdit(y);case 8:v=t.sent,e.app.changePage("createauditproc2",{type:"edit",projectid:v.data?v.data.auditProjectId:e.id,status:e.status});case 10:case"end":return t.stop()}},t,e)}));return function(e){return t.apply(this,arguments)}}())}}})}}]),t}();e.exports=l},802:function(e,t){e.exports='<div id=createauditProStepOne class=createaudit-pro-step-one> <div class=header-title> <div class=title>第一步：C端审核项目信息</div> <el-button v-if=!isView type=primary @click=save>保存</el-button> </div> <el-form ref=auditProform :model=projectForm :rules=rules label-width=150px label-suffix=：> <el-form-item label=C端审核项目名称 prop=name> <el-input v-model=projectForm.name placeholder=请输入C端审核项目名称 :disabled=isView></el-input> </el-form-item> <el-form-item label=C端审核项目描述 prop=remark> <el-input type=textarea :rows=4 placeholder=请输入C端审核项目描述 v-model=projectForm.remark :disabled="isView || isStart"></el-input> </el-form-item> <el-row> <el-col :span=5 style=min-width:345px> <el-form-item label=项目标签 prop=sicknessType :rules="[{required: !id || projectForm.sicknessType || projectForm.projectFunction || projectForm.projectTarget, message: \'请选择项目标签\', trigger: [\'blur\', \'change\']}]"> <el-select v-model=projectForm.sicknessType placeholder=请选择项目标签 :disabled="isView || isStart"> <el-option v-for="item in sicknessTypeList" :key=item.idx :label=item.val :value=item.idx></el-option> </el-select> </el-form-item> </el-col> <el-col :span=5> <el-form-item label=项目目标 prop=projectFunction :rules="[{required: !id || projectForm.sicknessType || projectForm.projectFunction || projectForm.projectTarget, message: \'请选择项目目标\', trigger: [\'blur\', \'change\']}]"> <el-select v-model=projectForm.projectFunction placeholder=请选择项目目标 :disabled="isView || isStart"> <el-option v-for="item in projectFunctionList" :key=item.idx :label=item.val :value=item.idx></el-option> </el-select> </el-form-item> </el-col> <el-col :span=5> <el-form-item label=项目用途 prop=projectTarget :rules="[{required: !id || projectForm.sicknessType || projectForm.projectFunction || projectForm.projectTarget, message: \'请选择项目用途\', trigger: [\'blur\', \'change\']}]"> <el-select v-model=projectForm.projectTarget placeholder=请选择项目用途 :disabled="isView || isStart" @change="projectForm.projectTargetDesc = \'\'"> <el-option v-for="item in projectTargetList" :key=item.idx :label=item.val :value=item.idx></el-option> </el-select> </el-form-item> </el-col> <el-col v-show="projectForm.projectTarget === \'AUDIT_OTHER_SET\'" :span=5> <el-form-item label=其他用途 prop=projectTargetDesc :rules="[{required: projectForm.projectTarget === \'AUDIT_OTHER_SET\', message: \'请输入其他项目用途\', trigger: [\'blur\', \'change\']}]"> <el-input v-model=projectForm.projectTargetDesc placeholder=请输入其他项目用途 :disabled="isView || isStart"></el-input> </el-form-item> </el-col> </el-row> <el-form-item label=项目群组> <el-select v-model=projectForm.groupId placeholder=请选择项目群组 :disabled="isView || isStart"> <el-option v-for="item in groupList" :key=item.id :label=item.name :value=item.id></el-option> </el-select> </el-form-item> <el-form-item label=数据类型 prop=seriesImgFileType> <el-select v-model=projectForm.seriesImgFileType placeholder=请选择数据类型 :disabled=!!id @change=handleSeriesImgFileTypeChange> <el-option v-for="(name, value) in seriesImgFileTypeList" :key=value :label=name :value=value></el-option> </el-select> </el-form-item> <el-form-item label=审核类型 prop=auditType> <el-select v-model=projectForm.auditType placeholder=请选择审核类型 :disabled=!!id> <el-option v-for="(name, value) in auditTypeSelList" :key=value :label=name :value=value></el-option> </el-select> </el-form-item> <el-form-item v-if="projectForm.seriesImgFileType === \'6\'" label=分割层数 prop=segmentLayer> <el-checkbox-group v-model=projectForm.segmentLayer :disabled=!!id> <el-checkbox v-for="(item, index) in segmentLayerList" :key=index :label=item>{{`${item}层`}}</el-checkbox> </el-checkbox-group> </el-form-item> <el-form-item label=默认窗宽窗位> <el-select v-model=projectForm.windowCode placeholder=请选择默认窗宽窗位 clearable :disabled="isView || isStart"> <el-option v-for="{ idx, val } in windowCodeList" :key=idx :label=val :value=idx></el-option> </el-select> </el-form-item> <el-form-item label=说明文档> <el-select v-model=projectForm.bizFileId placeholder=请选择说明文档 filterable :filter-method=queryDocFileList :disabled=isView clearable> <el-option v-for="item in docFileList" :key=item.id :label=item.bizName :value=item.id></el-option> </el-select> </el-form-item> <el-form-item label=C端审核项目备注> <el-input type=textarea :rows=4 placeholder=请输入C端审核项目备注 v-model=projectForm.description :disabled="isView || isStart"></el-input> </el-form-item> </el-form> </div> '}});