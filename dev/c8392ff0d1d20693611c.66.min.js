webpackJsonp([66],{

/***/ 854:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(946);

var editdataconfig = function (_Interstellar$modalBa) {
    _inherits(editdataconfig, _Interstellar$modalBa);

    function editdataconfig(app, value, api, addMode) {
        _classCallCheck(this, editdataconfig);

        var _this = _possibleConstructorReturn(this, (editdataconfig.__proto__ || Object.getPrototypeOf(editdataconfig)).call(this, app, value, api, addMode));

        _this.html = __webpack_require__(948);
        _this.name = "editdataconfig";
        _this.data = {};
        return _this;
    }

    _createClass(editdataconfig, [{
        key: "complete",
        value: function complete(value) {
            var that = this;
            this.dom.find('.editdataconfig input').on('blur', function () {
                var dom = ES.selctorDoc(this);
                that.data[dom.attr('name')] = dom.val().trim();
            });
            this.render();
        }
    }, {
        key: "showerror",
        value: function showerror(msg) {
            console.log(msg);
            for (var i = 0; i < msg.length; i++) {
                console.log(msg[i]);
                this.dom.find('.' + msg[i].name).html(msg[i].msg);
                this.dom.find('.' + msg[i].name).removeClass('hide');
            }
        }
    }, {
        key: "render",
        value: function render() {
            var that = this;
            switch (this.initDate.type) {
                case "option":
                    this.dom.find('.xxx').hide();
                    this.dom.find('.zzz').hide();
                    break;
                case "code-need":
                    this.dom.find('.zzz').hide();
                    break;
                case "drop":
                    that.dom.find('.yyy span').html('机构名称');
                    that.dom.find('.xxx span').html('机构编码');
                    __webpack_require__.e/* require.ensure */(52/* duplicate */).then((function () {
                        var dropdown = __webpack_require__(638);
                        var woptions = [{ optionname: "医院", val: "医院", idx: 'HOSPITAL' }, { optionname: "企业", val: "企业", idx: 'ENTERPRISE' }];
                        var firstSelect = void 0;
                        var guojihua = that.app.loadModule(dropdown, that.dom.find('.editdataconfig .jg'), {
                            className: "xlk",
                            firstSelect: firstSelect ? firstSelect : { idx: '', val: '' },
                            data: woptions
                        });
                        guojihua.event._addEvent('option.click', function (res) {
                            that.data.type = res.idx;
                            if (!that.initDate.data) {
                                console.log(that.initDate.data, 'that.initDate.data');
                                that.event._dispatch('editdataconfig.typechange', res.idx);
                            }
                        });
                        guojihua.event._addEvent('dropDown.clear', function (res) {
                            delete that.data.type;
                            // that.event._dispatch('editdataconfig.finish')
                        });
                        if (that.initDate.data) {
                            that.dom.find('.editdataconfig .jg .option[data-idx="' + that.initDate.data.type + '"]').click();
                            guojihua.disable();
                        }
                    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
                    break;
            }
            console.log(this.initDate.data, 'this.initDate.data');
            if (this.initDate.data) {
                this.data = JSON.parse(JSON.stringify(this.initDate.data));
                this.dom.find('.editdataconfig input[name="name"]').val(this.initDate.data.name);
                this.dom.find('.editdataconfig input[name="code"]').attr('readonly', 'readonly');
                this.dom.find('.editdataconfig input[name="code"]').css({ 'background': '#e8e8e8' });
                this.dom.find('.editdataconfig input[name="code"]').val(this.initDate.data.code);
            }
            if (this.initDate.itemtitle) {
                for (var i in this.initDate.itemtitle) {
                    this.dom.find('.' + i + ' span').html(this.initDate.itemtitle[i]);
                }
            }
        }
    }, {
        key: "setmaxcode",
        value: function setmaxcode(value) {
            this.dom.find('input[name="code"]').val(value + 1);
            this.data.code = value + 1;
        }
    }]);

    return editdataconfig;
}(Interstellar.modalBase);
//原型链一定要有的


module.exports = editdataconfig;

/***/ }),

/***/ 946:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(947);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./editdataconfig.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./editdataconfig.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 947:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".editdataconfig {\n  position: relative;\n}\n.editdataconfig .cont {\n  height: 40px;\n  text-align: left;\n  padding-left: 20px;\n  position: relative;\n}\n.editdataconfig .cont .errorlist {\n  position: absolute;\n  left: 115px;\n  font-size: 12px;\n  color: #f00;\n}\n.editdataconfig .cont span {\n  width: 75px;\n  text-align: right;\n}\n.editdataconfig .cont > div > input {\n  height: 30px;\n  line-height: 30px;\n  border: 1px solid #e8e8e8;\n  border-radius: 5px;\n  margin-left: 20px;\n  padding-left: 10px;\n}\n.editdataconfig .yyy,\n.editdataconfig .xxx,\n.editdataconfig .zzz {\n  margin-bottom: 20px;\n}\n.editdataconfig .jg {\n  display: inline-block;\n}\n.editdataconfig .xlk {\n  width: 142px;\n  height: 30px;\n  line-height: 30px;\n  margin-left: 15px;\n}\n.editdataconfig .xlk .nowname {\n  width: 88% !important;\n}\n", ""]);

// exports


/***/ }),

/***/ 948:
/***/ (function(module, exports) {

module.exports = "<div class=editdataconfig> <div class=\"cont yyy\"> <div><span>名称</span><input type=text name=name></div> <div class=\"errorlist hide name_e\">dasad</div> </div> <div class=\"cont zzz\"> <div class=\"\"><span>机构类型</span> <div class=jg></div> </div> <div class=\"errorlist hide type_e\">dassdasd</div> </div> <div class=\"cont xxx\"> <div class=\"\"><span>编码</span><input type=text name=code></div> <div class=\"errorlist hide code_e\">dassdasd</div> </div> </div>";

/***/ })

});
//# sourceMappingURL=c8392ff0d1d20693611c.66.min.js.map