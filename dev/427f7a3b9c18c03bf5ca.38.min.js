webpackJsonp([38],{

/***/ 188:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var dataconfig = function (_Interstellar$pagesBa) {
  _inherits(dataconfig, _Interstellar$pagesBa);

  function dataconfig() {
    _classCallCheck(this, dataconfig);

    return _possibleConstructorReturn(this, (dataconfig.__proto__ || Object.getPrototypeOf(dataconfig)).apply(this, arguments));
  }

  _createClass(dataconfig, [{
    key: 'complete',
    value: function complete() {
      this.loadmoudel();
      this.loadTable();
      this.btnEvent();
      this.apiload();
      //this.initscroll()
      this.resize();
    }
  }, {
    key: 'apiload',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var value;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.app.loading.show();
                _context.next = 3;
                return this.api.dict_search({ parentId: 0, page: 0, pageSize: -1 });

              case 3:
                value = _context.sent;

                this.app.loading.hide();
                this.dataControl.setData(value.data.list);

              case 6:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function apiload() {
        return _ref.apply(this, arguments);
      }

      return apiload;
    }()
  }, {
    key: 'btnEvent',
    value: function btnEvent() {
      var _this2 = this;

      this.dom.find('.addc').on('click', function () {
        if (!_this2.dataControl.chooseData) {
          return;
        }
        _this2.openModal('add', null);
      });
    }

    //打开弹框

  }, {
    key: 'openModal',
    value: function openModal(type, data) {
      var _this3 = this;

      if (data) {
        data.code = data.value;
      }
      console.log(data, 'aaaaa');
      var config = [{
        name: 'name',
        type: 'input',
        title: '名称',
        value: data ? data.name : '',
        check: 'empty',
        remark: ''
      }, {
        name: 'value',
        type: 'input',
        title: '编码',
        value: data ? data.value : '',
        check: 'empty',
        remark: '',
        disabled: type == 'add' ? '' : 'disabled'
      }, {
        name: 'remark',
        type: 'input',
        title: '数值',
        value: data ? data.remark : '',
        check: '',
        remark: ''
      }];
      var editdataconfig = this.app.loadModal(this.editdataconfigClass, {
        adv: false,
        class: 'xs',
        title: type == "add" ? '创建' : "编辑",
        type: "code-need"
      }, { config: config });
      editdataconfig.event._addEvent('formsubmit.submit', function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(data1) {
          var res;
          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _this3.app.loading.show();
                  data1.parentId = _this3.dataControl.chooseData.bid * 1;
                  res = null;

                  if (!(type == 'add')) {
                    _context2.next = 9;
                    break;
                  }

                  _context2.next = 6;
                  return _this3.api.dict_create(data1);

                case 6:
                  res = _context2.sent;
                  _context2.next = 13;
                  break;

                case 9:
                  data1.id = data.id * 1;
                  _context2.next = 12;
                  return _this3.api.dict_update(data1);

                case 12:
                  res = _context2.sent;

                case 13:
                  _this3.app.loading.hide();
                  _this3.codeFinish(res, editdataconfig);

                case 15:
                case 'end':
                  return _context2.stop();
              }
            }
          }, _callee2, _this3);
        }));

        return function (_x) {
          return _ref2.apply(this, arguments);
        };
      }());
    }

    //接口返回的统一处理

  }, {
    key: 'codeFinish',
    value: function codeFinish(value, dom) {
      if (value.code * 1 == 0) {
        dom.close();
        this.newList = true;
        var temp = this.model.listInfo.pageSize;
        this.model.listInfo = { parentId: this.dataControl.chooseData.bid * 1, page: 1, pageSize: temp };
        this.model.setData('listInfo', this.model.listInfo);
      } else {
        dom.showerror({
          value: value.msg
        });
      }
    }

    //加载table模块

  }, {
    key: 'loadTable',
    value: function loadTable() {
      var _this4 = this;

      var obj = {};
      obj['icon'] = {
        "value": {
          name: '<span data-i18n="date" data-name="检查时间">编码</span>',
          type: 'text',
          code: 'date',
          w: '25%',
          ww: '25%',
          n: 40
        },
        "name": {
          name: '<span data-i18n="action" data-name="操作">名称</span>',
          type: 'text',
          code: 'action',
          w: '35%',
          ww: '35%'
        },
        "remark": {
          name: '<span data-i18n="action" data-name="操作">数值</span>',
          type: 'text',
          code: 'action',
          w: '40%',
          ww: '40%'
        }
      };
      obj['actionulwidth'] = 100;
      obj['tablewidth'] = this.dom.find('.content_list').box().clientWidth - 140;
      obj['type'] = 'center';
      obj['actionicon'] = {
        "operation": {
          name: '<span data-i18n="action" data-name="操作">操作</span>',
          type: 'action',
          code: 'action',
          w: '100%',
          ww: '100%'
        }
      };
      __webpack_require__.e/* require.ensure */(54/* duplicate */).then((function () {
        var cont_table = __webpack_require__(643);
        _this4.table = _this4.app.loadModule(cont_table, _this4.dom.find('.content_list'), {
          id: 'content_list',
          header: obj
        });
        _this4.table.event._addEvent('table.action', function (value) {
          _this4.openModal('edit', _this4.listdata[value.id]);
        });
        _this4.table.event._addEvent('table.pagenumber', function (value) {
          _this4.newList = false;
          _this4.model.listInfo.page = parseInt(value);
          _this4.model.setData('listInfo', _this4.model.listInfo);
          _this4.table.changenum(_this4.model.listInfo.page);
        });
        _this4.table.event._addEvent('table.pagesize', function (value) {
          _this4.model.listInfo.page = 1;
          _this4.model.listInfo.pageSize = value.num;
          _this4.newList = true;
          _this4.model.setData('listInfo', _this4.model.listInfo);
        });
        _this4.dom.find('.list-content').removeClass('hide');
      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
    }

    //加载左侧列表

  }, {
    key: 'loadmoudel',
    value: function loadmoudel() {
      var _this5 = this;

      // this.editdataconfigClass = require("../modal/editdataconfig/editdataconfig.js")
      this.editdataconfigClass = __webpack_require__(938);
      var datalist = __webpack_require__(942);
      this.dataControl = this.app.loadModule(datalist, this.dom.find('.list_left'), {});
      this.dataControl.event._addEvent('datalist.addChoose', function (value) {
        var config = [{
          name: 'name',
          type: 'input',
          title: '选项类型名称',
          value: '',
          check: 'empty',
          remark: ''
        }, {
          name: 'value',
          type: 'input',
          title: '编码',
          value: '',
          check: 'empty',
          remark: ''
        }, {
          name: 'type',
          type: 'dropdown',
          title: '显示类型',
          value: '',
          remark: '',
          check: 'empty',
          data: [{ val: '时间模式', idx: 'time' }, { val: '数字范围模式', idx: 'number' }, { val: '复选模式', idx: 'checkBox' }, { val: '单选模式', idx: 'radio' }]
        }];
        var editdataconfig = _this5.app.loadModal(_this5.editdataconfigClass, {
          adv: false,
          class: 'xs',
          title: '创建选项数据类型',
          type: "code-need",
          itemtitle: { yyy: '选项类型名称' }
        }, { config: config });
        editdataconfig.event._addEvent('formsubmit.submit', function () {
          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data) {
            var res;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _this5.app.loading.show();
                    data.parentId = 0;
                    _context3.next = 4;
                    return _this5.api.dict_create(data);

                  case 4:
                    res = _context3.sent;

                    _this5.app.loading.hide();
                    if (res.code == 0) {
                      editdataconfig.close();
                      _this5.apiload();
                    } else {
                      editdataconfig.showerror({
                        value: res.msg
                      });
                    }

                  case 7:
                  case 'end':
                    return _context3.stop();
                }
              }
            }, _callee3, _this5);
          }));

          return function (_x2) {
            return _ref3.apply(this, arguments);
          };
        }());
      });
      this.dataControl.event._addEvent('datalist.choose', function (value) {
        _this5.newList = true;
        _this5.model.listInfo = { parentId: value.bid, page: 1, pageSize: 10 };
        _this5.model.setData('listInfo', _this5.model.listInfo);
      });
    }

    //右侧的列表加载

  }, {
    key: 'listInfo',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var _this6 = this;

        var value, data2;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (this.table) this.table.showloading();
                _context4.next = 3;
                return this.api.dict_search(this.model.listInfo);

              case 3:
                value = _context4.sent;

                if (value.data.list.length != 0) {
                  data2 = [];

                  this.listdata = {};
                  value.data.list.map(function (item) {
                    _this6.listdata[item.id] = item;
                    item.remark = item.remark ? item.remark : '';
                    data2.push({
                      id: item.id,
                      operation: {
                        viewmark: { dis: 'inline', link: 'noLink', content: '编辑' }
                      }
                    });
                  });
                  this.table.setData(value.data.list, data2);
                } else {
                  this.table.noData();
                }
                if (this.newList) {
                  this.table.getTotal(value.data.pages, 2, value.data.total);
                }
                this.resize();
                this.initscroll();

              case 8:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function listInfo() {
        return _ref4.apply(this, arguments);
      }

      return listInfo;
    }()
  }, {
    key: 'initscroll',
    value: function initscroll() {
      if (this.myScroll) {
        this.myScroll.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      this.dom.find('.dataconfig').attr('id', rid);
      this.myScroll = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }, {
    key: 'resize',
    value: function resize() {
      var ch = ES.selctorDoc(window).box().clientHeight;
      //ES.selctorDoc('.scrolltable').css({ 'height': ch - 140 });
      this.dom.find('.dataconfig').css({ 'height': ch - 80 });
    }
  }]);

  return dataconfig;
}(Interstellar.pagesBase);

module.exports = dataconfig;

/***/ }),

/***/ 530:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(949);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./dataconfig.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./dataconfig.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 531:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlDict = {
  dict_create: '/dict/create',
  dict_update: '/dict/update',
  dict_search: '/dict/search'
};
var api = {
  dict_create: function dict_create(value) {
    return this.HttpRequest.POST(urlDict.dict_create, value, api.app.domain3);
  },
  dict_update: function dict_update(value) {
    return this.HttpRequest.POST(urlDict.dict_update, value, api.app.domain3);
  },
  dict_search: function dict_search(value) {
    return this.HttpRequest.POST(urlDict.dict_search, value, api.app.domain3);
  }
};
module.exports = api;

/***/ }),

/***/ 532:
/***/ (function(module, exports) {

module.exports = "<div class=dataconfig> <div> <div class=\"fillBtn addc\">创建</div> <div class=\"list_left fl\"></div> <div class=\"content_list fl\"></div> <div style=clear:both></div> </div> </div> ";

/***/ }),

/***/ 533:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//这边基本上引入需要使用的资源less，api，需要使用的模块等等。

var dataconfig = function (_Interstellar$modelBa) {
    _inherits(dataconfig, _Interstellar$modelBa);

    function dataconfig(app) {
        _classCallCheck(this, dataconfig);

        var _this = _possibleConstructorReturn(this, (dataconfig.__proto__ || Object.getPrototypeOf(dataconfig)).call(this, app));

        _this.___auto = true;
        _this.listInfo = {};
        return _this;
    }

    return dataconfig;
}(Interstellar.modelBase);

module.exports = dataconfig;

/***/ }),

/***/ 938:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(939);

var configModal = function (_Interstellar$modalBa) {
  _inherits(configModal, _Interstellar$modalBa);

  function configModal(app, dom, value, addMode) {
    _classCallCheck(this, configModal);

    var _this = _possibleConstructorReturn(this, (configModal.__proto__ || Object.getPrototypeOf(configModal)).call(this, app, dom, value, addMode));

    _this.html = __webpack_require__(941);
    _this.name = 'configModal';
    _this.apidata = {};
    _this.allobj = {};
    return _this;
  }

  _createClass(configModal, [{
    key: 'complete',
    value: function complete() {
      var that = this;
      this.render();
      this.initView();
    }
  }, {
    key: 'render',
    value: function render() {
      var that = this;
      console.log(that.api.config);
      that.api.config.forEach(function (val, idx) {
        var html = '';
        switch (val.type) {
          case 'input':
            var inputtype = val.inputtype ? val.inputtype : 'text';
            console.log(val.disabled, 'disbbbb');
            html += '<div class="inputLine" redlabel="inputBox">\n' + '                <span class="names">' + val.title + '</span>\n' + '                <input type="' + inputtype + '" class="inputBox ' + val.name + '" check="' + val.check + '" api="' + val.name + '" ' + val.disabled + '/>' + '                <p class="remark">' + val.remark + '</p>' + '            </div>';
            that.dom.find('.configModal').append(html);
            if (val.value) {
              that.dom.find('.' + val.name).val(val.value);
              that.apidata[val.name] = val.value;
            }
            break;
          case 'dropdown':
            html += '<div class="inputLine" redlabel="xlk">\n' + '                <span class="names">' + val.title + '</span>\n' + '                <div class="' + val.name + '" check="' + val.check + '"></div>' + '                <p class="remark">' + val.remark + '</p>' + '            </div>';
            that.dom.find('.configModal').append(html);
            __webpack_require__.e/* require.ensure */(52/* duplicate */).then((function () {
              var dropdown = __webpack_require__(638);
              var temp = that.app.loadModule(dropdown, that.dom.find('.' + val.name), {
                className: 'xlk',
                firstSelect: { val: '', idx: '' },
                data: val.data,
                datatype: val.datatype
              });
              temp.event._addEvent('option.click', function (value) {
                console.log(that.apidata, 'that.apidata', value, val.name);
                that.apidata[val.name] = value.idx;
              });
              temp.event._addEvent('dropDown.clear', function (value) {
                that.apidata[val.name] = '';
              });
              that.allobj[val.name] = temp;
              if (val.value) {
                that.dom.find('.' + val.name + ' .option[data-idx="' + val.value + '"]').click();
              }
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
            break;
          case 'radio':
            var temp = '';
            val.data.forEach(function (item) {
              temp += '<div class="item" data-id="' + item.idx + '">\n' + '                <i class="radio-box"></i>\n' + '                <span>' + item.val + '</span>\n' + '            </div>';
            });
            html += '<div class="inputLine radioArea" redlabel="names" check="empty" title="">\n' + '                <span class="names">' + val.title + '</span>\n' + temp + '                <p class="remark">' + val.remark + '</p>' + '            </div>';
            that.dom.find('.configModal').append(html);
            that.dom.find('.radioArea .radio-box').on('click', function () {
              ES.selctorDoc(this).parents('radioArea').find('.choose').removeClass('choose');
              ES.selctorDoc(this).addClass('choose');
              that.apidata[val.name] = ES.selctorDoc(this).parent().attr('data-id');
            });
            break;
        }
      });
      that.dom.find('.modal-title').html(that.api.title);
    }
  }, {
    key: 'initView',
    value: function initView() {
      var that = this;
      that.dom.find('.inputBox').on('change', function () {
        that.apidata[ES.selctorDoc(this).attr('api')] = ES.selctorDoc(this).val();
      });
      this.dom.find('.icon-guanbi').on('click', function () {
        that.close();
      });
      this.dom.find('.btn-cancel').on('click', function () {
        that.close();
      });
      this.dom.find('.btn-confirm').on('click', function () {
        that.dom.find('.tips').remove();
        that.dom.find('.inputLine').dom.forEach(function (val, idx) {
          val.find('.' + val.attr('redlabel')).removeClass('redborder');
          val.find('.required').remove();
          if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
            val.find('.' + val.attr('redlabel')).addClass('redborder');
            val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
          }
        });
        if (that.dom.find('.redborder').dom) {
          return false;
        } else {
          that.event._dispatch('formsubmit.submit', that.apidata);
        }
      });
    }
  }, {
    key: 'showerror',
    value: function showerror(value) {
      var that = this;
      Object.keys(value).forEach(function (val) {
        that.dom.find('.' + val).after('<span class="tips">' + value[val] + '</span>');
      });
    }
  }]);

  return configModal;
}(Interstellar.modalBase);
//原型链一定要有的


module.exports = configModal;

/***/ }),

/***/ 939:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(940);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./configModal.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./configModal.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 940:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".configModal span {\n  margin-left: 0px;\n}\n.configModal .inputLine {\n  position: relative;\n  height: 40px;\n  margin-top: 10px;\n}\n.configModal .inputLine > div {\n  display: inline-block;\n}\n.configModal .inputLine .confirm {\n  margin-right: 0;\n}\n.configModal .inputLine .inputBox {\n  width: 130px;\n  height: 30px;\n  line-height: 38px;\n  border: 1px solid #E8E8E8;\n  border-radius: 4px;\n  outline: none;\n  padding-left: 5px;\n}\n.configModal .inputLine .xlk {\n  width: 134px;\n  height: 30px;\n  line-height: 30px;\n}\n.configModal .inputLine .names {\n  width: 110px;\n  font-size: 14px;\n  margin-left: 20px;\n}\n.configModal .inputLine p.remark {\n  margin-left: 100px;\n}\n.configModal .inputLine .tips {\n  position: absolute;\n  color: red;\n  top: 33px;\n  left: 135px;\n}\n.configModal .inputLine .required {\n  position: absolute;\n  top: 31px;\n  left: 140px;\n}\n.configModal .radioArea {\n  position: relative;\n}\n.configModal .radioArea .item {\n  position: relative;\n  margin-right: 10px;\n}\n.configModal .radioArea .item .radio-box {\n  vertical-align: sub;\n}\n.configModal .radioArea .required {\n  position: absolute;\n  top: 25px;\n  left: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 941:
/***/ (function(module, exports) {

module.exports = "<div class=configModal> </div> ";

/***/ }),

/***/ 942:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(943);
// var html = require('./tpl.html')

var bztoollist = function (_Interstellar$moduleB) {
    _inherits(bztoollist, _Interstellar$moduleB);

    function bztoollist(app, dom, value, addMode) {
        _classCallCheck(this, bztoollist);

        var _this = _possibleConstructorReturn(this, (bztoollist.__proto__ || Object.getPrototypeOf(bztoollist)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(945);
        _this.name = "datalist";
        _this.data = [];
        return _this;
    }

    _createClass(bztoollist, [{
        key: 'complete',
        value: function complete() {
            var _this2 = this;

            __webpack_require__.e/* require.ensure */(66).then((function () {
                _this2.editdataconfigClass = __webpack_require__(854);
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
            this.dom.find('.addBtn').on('click', function () {
                _this2.event._dispatch('datalist.addChoose');
            });
        }
    }, {
        key: 'setData',
        value: function setData(value, type) {
            this.dom.find('ul').html('');
            if (value.length != 0) {
                for (var i = 0; i < value.length; i++) {
                    this.addli(value[i], type);
                }
            }
            this.dom.find('ul .multili').eq(0).click();
        }
    }, {
        key: 'addli',
        value: function addli(value, type) {
            var that = this;
            var temp = '（';
            switch (value.type) {
                case 'number':
                    temp += '数字范围模式）';
                    break;
                case 'radio':
                    temp += '单选模式）';
                    break;
                case 'time':
                    temp += '时间模式）';
                    break;
                case 'checkBox':
                    temp += '复选模式）';
                    break;
            }
            var str = '<li bid="' + value.id + '" class="multili multili' + value.id + '" code="' + value.code + '" title="' + value.name + '"><span>' + value.name + temp + '</span><a class="delicon iconfont icon-shanchu hide" title=""></a></li>';
            this.dom.find('ul').append(str);
            this.dom.find('ul .multili' + value.id + ' .delicon').on('click', function () {
                console.log('shan');
            });
            this.dom.find('ul .multili' + value.id).on('click', function () {
                that.dom.find('ul .multili').removeClass('choose');
                var dom = ES.selctorDoc(this);
                dom.addClass('choose');
                that.chooseData = { bid: dom.attr('bid'), code: dom.attr('code') };
                that.event._dispatch('datalist.choose', that.chooseData);
            });
        }
    }]);

    return bztoollist;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = bztoollist;

/***/ }),

/***/ 943:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(944);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./datalist.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./datalist.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 944:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".datalist .name {\n  font-size: 16px;\n  text-align: left;\n  padding-left: 24px;\n  line-height: 40px;\n  background: #ccc;\n  color: #666;\n}\n.datalist .name .icon-tianjia {\n  font-size: 12px;\n  margin-left: 30px;\n  color: #666;\n}\n.datalist ul .multili {\n  text-align: left;\n  padding-left: 24px;\n  font-size: 12px;\n  line-height: 40px;\n  background: #eee;\n  color: #999;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n.datalist ul .multili span {\n  display: unset;\n}\n.datalist ul .multili:hover {\n  background: #448E97;\n  color: #fff;\n}\n.datalist ul .multili.choose {\n  background: #448E97;\n  color: #fff;\n}\n", ""]);

// exports


/***/ }),

/***/ 945:
/***/ (function(module, exports) {

module.exports = "<div class=datalist> <p class=name>选项数据配置<a class=\"iconfont icon-tianjia config addBtn\" title=创建选项数据类型></a></p> <ul></ul> </div>";

/***/ }),

/***/ 949:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".dataconfig {\n  position: relative;\n  background: #fff;\n  margin-top: 20px;\n}\n.dataconfig .fillBtn {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n}\n.dataconfig .list_left {\n  width: 16%;\n  margin-right: 10px;\n}\n.dataconfig .content_list {\n  width: 72%;\n}\n", ""]);

// exports


/***/ })

});
//# sourceMappingURL=427f7a3b9c18c03bf5ca.38.min.js.map