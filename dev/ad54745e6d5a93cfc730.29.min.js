webpackJsonp([29],{

/***/ 13:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import {firstName, lastName, year} from 'http://172.16.100.221:44444/footer/footer.js';
//这边基本上引入需要使用的资源less，api，需要使用的模块等等。

var DataBase = function (_Interstellar$pagesBa) {
  _inherits(DataBase, _Interstellar$pagesBa);

  function DataBase(app, api, dom, model) {
    _classCallCheck(this, DataBase);

    var _this = _possibleConstructorReturn(this, (DataBase.__proto__ || Object.getPrototypeOf(DataBase)).call(this, app, api, dom, model));

    _this.apiData = {};
    return _this;
  }

  _createClass(DataBase, [{
    key: 'complete',
    value: function complete() {}
  }, {
    key: 'addli',
    value: function addli(value) {
      var _this2 = this;

      var tablist = __webpack_require__(740);
      var tabListControl = this.app.loadModule(tablist, this.dom.find('.topchoose'), { data: this.model.tablist, default: this.app.parpam['type'] });
      tabListControl.event._addEvent('tab.change', function (value) {
        _this2.toggletab(value);
        //this.app.changePage('imagedatagl1', { type: value.id })
      });
      this.changeAll(value ? value : this.model.condition[this.app.parpam['type']]);
    }
  }, {
    key: 'loadlist',
    value: function loadlist(type, data) {
      var that = this;
      this.tablecont = null;
      __webpack_require__.e/* require.ensure */(60).then((function () {
        that.table_group = __webpack_require__(643);
        that.table_single = __webpack_require__(640);
        switch (type) {
          case 'group':
            that.tablecont = that.app.loadModule(that.table_group, that.dom.find('.tablearea'), {
              id: 'tasktable',
              header: data ? data : that.model.tableconfig
            });
            that.resize();
            that.inittable();
            break;
          case 'single':
            that.tablecont = that.app.loadModule(that.table_single, that.dom.find('.tablearea'), {
              id: 'tasktable',
              header: data ? data : that.model.tableconfig
            });
            that.resize();
        }
        that.tablecont.event._addEvent('table.pagenumber', function (value) {
          that.model.apiData.page = parseInt(value);
          that.tablecont.changenum(that.model.apiData.page);
          that.search();
        });
        that.tablecont.event._addEvent('table.pagesize', function (value) {
          that.model.apiData.pageSize = value.num;
          that.model.apiData.page = 1;
          that.search(true);
        });
        that.tablecont.event._addEvent('table.action', function (value) {
          that.listaction(value);
        });
        that.tablecont.event._addEvent('table.onoff', function (value) {
          that.listOnOff(value);
        });
        that.tablecont.event._addEvent('table.listlink', function (value) {
          that.listlink(value);
        });
        that.search(true);
      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
    }
  }, {
    key: 'changeAll',
    value: function changeAll(value) {

      var that = this;
      var datacondition = __webpack_require__(744);
      this.chooseData = this.app.loadModule(datacondition, this.dom.find('.filterarea'), { data: value });
      this.chooseData.event._addEvent('datacondition.moduledone', function () {
        that.conditionconfig();
        that.getapidata();
      });
      this.chooseData.event._addEvent('datacondition.dropinput', function (value) {
        console.log(value, 'dddd');
        that.getapidata(value);
      });
    }
  }, {
    key: 'getapidata',
    value: function getapidata() {}
  }, {
    key: 'conditionconfig',
    value: function conditionconfig() {}
  }, {
    key: 'getfiltercondition',
    value: function getfiltercondition() {
      return this.chooseData.data;
    }
  }, {
    key: 'initscroll',
    value: function initscroll(value) {
      var that = this;
      if (this.myScroll) {
        this.myScroll.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      this.dom.find('.' + value).attr('id', rid);
      this.myScroll = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        probeType: 2,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });

      this.myScroll.on('scroll', function () {
        var temph = ES.selctorDoc('.scrolltable').box().clientHeight;
        var mainh = ES.selctorDoc('.maintable').box().clientHeight;
        temph = temph > mainh ? mainh : temph;
        console.log(temph, 'temph');
        that.dom.find('.iScrollHorizontalScrollbar').css({ top: temph - this.y - 8 });
      });
      console.log(this.myScroll._events.scroll);
    }
  }, {
    key: 'inittable',
    value: function inittable() {
      if (this.myScroll1) {
        this.myScroll1.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      ES.selctorDoc('.maintable').attr('id', rid);
      this.myScroll1 = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        scrollX: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }]);

  return DataBase;
}(Interstellar.pagesBase);

window.DataBase = window.DataBase || DataBase;
module.exports = DataBase;

/***/ }),

/***/ 202:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var releasetask = function (_DataBase) {
  _inherits(releasetask, _DataBase);

  function releasetask() {
    _classCallCheck(this, releasetask);

    return _possibleConstructorReturn(this, (releasetask.__proto__ || Object.getPrototypeOf(releasetask)).apply(this, arguments));
  }

  _createClass(releasetask, [{
    key: 'complete',
    value: function complete() {
      var _this2 = this;

      this.app.menu.refreshmenu();
      this.changeAll(this.model.condition);
      this.model.tableconfig.tablewidth = ES.selctorDoc('.releasetask').box().clientWidth - 240;
      this.loadlist('group');
      this.dom.find('.create').on('click', function () {
        _this2.app.changePage('createtask', { type: 'new' });
      });
      this.dom.find('.searchbtn').on('click', function () {
        _this2.model.condition.forEach(function (val) {
          if (val[0].name == 'inspectTime') {
            _this2.model.apiData.startCreateTime = _this2.getfiltercondition()[val[0].name][0].startTime;
            _this2.model.apiData.endCreateTime = _this2.getfiltercondition()[val[0].name][0].endTime;
          } else {
            _this2.model.apiData[val[0].name] = _this2.getfiltercondition()[val[0].name].toString() == '' ? null : _this2.getfiltercondition()[val[0].name].toString();
          }
        });
        _this2.model.apiData.projectIdList = _this2.model.apiData.projectIdList ? _this2.model.apiData.projectIdList.split(',') : null;
        _this2.model.apiData.taskIdList = _this2.model.apiData.taskIdList ? _this2.model.apiData.taskIdList.split(',') : null;
        _this2.model.apiData.vendorIdList = _this2.model.apiData.vendorIdList ? _this2.model.apiData.vendorIdList.split(',') : null;
        _this2.model.apiData.page = 1;
        _this2.search(true);
      });
    }
  }, {
    key: 'search',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(bool) {
        var _this3 = this;

        var data2, res;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                data2 = [];

                this.tablecont.showloading();
                _context.next = 4;
                return this.api.querytask(this.model.apiData);

              case 4:
                res = _context.sent;

                if (res.code == 0) {
                  if (res.data.list.length > 0) {
                    res.data.list.forEach(function (val) {
                      for (var i in val) {
                        val[i] = val[i] == null ? '' : val[i];
                      }
                      var obj = {};
                      val.vendors = '';
                      obj.id = val.id + ',' + val.projectStatus + ',' + val.seriesTotalNum + ',' + val.projectId;
                      if (val.assignVendors.length > 0) {
                        val.assignVendors.forEach(function (val1) {
                          val.vendors += val1;
                        });
                      } else {
                        val.vendors = '';
                      }
                      obj.operation = _this3.model.listicon.action;
                      switch (val.status) {
                        case 1:
                          val.status = '待发布';
                          break;
                        case 2:
                          val.status = '进行中';
                          break;
                        case 3:
                          val.status = '已完成';
                          break;
                        case 4:
                          val.status = '已终结';
                          break;
                      }
                      switch (val.method) {
                        case 1:
                          val.assignMethod = '承包式';
                          break;
                        case 2:
                          val.assignMethod = '开放式';
                          break;
                      }
                      if (val.type == 2) {
                        val.algPreAnnotation = '审核任务';
                      } else {
                        switch (val.algPreAnnotation) {
                          case true:
                            val.algPreAnnotation = '算法标注';
                            break;
                          case false:
                            val.algPreAnnotation = '人工标注';
                            break;
                        }
                      }
                      data2.push(obj);
                      switch (val.projectStatus) {
                        case 1:
                          val.projectStatus = '未启用';
                          break;
                        case 2:
                          val.projectStatus = '已启用';
                          break;
                      }
                      if (val.createTime) val.createTime = Tool.time(val.createTime, 'yyyy-mm-dd');
                      if (val.startTime) val.startTime = Tool.time(val.startTime, 'yyyy-mm-dd');
                      if (val.endTime) val.endTime = Tool.time(val.endTime, 'yyyy-mm-dd');
                      val.gongsi = '';
                      val.isassign = '';
                      val.handler = '否';
                    });
                    this.tablecont.setData(res.data.list, data2);
                  } else {
                    this.tablecont.noData();
                  }
                }
                if (bool) {
                  this.tablecont.getTotal(res.data.pages, 2, res.data.total);
                }
                this.initscroll();

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function search(_x) {
        return _ref.apply(this, arguments);
      }

      return search;
    }()
  }, {
    key: 'listaction',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(value) {
        var _this4 = this;

        var taskuser, res, modal;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                taskuser = __webpack_require__(971);
                _context3.t0 = value.classname;
                _context3.next = _context3.t0 === 'release' ? 4 : 10;
                break;

              case 4:
                this.app.loading.show();
                _context3.next = 7;
                return this.api.task_belongsUserList({ taskId: value.id.split(',')[0] });

              case 7:
                res = _context3.sent;

                if (res.code == 0) {
                  this.app.loading.hide();
                  modal = this.app.loadModal(taskuser, { adv: true }, { data: res });

                  modal.event._addEvent('taskuser.adddata', function () {
                    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(value1) {
                      var res1;
                      return regeneratorRuntime.wrap(function _callee2$(_context2) {
                        while (1) {
                          switch (_context2.prev = _context2.next) {
                            case 0:
                              _this4.app.loading.show();
                              _context2.next = 3;
                              return _this4.api.task_release({ taskId: value.id.split(',')[0], userIdList: value1.data });

                            case 3:
                              res1 = _context2.sent;

                              _this4.app.loading.hide();
                              if (res1.code == 0) {
                                modal.close();
                                _this4.model.apiData.page = 1;
                                _this4.search(true);
                              } else {
                                alert('fail');
                              }

                            case 6:
                            case 'end':
                              return _context2.stop();
                          }
                        }
                      }, _callee2, _this4);
                    }));

                    return function (_x3) {
                      return _ref3.apply(this, arguments);
                    };
                  }());
                }
                return _context3.abrupt('break', 10);

              case 10:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function listaction(_x2) {
        return _ref2.apply(this, arguments);
      }

      return listaction;
    }()
  }, {
    key: 'getapidata',
    value: function getapidata(value) {
      if (value) {
        switch (value.name) {
          case 'taskIdList':
            this.chooseData.moduleobj.taskIdList.loading(true);
            this.task_name_search(value.data.data ? value.data.data.trim() : "");
            break;
          case 'projectIdList':
            this.chooseData.moduleobj.projectIdList.loading(true);
            this.project_name_search(value.data.data ? value.data.data.trim() : "");
            break;
          case 'vendorIdList':
            this.chooseData.moduleobj.vendorIdList.loading(true);
            this.task_vendorName_search(value.data.data ? value.data.data.trim() : "");
            break;
        }
      } else {
        this.chooseData.moduleobj.taskIdList.loading(true);
        this.chooseData.moduleobj.projectIdList.loading(true);
        this.chooseData.moduleobj.vendorIdList.loading(true);
        this.project_name_search('');
        this.task_name_search('');
        this.task_vendorName_search('');
      }
    }
  }, {
    key: 'project_name_search',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(projectName) {
        var json1, _ref5, data, temparr;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                json1 = {
                  releaseOfTask: true,
                  projectName: projectName
                };
                _context4.next = 3;
                return this.api.project_name_search(json1);

              case 3:
                _ref5 = _context4.sent;
                data = _ref5.data;

                this.chooseData.moduleobj.projectIdList.loading(false);
                temparr = data.list.map(function (item) {
                  return {
                    idx: item.projectId,
                    val: item.projectName
                  };
                });

                this.chooseData.renderHtml(temparr, 'projectIdList');

              case 8:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function project_name_search(_x4) {
        return _ref4.apply(this, arguments);
      }

      return project_name_search;
    }()
  }, {
    key: 'task_name_search',
    value: function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(taskName) {
        var json1, _ref7, data, temparr;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                json1 = {
                  releaseOfTask: true,
                  taskName: taskName
                };
                _context5.next = 3;
                return this.api.task_name_search(json1);

              case 3:
                _ref7 = _context5.sent;
                data = _ref7.data;

                this.chooseData.moduleobj.taskIdList.loading(false);
                temparr = data.list.map(function (item) {
                  return {
                    idx: item.taskId,
                    val: item.taskName
                  };
                });

                this.chooseData.renderHtml(temparr, 'taskIdList');

              case 8:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function task_name_search(_x5) {
        return _ref6.apply(this, arguments);
      }

      return task_name_search;
    }()
  }, {
    key: 'task_vendorName_search',
    value: function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(vendorName) {
        var _ref9, data, temparr;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.api.task_vendorName_search({ vendorName: vendorName });

              case 2:
                _ref9 = _context6.sent;
                data = _ref9.data;

                this.chooseData.moduleobj.vendorIdList.loading(false);
                temparr = data.list.map(function (item) {
                  return {
                    idx: item.vendorId,
                    val: item.vendorName
                  };
                });

                this.chooseData.renderHtml(temparr, 'vendorIdList');

              case 7:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function task_vendorName_search(_x6) {
        return _ref8.apply(this, arguments);
      }

      return task_vendorName_search;
    }()
  }, {
    key: 'initscroll',
    value: function initscroll() {
      var _this5 = this;

      if (this.myScroll) {
        this.myScroll.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      ES.selctorDoc('.scrolltable').attr('id', rid);
      this.myScroll = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        probeType: 2,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
      this.myScroll.on('scroll', function () {
        var temph = ES.selctorDoc('.scrolltable').box().clientHeight;
        var mainh = ES.selctorDoc('.maintable').box().clientHeight;
        temph = temph > mainh ? mainh : temph;
        _this5.dom.find('.iScrollHorizontalScrollbar').css({ top: temph - _this5.y - 8 });
      });
    }
  }, {
    key: 'inittable',
    value: function inittable() {
      if (this.myScroll1) {
        this.myScroll1.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      ES.selctorDoc('.maintable').attr('id', rid);
      this.myScroll1 = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        scrollX: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }, {
    key: 'resize',
    value: function resize() {
      var ch = ES.selctorDoc(window).box().clientHeight - 100;
      var cw = ES.selctorDoc(window).box().clientWidth - 240;
      ES.selctorDoc('.releasetask').css({ 'height': ch, 'width': cw });
      ES.selctorDoc('.scrolltable').css({ 'height': ch - 200 });
    }
  }]);

  return releasetask;
}(DataBase);

module.exports = releasetask;

/***/ }),

/***/ 583:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(975);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./releasetask.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./releasetask.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 584:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlDict = {
  querytask: '/task/search',
  task_release: '/ops/task/release',
  project_name_search: '/project/name/search',
  task_name_search: '/task/name/search',
  task_belongsUserList: '/task/belongsUserList',
  task_vendorName_search: '/task/vendorName/search'
};
var api = {
  querytask: function querytask(value) {
    return this.HttpRequest.POST(urlDict.querytask, value);
  },
  task_release: function task_release(value) {
    return this.HttpRequest.POST(urlDict.task_release, value);
  },
  project_name_search: function project_name_search(value) {
    return this.HttpRequest.POST(urlDict.project_name_search, value);
  },
  task_name_search: function task_name_search(value) {
    return this.HttpRequest.POST(urlDict.task_name_search, value);
  },
  task_belongsUserList: function task_belongsUserList(value) {
    return this.HttpRequest.POST(urlDict.task_belongsUserList, value);
  },
  task_vendorName_search: function task_vendorName_search(value) {
    return this.HttpRequest.POST(urlDict.task_vendorName_search, value);
  }
};
module.exports = api;

/***/ }),

/***/ 585:
/***/ (function(module, exports) {

module.exports = "<div class=releasetask> <div class=filterarea> </div> <div class=btnarea> <a class=\"fillBtn searchbtn\">查询</a> </div> <div class=tablearea> </div> </div> ";

/***/ }),

/***/ 586:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//这边基本上引入需要使用的资源less，api，需要使用的模块等等。

var releasetask = function (_Interstellar$modelBa) {
    _inherits(releasetask, _Interstellar$modelBa);

    function releasetask(app) {
        _classCallCheck(this, releasetask);

        var _this = _possibleConstructorReturn(this, (releasetask.__proto__ || Object.getPrototypeOf(releasetask)).call(this, app));

        _this.apiData = { page: 1, pageSize: 10, releaseOfTask: true, type: 1 };
        _this.condition = [[{ "type": "dobuledropdown", "name": "taskIdList", "showname": "任务名称", "datatype": "obj", "data": [], "key": "taskIdList", "out": true, "input": true }], [{ "type": "dropdown", "name": "method", "showname": "任务方式", "datatype": "obj", "data": [{ val: '承包式', idx: 1 }, { val: '开放式', idx: 2 }], "key": "method", "out": true, "input": false }], [{ "type": "dobuledropdown", "name": "vendorIdList", "showname": "所属公司", "datatype": "obj", "data": [], "key": "vendorIdList", "out": true, "input": true }], [{ "type": "dobuledropdown", "name": "projectIdList", "showname": "所属项目", "datatype": "obj", "data": [], "key": "projectIdList", "out": true, "input": true }], [{ "type": "dropdown", "name": "taskType", "showname": "任务类型", "datatype": "obj", "data": [{ val: '人工标注', idx: 1 }, { val: '算法标注', idx: 2 }, { val: '审核任务', idx: 3 }], "key": "taskType", "out": true }], [{ "type": "time", "name": "inspectTime", "showname": "", "datatype": "obj", "data": null, "key": "inspectTime", "out": true }]];
        _this.tableconfig = {
            icon: {
                "id": { name: '<span>任务ID</span>', type: 'text', code: 'checkid', w: '5%', ww: '5%', n: "40" },
                "name": { name: '<span>任务名称</span>', type: 'text', code: 'pid', w: '9%', ww: '9%' },
                "assignMethod": { name: '<span>任务方式</span>', type: 'text', code: 'pname', w: '4%', ww: '4%' },
                "algPreAnnotation": { name: '<span>任务类型</span>', type: 'text', code: 'psex', w: '6%', ww: '6%' },
                "vendors": { name: '<span>所属公司</span>', type: 'text', code: 'age', w: '9%', ww: '9%' },
                "projectName": { name: '<span>所属项目</span>', type: 'text', code: 'age', w: '9%', ww: '9%' },
                "projectStatus": { name: '<span>项目状态</span>', type: 'text', code: 'age', w: '5%', ww: '5%' },
                "status": { name: '<span>任务状态</span>', type: 'text', code: 'age', w: '5%', ww: '5%' },
                "remark": { name: '<span>任务备注</span>', type: 'text', code: 'age', w: '8%', ww: '8%' },
                "startTime": { name: '<span>开始日期</span>', type: 'text', code: 'positive', w: '5%', ww: '5%' },
                "endTime": { name: '<span>结束日期</span>', type: 'text', code: 'shebei', w: '5%', ww: '5%' },
                "seriesTotalNum": { name: '<span>序列总量</span>', type: 'text', code: 'date', w: '4%', ww: '4%' },
                "seriesAvailableNum": { name: '<span>未标注序列数量</span>', type: 'text', code: 'date', w: '5%', ww: '5%' },
                "seriesSubmittedNum": { name: '<span>已提交序列数量</span>', type: 'text', code: 'date', w: '5%', ww: '5%' },
                "createTime": { name: '<span>创建日期</span>', type: 'text', code: 'action', w: '5%', ww: '5%' }
            },
            actionulwidth: 200,
            minwidth: 2500,
            type: 'center',
            actionicon: {
                "operation": { name: '<span data-i18n="action" data-name="操作">操作</span>', type: 'action', code: 'action', w: '100%', ww: '100%' }
            }
        };
        _this.listicon = {
            action: {
                release: {
                    dis: 'inline',
                    link: 'noLink',
                    content: '释放任务'
                }
            }
        };
        return _this;
    }

    return releasetask;
}(Interstellar.modelBase);

module.exports = releasetask;

/***/ }),

/***/ 740:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(741);

var tab = function (_Interstellar$moduleB) {
    _inherits(tab, _Interstellar$moduleB);

    function tab(app, dom, value, addMode) {
        _classCallCheck(this, tab);

        var _this = _possibleConstructorReturn(this, (tab.__proto__ || Object.getPrototypeOf(tab)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(743);
        return _this;
    }

    _createClass(tab, [{
        key: 'complete',
        value: function complete() {
            this.btn();
        }
    }, {
        key: 'btn',
        value: function btn(value) {
            var that = this;
            this.dom.find('.tab .option').on('click', function () {
                that.dom.find('.tab .option').removeClass('selected');
                var dom = ES.selctorDoc(this);
                dom.addClass('selected');
                var sdata = { id: dom.attr('node_id'), name: dom.find('p').html(), pid: that.nowParam.id };
                that.event._dispatch('tab.change', sdata);
            });
        }
    }]);

    return tab;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = tab;

/***/ }),

/***/ 741:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(742);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./tab.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./tab.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 742:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".tab .option {\n  float: left;\n  width: 100px;\n  text-align: center;\n  font-size: 14px;\n  color: #333333;\n  line-height: 40px;\n  cursor: pointer;\n}\n.tab .selected {\n  border-bottom: 1px solid #448E97;\n  font-weight: bold;\n}\n", ""]);

// exports


/***/ }),

/***/ 743:
/***/ (function(module, exports) {

module.exports = "<ul class=tab> <%=for(var w = 0;w < p.data.length; w++){\nvar stu=p.data[w];\nvar sel=\"\";\nif(p.default==stu.id){\n\tsel='selected';\n}\n=%> <li class=\"option <%==sel=%>\" node_id=\"<%==stu.id=%>\"> <p> <%==stu.name=%> </p> </li> <%=}=%> </ul> <div style=clear:both></div>";

/***/ }),

/***/ 744:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(745);
// var html = require('./tpl.html')

var bztoollist = function (_Interstellar$moduleB) {
    _inherits(bztoollist, _Interstellar$moduleB);

    function bztoollist(app, dom, value, addMode) {
        _classCallCheck(this, bztoollist);

        var _this = _possibleConstructorReturn(this, (bztoollist.__proto__ || Object.getPrototypeOf(bztoollist)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(747);
        _this.name = "datacondition";
        _this.data = {};
        _this.needCompent = {};

        _this.moduleobj = {};

        return _this;
    }

    _createClass(bztoollist, [{
        key: 'complete',
        value: function complete() {
            var _this2 = this;

            var that = this;
            this.dom.find('.btnarea .searchbtn').on('click', function (item) {
                _this2.event._dispatch('datacondition.search');
            });
            this.dom.find('.btnarea .exportlink').on('click', function (item) {
                _this2.event._dispatch('datacondition.export');
            });
            __webpack_require__.e/* require.ensure */(59).then((function () {
                var dropdown = __webpack_require__(638);
                that.needCompent['dropdown'] = dropdown;
                var duoxuanxlk = __webpack_require__(647);
                that.needCompent['duoxuanxlk'] = duoxuanxlk;
                var calendar = __webpack_require__(644);
                that.needCompent['calendar'] = calendar;
                that.setData();
                that.event._dispatch('datacondition.moduledone');
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        }
    }, {
        key: 'setData',
        value: function setData(refreshdata) {
            var _this3 = this;

            this.dom.find('.condition').html('');
            if (refreshdata) {
                refreshdata.map(function (item) {
                    _this3.part(item);
                });
            } else {
                this.initDate.data.map(function (item) {
                    _this3.part(item);
                });
            }
        }
    }, {
        key: 'part',
        value: function part(value) {
            this.dom.find('.condition').append('<div class="content ' + value[0].name + '"></div>');
            this.data[value[0].name] = [];
            for (var i = 0; i < value.length; i++) {
                this.allControl(value[i], i);
            }
        }
    }, {
        key: 'allControl',
        value: function allControl(value, pos) {
            this.dom.find('.condition .' + value.name).append('<div class="signlecontent' + pos + ' fl"></div>');
            eval('this.' + value.type + '(value,pos)');
        }
    }, {
        key: 'dobuledropdown',
        value: function dobuledropdown(value, pos) {
            //console.log(value, 'dobuledropdowndobuledropdown')
            var that = this;
            var inputSt = value.input;
            var myname = this.app.loadModule(this.needCompent['duoxuanxlk'], this.dom.find('.condition .' + value.name + ' .signlecontent' + pos), {
                showname: value.showname,
                data: value.data,
                datatype: value.datatype,
                input: value.input ? value.input : false,
                code: value.name,
                pos: pos
            });
            myname.event._addEvent('duoxuan.select', function (value) {
                that.data[myname.initDate.code][myname.initDate.pos] = value.name;
            });
            myname.event._addEvent('duoxuan.input', function (value) {
                // if (inputSt) {
                //     that.data[myname.initDate.code]['key'] = value.data
                //     that.event._dispatch('datacondition.duoxuanInput')
                // }
                that.event._dispatch('datacondition.dropinput', { data: value, name: myname.initDate.code });
            });
            myname.event._addEvent('duoxuanxlk.clear', function (value) {
                that.data[myname.initDate.code][myname.initDate.pos] = '';
                that.event._dispatch('datacondition.dropinput', { data: '', name: myname.initDate.code });
            });
            that.moduleobj[myname.initDate.code] = myname;
        }
    }, {
        key: 'dropdown',
        value: function dropdown(item, pos) {
            var that = this;
            var myname = this.app.loadModule(this.needCompent['dropdown'], this.dom.find('.condition .' + item.name + ' .signlecontent' + pos), {
                className: 'xlk',
                firstSelect: { val: item.showname, idx: '' },
                data: item.data,
                code: item.name,
                datatype: item.datatype,
                input: item.input ? item.input : false

            });
            myname.event._addEvent('option.click', function (value) {
                that.data[myname.initDate.code][pos] = value.idx;
            });
            myname.event._addEvent('dropDown.clear', function (value) {
                that.data[myname.initDate.code][pos] = '';
                that.event._dispatch('datacondition.dropinput', { data: '', name: myname.initDate.code });
            });

            myname.event._addEvent('drop.input', function (value) {
                that.event._dispatch('datacondition.dropinput', { data: value, name: myname.initDate.code });
            });
            that.moduleobj[myname.initDate.code] = myname;
        }
    }, {
        key: 'dropdownS',
        value: function dropdownS(item, pos) {
            var that = this;
            this.dom.find('.condition .' + item.name + ' .signlecontent' + pos).append('<span class="radioonly" style="margin:0 10px 0 5px">' + item.showname + '</span>');
            this.dom.find('.condition .' + item.name + ' .signlecontent' + pos).append('<div class="dropdownContent" style="display: inline-block;"></div>');
            var fname = item.showname;
            if (item.name == "check" || item.name == "inspect") {
                fname = item.data[0].val;
            }
            var myname = this.app.loadModule(this.needCompent['dropdown'], this.dom.find('.condition .' + item.name + ' .signlecontent' + pos + ' .dropdownContent'), {
                className: 'xlk',
                firstSelect: { val: fname, idx: '' },
                data: item.data,
                code: item.name,

                datatype: item.datatype,
                input: item.input ? item.input : false

            });
            myname.event._addEvent('option.click', function (value) {
                console.log(myname.initDate.code);
                that.data[myname.initDate.code][pos] = value.idx;
            });
            myname.event._addEvent('dropDown.clear', function (value) {
                that.data[myname.initDate.code][pos] = '';
            });
            myname.event._addEvent('drop.input', function (value) {
                that.event._dispatch('datacondition.dropinput', { data: value, name: myname.initDate.code });
            });
            that.moduleobj[myname.initDate.code] = myname;
        }
    }, {
        key: 'dTexts',
        value: function dTexts(value, pos) {
            var _this4 = this;

            var str = '<span>' + value.showname + '</span> \n                <input type="text" class="lower dText" check="num"> \n                <label>-</label> \n            <input type="text" class="upper dText" check="num">';
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos).append(str);
            this.data[value.name].push({});
            this.dom.find('.condition .' + value.name + ' .lower').on('blur', function () {
                console.log(_this4.data, value.name);
                _this4.data[value.name][pos]['lower'] = _this4.dom.find('.condition .' + value.name + ' .lower').val();
            });
            this.dom.find('.condition .' + value.name + ' .upper').on('blur', function () {
                _this4.data[value.name][pos]['upper'] = _this4.dom.find('.condition .' + value.name + ' .upper').val();
            });
        }
    }, {
        key: 'dText',
        value: function dText(value, pos) {
            var _this5 = this;

            var str = '<input type="text" class="lower dText" check="num"> \n                <label>-</label> \n            <input type="text" class="upper dText" check="num">';
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos).append(str);
            this.data[value.name][pos] = {};
            console.log(this.data);
            this.dom.find('.condition .' + value.name + ' .lower').on('blur', function () {
                console.log(_this5.data, 'value.name');
                _this5.data[value.name][pos]['lower'] = _this5.dom.find('.condition .' + value.name + ' .lower').val();
            });
            this.dom.find('.condition .' + value.name + ' .upper').on('blur', function () {
                _this5.data[value.name][pos]['upper'] = _this5.dom.find('.condition .' + value.name + ' .upper').val();
            });
        }
    }, {
        key: 'texts',
        value: function texts(value, pos) {
            var _this6 = this;

            var str = '<span>' + value.showname + ('</span> \n        <input type="text" class="inputtext textData" style="display:inline-block" value="' + (value.data ? value.data : '') + '" ' + (value.input === false ? 'readonly' : '') + '>');
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos).append(str);
            this.dom.find('.condition .' + value.name + ' .textData').on('blur', function () {
                console.log(pos, value.name);
                _this6.data[value.name][pos] = _this6.data[value.name][pos] ? _this6.data[value.name][pos] : {};
                _this6.data[value.name][pos] = _this6.dom.find('.condition .' + value.name + ' .textData').val();
            });
        }
    }, {
        key: 'time',
        value: function time(value, pos) {
            var that = this;
            var code = value.name;
            that.data[code].push({});
            var todayTime = new Date();
            var Month = todayTime.getMonth() + 1 < 10 ? '0' + (todayTime.getMonth() + 1) : todayTime.getMonth() + 1;
            var today = todayTime.getFullYear() + '-' + Month + '-' + todayTime.getDate();
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos).append('<span class="radioonly">' + value.showname + '</span>');
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos).append('<div class="timefilter" style="display: inline-block;"></div>');
            var timeCotrol = this.app.loadModule(this.needCompent['calendar'], this.dom.find('.condition .' + value.name + ' .signlecontent' + pos + ' .timefilter'), { titleShow: false, defaultword: '请选择时间' });
            timeCotrol.event._addEvent('times1.day', function (value) {
                console.log(value, 'valuetime', that.data);
                that.data[code][pos]['startTime'] = value.st ? value.st + " 00:00:00" : '';
                that.data[code][pos]['endTime'] = value.et ? value.et + " 23:59:59" : '';
                console.log(that.apidata);
            });
            timeCotrol.event._addEvent('times.dele', function (value) {
                if (value.dom.hasClass('day_left')) {
                    that.data[code][pos]['startTime'] = '';
                } else {
                    that.data[code][pos]['endTime'] = '';
                }
            });
        }
    }, {
        key: 'text',
        value: function text(value, pos) {
            var _this7 = this;

            var str = '<input type="text" class="inputtext textData">';
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos).append(str);
            this.data[value.name][pos] = '';
            this.dom.find('.condition .' + value.name + ' .textData').on('blur', function () {
                console.log(_this7.dom.find('.condition .' + value.name + ' .signlecontent' + pos + ' .textData').val(), value.name);
                _this7.data[value.name][pos] = _this7.dom.find('.condition .' + value.name + ' .signlecontent' + pos + ' .textData').val();
            });
        }
    }, {
        key: 'editdone',
        value: function editdone(value, pos) {
            var _this8 = this;

            var str = '<a class="iconfont icon-bianji radioonly"></a>';
            var code = value.name;
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos).append(str);
            this.dom.find('.condition .' + value.name + ' .signlecontent' + pos + ' .icon-bianji').on('click', function () {
                _this8.event._dispatch('datacondition.editor', { code: code });
            });
        }
        //渲染下拉框内容

    }, {
        key: 'renderHtml',
        value: function renderHtml(value, type) {
            this.moduleobj[type].renderHtml(value);
        }
    }]);

    return bztoollist;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = bztoollist;

/***/ }),

/***/ 745:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(746);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./datacondition.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./datacondition.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 746:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".datacondition {\n  position: relative;\n}\n.datacondition .condition .content {\n  float: left;\n  padding: 5px 0;\n}\n.datacondition .condition .content .textData,\n.datacondition .condition .content .dText {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n}\n.datacondition .condition .icon-bianji {\n  margin: 0px 10px;\n  line-height: 30px;\n}\n.datacondition .condition .patientAgetype > div {\n  margin-right: 5px;\n}\n.datacondition .condition .check > div,\n.datacondition .condition .inspect > div {\n  margin-right: 5px;\n}\n.datacondition .condition .check .xlk,\n.datacondition .condition .inspect .xlk {\n  width: 80px;\n  height: 30px;\n  line-height: 30px;\n}\n.datacondition .condition .check .xlk .nowname,\n.datacondition .condition .inspect .xlk .nowname {\n  width: 60px;\n}\n.datacondition .btnarea {\n  position: absolute;\n  bottom: 20px;\n  transform: translate(-120px, 0px);\n  right: 0px;\n}\n.datacondition .btnarea .showData {\n  width: 110px;\n  height: 40px;\n  line-height: 40px;\n  border-radius: 4px;\n}\n.datacondition .btnarea .biaozhubtn {\n  display: inline-block;\n  padding: 0 20px;\n  height: 40px;\n  color: #fff;\n  line-height: 40px;\n  background: #4c9fa9;\n  border-radius: 4px;\n  text-align: center;\n}\n.datacondition .btnarea .searchbtn {\n  margin: 0 20px 0 30px;\n}\n.datacondition .btnarea .dwdiv {\n  position: relative;\n  display: inline-block;\n}\n.datacondition .btnarea .dwdiv > label {\n  width: 280px;\n  color: red;\n  position: absolute;\n  text-align: left;\n  left: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 747:
/***/ (function(module, exports) {

module.exports = "<div class=datacondition> <div class=condition></div> <div style=clear:both></div> </div>";

/***/ }),

/***/ 971:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(972);
// var html = require('./tpl.html')

var taskuser = function (_Interstellar$modalBa) {
    _inherits(taskuser, _Interstellar$modalBa);

    function taskuser(app, dom, value, addMode) {
        _classCallCheck(this, taskuser);

        var _this = _possibleConstructorReturn(this, (taskuser.__proto__ || Object.getPrototypeOf(taskuser)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(974);
        _this.name = 'taskuser';
        _this.apidata = {};
        _this.idlist = [];
        return _this;
    }

    _createClass(taskuser, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            console.log(that.api, 'that.api');
            if (that.api.data.data.list.length == 0) {
                that.dom.find('.modal-body').html('<div class="nodata1">当前任务无标注医生认领</div>');
            } else {
                that.setTitle();
            }
            this.dom.find('.icon-guanbi').on('click', function () {
                that.close();
            });
            that.dom.find('.add').on('click', function () {
                if (that.idlist.length > 0) {
                    that.app.alert.show({
                        title: ' ',
                        msg: '确认要释放此批用户？释放后，已提交的标注记录还在，进行中的序列返回任务池中',
                        close: true,
                        sure: function sure() {
                            that.event._dispatch('taskuser.adddata', { data: that.idlist });
                        }
                    });
                } else {
                    that.app.alert.show({
                        title: ' ',
                        msg: '请选择需要释放的用户',
                        close: false
                    });
                }
            });
            if (that.api.config) {
                that.dom.find('.modal-title').html(that.api.config.title);
            }
        }
    }, {
        key: 'setTitle',
        value: function setTitle() {
            var obj = {};
            var that = this;
            obj['icon'] = {
                "userName": { name: '<span>用户姓名</span>', type: 'text', code: 'checkid', w: '15%', ww: '15%', n: "40" },
                "userPhone": { name: '<span>用户账号（手机）</span>', type: 'text', code: 'checkid', w: '25%', ww: '25%' },
                "userSubmitSeriesTotalNum": { name: '<span>已提交序列</span>', type: 'text', code: 'pid', w: '25%', ww: '25%' },
                "userInProgressNum": { name: '<span>进行中序列</span>', type: 'text', code: 'pname', w: '35%', ww: '35%' }
            };
            obj['type'] = 'center';
            obj['chose'] = 'all';
            obj['chosew'] = '30px';
            obj['initPagina'] = false;
            obj['pagesizeSet'] = false;
            obj['tablewidth'] = ES.selctorDoc('.tasktable').box().clientWidth - 60;
            __webpack_require__.e/* require.ensure */(53/* duplicate */).then((function () {
                var cont_table = __webpack_require__(640);
                that.table = that.app.loadModule(cont_table, that.dom.find('.tasktable'), {
                    id: 'tasktable',
                    header: obj
                });
                that.table.event._addEvent('table.check', function (value) {
                    var temp = value;
                    if (temp.type == 'add') {
                        if (that.idlist.toString().lastIndexOf(temp.id) == -1) {
                            that.idlist.push(temp.id);
                        }
                    }
                    if (temp.type == 'del') {
                        console.log(that.datalist, that.idlist, temp);
                        that.idlist = that.idlist.filter(function (item) {
                            return parseInt(item) !== parseInt(temp.id);
                        });
                    }
                });
                that.table.event._addEvent('table.allcheck', function (value) {
                    if (value.type == 'add') {
                        var temp = that.idlist.toString();
                        value.id.forEach(function (val, idx) {
                            if (temp.lastIndexOf(val) == -1) {
                                that.idlist.push(val);
                            }
                        });
                    }
                    if (value.type == 'del') {
                        var _temp = value.id.toString();
                        that.idlist = that.idlist.filter(function (item) {
                            return _temp.lastIndexOf(item) == -1;
                        });
                    }
                });
                that.dom.find('.list-content').removeClass('hide');
                that.setMain(that.api.data);
            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
        }
    }, {
        key: 'setMain',
        value: function setMain(value) {
            console.log(value, 'cacc');
            var that = this;
            var data2 = [];
            var res = '';
            if (value) {
                res = value;
            }
            if (res.code == 0) {
                if (res.data.list.length > 0) {
                    res.data.list.forEach(function (val, idx) {
                        val.id = val.userId;
                    });
                    that.table.setData(res.data.list);
                } else {
                    that.table.noData();
                }
            }
            that.initscrollmenu();
        }
    }, {
        key: 'initscrollmenu',
        value: function initscrollmenu() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }

            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            this.dom.find('.tasktable').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }]);

    return taskuser;
}(Interstellar.modalBase);

//原型链一定要有的


module.exports = taskuser;

/***/ }),

/***/ 972:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(973);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./taskuser.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./taskuser.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 973:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".taskuser {\n  box-sizing: border-box;\n  background: #fff;\n  border-radius: 4px;\n  font-family: \"Microsoft YaHei\";\n  font-size: 16px;\n  width: 800px;\n  height: 500px;\n  margin-left: -400px;\n  position: relative;\n}\n.taskuser .icon-guanbi {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n}\n.taskuser .modal-body {\n  padding: 10px 0 20px 10px;\n  font-size: 14px;\n}\n.taskuser .modal-body .searchbtn {\n  width: 100px;\n  height: 30px;\n  border: 1px solid #4c9fa9;\n  line-height: 30px;\n  color: #4c9fa9;\n  float: right;\n  margin-right: 40px;\n}\n.taskuser .modal-body .tasktable {\n  height: 310px;\n  overflow: hidden;\n  position: relative;\n}\n.taskuser .modal-body .tasktable .table {\n  padding-bottom: 20px;\n  position: relative;\n}\n.taskuser .modal-body span {\n  font-size: 16px;\n}\n.taskuser .modal-body .btnarea {\n  height: 30px;\n  text-align: right;\n  margin-right: 20px;\n  margin-top: 20px;\n}\n.taskuser .modal-body .btnarea .biaozhubtn {\n  width: 100px;\n  height: 30px;\n  line-height: 30px;\n  background: #4c9fa9;\n  border: 1px solid #4c9fa9;\n  color: #fff;\n  margin-left: 20px;\n}\n.taskuser .modal-body .btnarea .cancel {\n  background: #fff;\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n.taskuser .modal-body .nodata1 {\n  text-align: center;\n  height: 300px;\n  line-height: 300px;\n  font-size: 18px;\n  font-weight: bold;\n}\n", ""]);

// exports


/***/ }),

/***/ 974:
/***/ (function(module, exports) {

module.exports = "<div class=\"taskuser modal\"> <div class=modal-header> <p class=modal-title>已在任务中的用户</p> <i class=\"icon-guanbi iconfont\"></i> </div> <div class=modal-body> <div class=tasktable> </div> <div class=btnarea> <a class=\"biaozhubtn add\">批量释放</a> </div> </div> </div>";

/***/ }),

/***/ 975:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".releasetask {\n  margin: 20px;\n  background: #fff;\n  height: 100%;\n  overflow: hidden;\n}\n.releasetask .filterarea {\n  margin: 20px;\n  width: 900px;\n}\n.releasetask .filterarea .content {\n  margin-right: 20px;\n}\n.releasetask .filterarea .content .xlk {\n  width: 170px;\n  height: 35px;\n  line-height: 35px;\n}\n.releasetask .filterarea .content .xlk .nowname {\n  width: 94%;\n}\n.releasetask .filterarea .content .duoxuanxlk {\n  width: 170px;\n  height: 35px;\n  line-height: 35px;\n}\n.releasetask .filterarea .content .inputtext {\n  width: 160px;\n  padding-left: 10px;\n  height: 35px;\n  line-height: 35px;\n}\n.releasetask .filterarea .inspectTime {\n  position: relative;\n}\n.releasetask .filterarea .inspectTime .chooseData > div {\n  display: inline-block;\n}\n.releasetask .filterarea .inspectTime .chooseData .showData {\n  width: 170px;\n  height: 35px;\n  line-height: 35px;\n  border-radius: 4px;\n}\n.releasetask .btnarea {\n  position: absolute;\n  top: 40px;\n  right: 20px;\n}\n.releasetask .btnarea .biaozhubtn {\n  margin-right: 20px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 20px;\n  background: #4c9fa9;\n  color: #fff;\n}\n.releasetask .tablearea .actiontable .ul {\n  overflow: unset;\n}\n.releasetask .tablearea .list {\n  min-height: 350px;\n}\n", ""]);

// exports


/***/ })

});
//# sourceMappingURL=ad54745e6d5a93cfc730.29.min.js.map