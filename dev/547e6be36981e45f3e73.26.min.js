webpackJsonp([26,52],{

/***/ 169:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var createcomponent = function (_Interstellar$pagesBa) {
    _inherits(createcomponent, _Interstellar$pagesBa);

    function createcomponent() {
        _classCallCheck(this, createcomponent);

        return _possibleConstructorReturn(this, (createcomponent.__proto__ || Object.getPrototypeOf(createcomponent)).apply(this, arguments));
    }

    _createClass(createcomponent, [{
        key: 'complete',
        value: function complete() {
            ES.selctorDoc('#menu').hide();
            ES.selctorDoc('.header').addClass('yisheng');
            ES.selctorDoc('#content').css({ width: '100%' });
            var that = this;
            this.flag = true;
            this.yymcdata = [{
                val: '医院1',
                idx: '1'
            }, {
                val: '医院2',
                idx: '2'
            }];
            this.type = this.app.parpam.type;
            this.componentId = this.app.parpam.componentid;
            this.apiData = {};
            this.nowcontrols = null;
            this.resize();
            this.dom.find('.component').on('click', function () {
                var textcontrol = __webpack_require__(765);
                var selectcontrol = __webpack_require__(769);
                var checkboxcontrol = __webpack_require__(773);
                var obj = {
                    text: textcontrol,
                    select: selectcontrol,
                    checkbox: checkboxcontrol
                };
                that.nowcontrols = that.app.loadModule(obj[ES.selctorDoc(this).attr('type')], that.dom.find('.mainarea'), {});
                that.nowcontrols.event._addEvent('controls.heightchange', function () {
                    that.initscroll();
                });
                that.nowcontrols.event._addEvent('controls.createlabel', function (value) {
                    var json = {
                        category: 'component',
                        text: value.val
                    };
                    that.api.createlabel(json).done(function (res) {
                        if (res.code == 0) {
                            that.nowcontrols.setid(res.data.id, value.val);
                        }
                    });
                });
                that.nowcontrols.event._addEvent('controls.inputlabel', function (value) {
                    var json = {
                        pageSize: 10,
                        category: 'component',
                        text: value.val
                    };
                    setTimeout(function () {
                        that.api.searchlabel(json).done(function (res) {
                            if (res.code == 0) {
                                if (res.data) {
                                    that.nowcontrols.labelul(res.data.list);
                                    that.dom.find('.mask').removeClass('hide');
                                } else {
                                    that.nowcontrols.labelul('');
                                    that.dom.find('.mask').addClass('hide');
                                }
                            }
                        });
                    }, 1000);
                });
                that.flag = false;
                that.dom.find('.component').addClass('hide');
                ES.selctorDoc(this).removeClass('hide');
                that.apiData = {};
                that.apiData.type = ES.selctorDoc(this).attr('type');
                that.dom.find('.' + ES.selctorDoc(this).attr('type') + 'area').removeClass('hide');
                that.initscroll();
            });
            that.dom.find('.mask').on('click', function () {
                that.nowcontrols.labelul('');
                that.dom.find('.mask').addClass('hide');
            });
            this.dom.find('.cancel').on('click', function () {
                that.dom.find('.mask').addClass('hide');
                if (that.type == 'edit' || that.type == 'view') {
                    that.app.changePage('componentmanage');
                } else {
                    if (that.nowcontrols !== null) {
                        that.dom.find('.mainarea').html('');
                        that.dom.find('.component').removeClass('hide');
                        that.initscroll();
                        that.nowcontrols = null;
                    } else {
                        that.app.changePage('componentmanage');
                    }
                }
            });
            that.dom.find('.save').on('click', function () {
                that.apiData = that.nowcontrols.checkrequired();
                if (that.apiData) {
                    if (that.type == 'new') {
                        that.api.create(that.apiData).done(function (res) {
                            if (res.code == 0) {
                                that.app.changePage('componentmanage');
                            } else {
                                alert('新增失败');
                            }
                        });
                    } else {
                        that.apiData.id = that.componentId;
                        that.api.update(that.apiData).done(function (res) {
                            if (res.code == 0) {
                                that.app.changePage('componentmanage');
                            } else {
                                alert('编辑失败');
                            }
                        });
                    }
                }
            });
            if (this.type == 'edit') {
                that.dom.find('.bigtitle').html('编辑标注字段');
                that.dom.find('.stitle').addClass('hide');
                that.setData();
                //that.bindevent();
            } else if (this.type == 'view') {
                that.dom.find('.bigtitle').html('查看标注字段');
                that.dom.find('.save').addClass('hide');
                that.dom.find('.cancel').html('关闭');
                that.dom.find('.stitle').addClass('hide');
                that.setData();
            }
        }
    }, {
        key: 'setData',
        value: function setData() {
            var that = this;
            var json = {
                id: parseInt(that.componentId)
            };
            that.api.getdetails(json).done(function (res) {
                that.dom.find('.component[type="' + res.data.type + '"]').click();
                that.nowcontrols.render(res.data);
                if (that.type == 'view') {
                    that.dom.find('.mainarea .icon-guanbi').parent().addClass('hide');
                    if (that.dom.find('.iconfont').dom) {
                        that.dom.find('.mainarea .iconfont').addClass('hide');
                    }
                    if (that.dom.find('.check-box').dom) {
                        that.dom.find('.check-box').dom.forEach(function (val, idx) {
                            if (val.hasClass('choose')) {
                                val.removeClass('choose');
                                that.dom.find('.check-box').off('click');
                                val.addClass('choose');
                            } else {
                                that.dom.find('.check-box').off('click');
                            }
                        });
                    }
                    that.dom.find('.isdefault').off('click');
                    that.dom.find('.component').off('click');
                    that.dom.find('input').attr('disabled', 'disabled');
                }
            });
        }
    }, {
        key: 'resize',
        value: function resize() {
            var ch = ES.selctorDoc(window).box().clientHeight - 100;
            ES.selctorDoc('.createcomponent').css({ 'height': ch });
            ES.selctorDoc('.mainarea').css({ 'min-height': ch - 250 });
        }
    }, {
        key: 'initscroll',
        value: function initscroll() {
            if (this.myScroll) {
                this.myScroll.refresh();
                return;
            }
            var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
            ES.selctorDoc('.createcomponent').attr('id', rid);
            this.myScroll = new IScroll('#' + rid, {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                hideScrollbar: false,
                vScrollbar: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: false,
                disableMouse: true,
                disablePointer: true
            });
        }
    }]);

    return createcomponent;
}(Interstellar.pagesBase);

module.exports = createcomponent;

/***/ }),

/***/ 519:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(902);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./createcomponent.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./createcomponent.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 520:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlDict = {
  getdetails: '/formComponent/read',
  create: '/formComponent/create',
  update: '/formComponent/update',
  searchlabel: '/tag/search',
  createlabel: '/tag/create'
};
var api = {
  getdetails: function getdetails(value) {
    return this.HttpRequest.POST(urlDict.getdetails, value);
  },
  create: function create(value) {
    return this.HttpRequest.POST(urlDict.create, value);
  },
  update: function update(value) {
    return this.HttpRequest.POST(urlDict.update, value);
  },
  searchlabel: function searchlabel(value) {
    return this.HttpRequest.POST(urlDict.searchlabel, value);
  },
  createlabel: function createlabel(value) {
    return this.HttpRequest.POST(urlDict.createlabel, value);
  }
};
module.exports = api;

/***/ }),

/***/ 521:
/***/ (function(module, exports) {

module.exports = "<div class=createcomponent> <div class=scroll> <div class=bigtitle>创建标注字段</div> <div class=componentmain> <p class=stitle>添加选择控件</p> <div class=\"text component\" type=text> <i class=\"iconfont icon-wenbenkuang\"></i> <span>文本框</span> </div> <div class=\"select component\" type=select> <i class=\"iconfont icon-xialacaidan\"></i> <span>下拉菜单</span> </div> <div class=\"checkbox component\" type=checkbox> <i class=\"iconfont icon-duoxuankuang\"></i> <span>复选组</span> </div> </div> <div class=mainarea> </div> <div class=btnarea> <a class=\"biaozhubtn save\">保存</a> <a class=\"biaozhubtn cancel\">取消</a> </div> <div class=\"mask hide\"></div> </div> </div>";

/***/ }),

/***/ 522:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//这边基本上引入需要使用的资源less，api，需要使用的模块等等。

var createcomponent = function (_Interstellar$modelBa) {
    _inherits(createcomponent, _Interstellar$modelBa);

    function createcomponent(app) {
        _classCallCheck(this, createcomponent);

        var _this = _possibleConstructorReturn(this, (createcomponent.__proto__ || Object.getPrototypeOf(createcomponent)).call(this, app));

        _this.proseriesdata = { page: 1, pageSize: 10, isselected: 'no' };
        return _this;
    }

    return createcomponent;
}(Interstellar.modelBase);

module.exports = createcomponent;

/***/ }),

/***/ 638:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(737);
// var html = require('./tpl.html')

var index = function (_Interstellar$moduleB) {
  _inherits(index, _Interstellar$moduleB);

  function index(app, dom, value, addMode) {
    _classCallCheck(this, index);

    var _this = _possibleConstructorReturn(this, (index.__proto__ || Object.getPrototypeOf(index)).call(this, app, dom, value, addMode));

    _this.html = __webpack_require__(739);
    _this.name = "dropDown";
    return _this;
  }

  _createClass(index, [{
    key: 'complete',
    value: function complete() {
      this.dom.find('.drop-down').addClass(this.nowParam.className);
      var cw = ES.selctorDoc(window).box().clientWidth;
      var ch = ES.selctorDoc(window).box().clientHeight;
      this.dom.find('.mask').css({ 'width': cw, 'height': ch, 'left': 0, 'top': 0 });
      this.datatype = this.nowParam.datatype ? this.nowParam.datatype : 'obj';
      this.input = this.nowParam.input == undefined ? false : this.nowParam.input;
      this.maxshownum = this.nowParam.maxshownum == undefined ? 10 : this.nowParam.maxshownum;
      this.render();
    }
  }, {
    key: 'render',
    value: function render(value) {
      if (!value) {
        value = this.nowParam;
      }
      var that = this;
      that.firstSelect = value.firstSelect ? value.firstSelect : value.data[0];
      this.dom.find('.selected1 input').attr('data-idx', that.firstSelect.idx);
      this.dom.find('.selected1 input').attr('placeholder', that.firstSelect.val);
      that.renderHtml(value.data);
      that.bindEvent();
      that.event._dispatch('dropDown.done');
    }
  }, {
    key: 'renderHtml',
    value: function renderHtml(value) {
      // console.log('==========value',value,this.datatype)
      var that = this;
      that.data = value;
      var strHtml = '';
      if (this.datatype == 'obj') {
        for (var i = 0; i < value.length; i++) {
          if (that.firstSelect == value[i]) {
            strHtml += '<li class="option select" title="' + value[i].val + '" data-idx=' + value[i].idx + '' + ' props=' + (value[i].props ? value[i].props : "") + '>' + value[i].val + '</li>';
          } else {
            strHtml += '<li class="option" title="' + value[i].val + '" data-idx=' + value[i].idx + '' + ' props=' + (value[i].props ? value[i].props : "") + '>' + value[i].val + '</li>';
          }
        }
      } else {
        for (var _i = 0; _i < value.length; _i++) {
          if (that.firstSelect == value[_i]) {
            strHtml += '<li class="option select" title="' + value[_i] + '" data-idx=' + value[_i] + '>' + value[_i] + '</li>';
          } else {
            strHtml += '<li class="option" title="' + value[_i] + '" data-idx=' + value[_i] + '>' + value[_i] + '</li>';
          }
        }
      }
      this.dom.find('._dropdown1 .selectbox').html(strHtml);
      this.dom.find('.option').on('click', function () {
        that.dom.find('.option').removeClass('select');
        ES.selctorDoc(this).addClass('select');
        that.dom.find('.selected1 input').val(ES.selctorDoc(this).html());
        that.dom.find('.selected1 input').attr('data-idx', ES.selctorDoc(this).attr('data-idx'));
        that.dom.find('.selected1 input').attr('props', ES.selctorDoc(this).attr('props'));
        that.dom.find('._dropdown1').hide();
        that.dom.find('.icon').removeClass('drop');
        that.event._dispatch('option.click', {
          val: that.dom.find('.selected1 input').val(),
          idx: that.dom.find('.selected1 input').attr('data-idx'),
          props: that.dom.find('.selected1 input').attr('props')
        });
      });
      that.initscrollmenu();
    }
  }, {
    key: 'bindEvent',
    value: function bindEvent() {
      var that = this;
      this.dom.find('.selected1').on('click', function (e) {
        e.stopPropagation();
        var dom = ES.selctorDoc(this);
        dom.find('.icon').addClass('drop');
        dom.parent().find('._dropdown1').show();
        if (that.dom.find('.option').dom.length > that.maxshownum) {
          that.dom.find('.scroll').css({ height: that.dom.find('.drop-down').box().clientHeight * that.maxshownum });
          that.dom.find('.scroll').css({ overflow: 'hidden' });
          that.initscrollmenu();
        }
        that.dom.find('.mask').show();
      });
      this.dom.find('.selected1').on('mouseover', function () {
        var dom = ES.selctorDoc(this);
        var data = dom.find('input').attr('data-idx');
        if (data) {
          ES.selctorDoc(this).find('.icon-shanchutishiicon').show();
          ES.selctorDoc(this).find('.icon').hide();
        }
      });
      this.dom.find('.selected1').on('mouseout', function () {
        ES.selctorDoc(this).find('.icon-shanchutishiicon').hide();
        ES.selctorDoc(this).find('.icon').show();
      });
      this.dom.find('.selected1 .icon-shanchutishiicon').on('click', function (e) {
        e.stopPropagation();
        ES.selctorDoc(this).parent().find('.nowname').attr('placeholder', that.firstSelect.val);
        ES.selctorDoc(this).parent().find('.nowname').val('');
        ES.selctorDoc(this).parent().find('.nowname').attr('data-idx', that.firstSelect.idx);
        that.dom.find('.select').removeClass('select');
        that.event._dispatch('dropDown.clear');
      });
      this.dom.find('._dropdown1 .mask').on('click', function () {
        ES.selctorDoc(this).parent().hide();
        that.dom.find('.icon').removeClass('drop');
        that.dom.find('.loading_xlk').addClass('drop');
      });
      if (!that.input) {
        that.dom.find('.nowname').attr('readonly', 'readonly');
      } else {
        this.dom.find('.nowname').on('input', function () {
          that.event._dispatch('drop.input', { data: ES.selctorDoc(this).val(), classname: ES.selctorDoc(this).parent().parent().parent().attr('class') });
        });
        this.dom.find('.nowname').on('focus', function () {
          that.dom.find('.nowname').attr('placeholder', '');
        });
        this.dom.find('.nowname').on('blur', function () {
          that.dom.find('.nowname').attr('placeholder', that.nowParam.firstSelect.val);
        });
      }
    }
  }, {
    key: 'reset',
    value: function reset(value) {
      this.dom.find('.selected1 input').attr('placeholder', this.nowParam.firstSelect.val);
      this.dom.find('.selected1 input').val('');
      this.dom.find('.selected1 input').attr('data-idx', this.nowParam.firstSelect.idx);
      this.dom.find('.select').removeClass('select');
      this.dom.find('._dropdown1 .selectbox .option').eq(0).addClass('select');
      if (!value) {
        this.event._dispatch('option.click', {
          val: this.dom.find('.selected1 input').val(),
          idx: this.dom.find('.selected1 input').attr('data-idx')
        });
      }
    }
  }, {
    key: 'setChoose',
    value: function setChoose(value) {
      var that = this;
      that.data.forEach(function (val, idx) {
        if (val.idx == value) {
          this.dom.find('.selected1 input').attr('data-idx', val.idx);
          this.dom.find('.selected1 input').attr('placeholder', val.val);
        }
      });
    }
  }, {
    key: 'disable',
    value: function disable() {
      var that = this;
      that.dom.find('.selected1').off('click');
      that.dom.find('.selected1').off('mouseover');
      that.dom.find('.nowname').addClass('drop_disabled');
      that.dom.find('.nowname').attr('readonly', 'readonly');
      that.dom.find('.drop-down').addClass('drop_disabled');
    }
  }, {
    key: 'able',
    value: function able() {
      var that = this;
      that.dom.find('.nowname').removeClass('drop_disabled');
      that.dom.find('.drop-down').removeClass('drop_disabled');
      that.dom.find('.selected1').on('click', function (e) {
        e.stopPropagation();
        var dom = ES.selctorDoc(this).parent();
        dom.find('.icon').addClass('drop');
        dom.parent().find('._dropdown1').show();
        if (that.dom.find('.option').dom.length > that.maxshownum) {
          that.dom.find('.scroll').css({ height: that.dom.find('.drop-down').box().clientHeight * that.maxshownum });
          that.dom.find('.scroll').css({ overflow: 'hidden' });
          that.initscrollmenu();
        }
        that.dom.find('.mask').show();
      });
    }
  }, {
    key: 'loading',
    value: function loading(bool) {
      if (bool) {
        this.dom.find('.selectbox').html('');
        this.dom.find('.loading_xlk').removeClass('hide');
      } else {
        this.dom.find('.loading_xlk').addClass('hide');
      }
    }
  }, {
    key: 'initscrollmenu',
    value: function initscrollmenu() {
      if (this.myScroll1) {
        this.myScroll1.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      this.dom.find('.scroll').attr('id', rid);
      this.myScroll1 = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }]);

  return index;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = index;

/***/ }),

/***/ 737:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(738);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./drop.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./drop.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 738:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, "@charset \"UTF-8\";\n.ctdrop {\n  background: none;\n  border: 1px solid #D2EFFC;\n  width: 90px;\n  color: #D2EFFC;\n  min-width: 90px;\n  font-size: 12px;\n  border-radius: 4px;\n  line-height: 25px;\n}\n.ctdrop .selected1 {\n  margin-left: 10px;\n  border: 0;\n}\n.ctdrop .selected1 input {\n  display: inline-block;\n  color: #D2EFFC;\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n}\n.ctdrop .selected1 .icon-icon-test3 {\n  color: #D2EFFC;\n  font-size: 0.5rem;\n  margin-right: 1px;\n}\n.ctdrop .selected1 img {\n  position: absolute;\n  right: 5px;\n  top: 10px;\n}\n.xlk,\n.kxlk {\n  background: #fff;\n  width: 90px;\n  color: #333;\n  font-size: 12px;\n  position: relative;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n}\n.xlk .selected1,\n.kxlk .selected1 {\n  width: 100%;\n  height: 100%;\n}\n.xlk .selected1 .nowname,\n.kxlk .selected1 .nowname {\n  border-radius: 4px;\n  color: #333;\n  display: inline-block;\n  cursor: pointer;\n  border: none;\n  background: #fff;\n  height: 100%;\n  width: 88%;\n  margin-left: 10px;\n}\n.xlk .selected1 img,\n.kxlk .selected1 img {\n  position: absolute;\n  right: 5px;\n  top: 10px;\n}\n.xlk .selected1 .drop_disabled,\n.kxlk .selected1 .drop_disabled {\n  background: #e8e8e8;\n  cursor: not-allowed !important;\n}\n.listxlk {\n  background: #fff;\n  width: 90%;\n  height: 38px;\n  color: #333;\n  font-size: 12px;\n  position: relative;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n}\n.listxlk .selected1 {\n  width: 100%;\n  height: 90%;\n}\n.listxlk .selected1 input {\n  border-radius: 4px;\n  color: #333;\n  display: inline-block;\n  cursor: pointer;\n  border: none;\n  background: #fff;\n  height: 100%;\n  width: unset;\n  margin-left: 10px;\n}\n.listxlk .selected1 img {\n  position: absolute;\n  right: 5px;\n  top: 10px;\n}\n.listxlk .selectbox {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n}\n.listxlk .selectbox .option {\n  height: 30px;\n  line-height: 30px;\n}\n.listxlk .selectbox .scroll {\n  overflow: hidden;\n  position: relative;\n}\n.selected1 {\n  text-align: left;\n  line-height: inherit;\n  font-family: \"Microsoft YaHei\";\n  font-size: inherit;\n  color: #333;\n  position: relative;\n  cursor: pointer;\n}\n.selected1 .nowname {\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  color: #333;\n  display: inline-block;\n  cursor: pointer;\n  background: #fff;\n  width: 100%;\n  height: 100%;\n}\n.selected1 .icon {\n  transform: rotate(-180deg);\n  vertical-align: middle;\n  transition: all 0.3s;\n  display: inline-block;\n  font-size: 12px;\n  position: absolute;\n  top: 0;\n  right: 5px;\n}\n.selected1 .drop {\n  transform: rotate(0deg);\n}\n.selected1 .icon-shanchutishiicon {\n  position: absolute;\n  font-size: 12px;\n  color: #e6e6e6;\n  width: 12px;\n  top: 0;\n  right: 5px;\n}\n.selected1 .drop_disabled {\n  background: #e8e8e8;\n  cursor: not-allowed !important;\n}\n._dropdown1 {\n  position: absolute;\n  display: none;\n  width: 100%;\n}\n._dropdown1 ul {\n  list-style: none;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 4px;\n  overflow: hidden;\n  background: #fff;\n  font-family: \"Microsoft YaHei\";\n  font-size: inherit;\n  z-index: 15;\n  color: #333;\n  border: 1px solid #e8e8e8;\n}\n._dropdown1 li {\n  margin: 0 5px;\n  min-height: 24px;\n  text-align: left;\n  cursor: pointer;\n  white-space: nowrap;\n  overflow: hidden;\n}\n._dropdown1 li:hover {\n  color: #448E97;\n  background: #ECF3F4;\n}\n._dropdown1 li.select {\n  color: #333333;\n  background: #ECF3F4;\n}\n._dropdown1 .mask {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9;\n}\n._dropdown1 .scroll {\n  position: relative;\n}\n.drop-down .selectbox {\n  min-height: 50px;\n}\n.drop-down .loading_xlk {\n  background: url(/images/loading1.gif) no-repeat 35px -28px;\n  height: 50px;\n  width: 100%;\n  top: 33px;\n  z-index: 2000;\n  position: absolute;\n}\n.drop_disabled .selected1 {\n  background: #e8e8e8;\n}\n.keepwhite {\n  background: #fff!important;\n}\n.keepwhite .selected1 {\n  background: #fff!important;\n}\n", ""]);

// exports


/***/ }),

/***/ 739:
/***/ (function(module, exports) {

module.exports = "<div class=drop-down> <div class=selected1> <input class=nowname type=text /> <i class=\"iconfont icon-shanchutishiicon\" style=display:none></i> <i class=\"iconfont icon-icon-test3 icon\"></i> </div> <div class=_dropdown1> <div class=scroll> <ul class=selectbox> </ul> </div> <div class=mask></div> </div> <div class=\"loading_xlk hide\"></div> </div>";

/***/ }),

/***/ 765:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(766);
// var html = require('./tpl.html')

var textcontrols = function (_Interstellar$moduleB) {
    _inherits(textcontrols, _Interstellar$moduleB);

    function textcontrols(app, dom, value, addMode) {
        _classCallCheck(this, textcontrols);

        var _this = _possibleConstructorReturn(this, (textcontrols.__proto__ || Object.getPrototypeOf(textcontrols)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(768);
        _this.name = "textcontrols";
        return _this;
    }

    _createClass(textcontrols, [{
        key: 'complete',
        value: function complete() {
            this.render();
            this.addevent();
            this.hasinput = {};
            var that = this;
            this.dom.find('.textname').on('change', function (res) {
                that.hasinput['textname'] = ES.selctorDoc(this).val();
            });
        }
    }, {
        key: 'render',
        value: function render(value) {
            var that = this;
            var dropdown = __webpack_require__(638);
            that.drop = that.app.loadModule(dropdown, that.dom.find('.texttype'), {
                className: 'xlk',
                firstSelect: {
                    val: '请选择',
                    idx: ''
                },
                data: [{
                    val: '文本型',
                    idx: 'text'
                }, {
                    val: '数字型',
                    idx: 'num'
                }]
            });
            that.drop.event._addEvent('option.click', function (res) {
                that.hasinput.texttype = res.idx;
            });
            if (value) {
                that.setData(value);
            }
        }
    }, {
        key: 'addevent',
        value: function addevent() {
            var that = this;
            that.dom.find('.labelsinput').on('keydown', function (e) {
                var keyCode = e.keyCode;
                if (event.keyCode === 13) {
                    if (ES.selctorDoc(this).val() != '') {
                        that.createlabel(ES.selctorDoc(this).val());
                    }
                }
            });
            that.dom.find('.labelsarea').on('blur', function () {
                if (ES.selctorDoc(this).val() != '') {
                    that.createlabel(ES.selctorDoc(this).val());
                }
            });
            that.dom.find('.labelsarea').on('click', function () {
                // that.dom.find('.labelsinput').focus();
                $('.labelsinput').focus();
            });
            that.dom.find('.labelsinput').on('input', function () {
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.event._dispatch('controls.inputlabel', { val: ES.selctorDoc(this).val() });
            });
        }
    }, {
        key: 'bindlabeldelete',
        value: function bindlabeldelete() {
            var that = this;
            that.dom.find('.labelitem .icon-guanbi').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
                that.event._dispatch('controls.heightchange');
            });
        }
    }, {
        key: 'checkrequired',
        value: function checkrequired() {
            var that = this;
            that.dom.find('.inputLine').dom.forEach(function (val, idx) {
                val.find('.' + val.attr('redlabel')).removeClass('redborder');
                val.find('.required').remove();
                if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                    console.log(val.attr('redlabel'));
                    val.find('.' + val.attr('redlabel')).addClass('redborder');
                    val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                }
            });
            if (that.dom.find('.redborder').dom) {
                return false;
            } else {
                return that.returndata();
            }
        }
    }, {
        key: 'returndata',
        value: function returndata() {
            var that = this;
            var obj = {};
            obj.type = 'text';
            obj.name = that.dom.find('.textname').val();
            obj.parameter = {};
            obj.parameter.texttype = that.dom.find('.texttype .nowname').attr('data-idx');
            //obj.parameter.isrequired=that.dom.find('.isrequired').hasClass('choose')
            obj.parameter = JSON.stringify(obj.parameter);
            var arr = [];
            if (that.dom.find('.labelsarea .labelitem').dom) {
                that.dom.find('.labelsarea .labelitem').dom.forEach(function (val, idx) {
                    if (val.attr('dataid')) {
                        arr.push(parseInt(val.attr('dataid')));
                    }
                });
            }
            obj.tagIdList = arr;
            return obj;
        }
    }, {
        key: 'setData',
        value: function setData(value) {
            var that = this;
            that.dom.find('.textname').val(value.name);
            console.log(that.dom.find('.texttype .nowname'));
            that.dom.find('.texttype .nowname').click();
            that.dom.find('.texttype .option[data-idx="' + JSON.parse(value.parameter).texttype + '"]').click();
            value.tagList.forEach(function (val, idx) {
                var label = '<span class="labelitem" dataid="' + val.id + '">\n' + '                            <label>' + val.text + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
            });
            that.bindlabeldelete();
        }
    }, {
        key: 'labelul',
        value: function labelul(value) {
            var that = this;
            var html = '';
            if (value) {
                value.forEach(function (val, idx) {
                    html += '<li class="labelli" dataid="' + val.id + '">' + val.text + '</li>';
                });
                that.dom.find('.labelul').html(html);
                that.dom.find('.labelli').on('click', function () {
                    ES.selctorDoc(this).parent().html('');
                    that.createlabel(ES.selctorDoc(this).html(), ES.selctorDoc(this).attr('dataid'));
                });
            } else {
                that.dom.find('.labelul').html('');
            }
        }
    }, {
        key: 'createlabel',
        value: function createlabel(value, value2) {
            var that = this;
            that.hasinput.tagList = '';
            if (that.dom.find('.mask').dom) that.dom.find('.mask').addClass('hide');
            that.dom.find('.labelul').html('');
            that.dom.find('.tips').css({ 'color': '#666' });
            if (that.dom.find('.labelitem').dom && that.dom.find('.labelitem').dom.length >= 10) {
                that.dom.find('.tips').css({ 'color': 'red' });
                that.dom.find('.labelsinput').val('');
            } else {
                var label = '<span class="labelitem" dataid="' + value2 + '">\n' + '                            <label>' + value + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
                if (!value2) {
                    that.event._dispatch('controls.createlabel', { val: that.dom.find('.labelsinput').val() });
                }
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.bindlabeldelete();
                that.dom.find('.labelsinput').val('');
                that.event._dispatch('controls.heightchange');
                that.hasinput.tagList = 'yes';
            }
        }
    }, {
        key: 'setid',
        value: function setid(value1, value2) {
            var that = this;
            console.log(value1, value2);
            that.dom.find('.labelitem').dom.forEach(function (val, idx) {
                if (val.find('label').html() == value2) {
                    val.attr('dataid', value1);
                }
            });
        }
    }, {
        key: 'getisinput',
        value: function getisinput() {
            console.log(this.hasinput, 'this,hasinput');
            return this.hasinput;
        }
    }]);

    return textcontrols;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = textcontrols;

/***/ }),

/***/ 766:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(767);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./textcontrols.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./textcontrols.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 767:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".textcontrols {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.textcontrols .inputLine {\n  margin-left: 60px;\n  margin-bottom: 10px;\n}\n.textcontrols .inputLine > span {\n  width: 100px;\n}\n.textcontrols .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 250px;\n  padding-left: 20px;\n}\n.textcontrols .inputLine .texttype {\n  display: inline-block;\n}\n.textcontrols .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.textcontrols .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.textcontrols .textparam {\n  margin-left: 63px;\n  margin-top: 40px;\n}\n.textcontrols .textparam > span {\n  margin-right: 20px;\n}\n.textcontrols .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n  position: relative;\n}\n.textcontrols .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.textcontrols .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.textcontrols .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.textcontrols .labelsarea > span span {\n  width: 22px;\n  height: 22px;\n  text-align: center;\n  background: red;\n  position: relative;\n}\n.textcontrols .labelsarea > span span:hover {\n  color: darkred;\n}\n.textcontrols .labelsarea > span span .icon-guanbi {\n  top: 0px;\n  right: 4px;\n}\n.textcontrols .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.textcontrols .labelsarea .labelul {\n  position: absolute;\n  width: 95%;\n  background: #fff;\n  border-left: 1px solid #e8e8e8;\n  border-right: 1px solid #e8e8e8;\n}\n.textcontrols .labelsarea .labelul .labelli {\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #e8e8e8;\n  cursor: pointer;\n}\n.textcontrols .labelsarea .labelul .labelli:hover {\n  background: #ECF3F4;\n}\n.textcontrols .remarkline {\n  margin-top: 60px;\n}\n.textcontrols .remarkline > span {\n  vertical-align: top;\n}\n.textcontrols .required {\n  left: 400px;\n  top: 8px;\n}\n", ""]);

// exports


/***/ }),

/***/ 768:
/***/ (function(module, exports) {

module.exports = "<div class=\"textarea textcontrols hide\"> <div class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>文本框标题：</span> <input type=text class=\"textname inputBox\" check=empty title=标题 /> </div> <div class=inputLine redlabel=xlk> <label class=redstar>*</label> <span>文本类型：</span> <div class=texttype check=empty></div> </div> <div class=\"inputLine remarkline\"> <span>标签：</span> <div class=labelsarea> <input type=text class=labelsinput /> <ul class=labelul> </ul> </div> <span class=tips>最多可添加10个标签</span> </div> </div> ";

/***/ }),

/***/ 769:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(770);
// var html = require('./tpl.html')

var selectcontrols = function (_Interstellar$moduleB) {
    _inherits(selectcontrols, _Interstellar$moduleB);

    function selectcontrols(app, dom, value, addMode) {
        _classCallCheck(this, selectcontrols);

        var _this = _possibleConstructorReturn(this, (selectcontrols.__proto__ || Object.getPrototypeOf(selectcontrols)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(772);
        _this.name = "selectcontrols";
        return _this;
    }

    _createClass(selectcontrols, [{
        key: 'complete',
        value: function complete() {
            this.bindxlkli();
            this.addevent();
            this.hasinput = {};
            var that = this;
            this.dom.find('.inputBox').on('change', function () {
                that.hasinput[ES.selctorDoc(this).attr('class')] = ES.selctorDoc(this).val();
            });
            console.log(that.nowParam);
            switch (that.nowParam.controlType) {
                case 'radiobox':
                    that.dom.find('.wspan').html('单选框标题');
                    that.dom.find('.selectcontrols').addClass('radioboxarea');
                    break;
                case 'select':
                    that.dom.find('.selectcontrols').addClass('selectarea');
                    break;
            }
        }
    }, {
        key: 'addevent',
        value: function addevent() {
            var that = this;
            that.dom.find('.labelsinput').on('keydown', function (e) {
                var keyCode = e.keyCode;
                if (event.keyCode === 13) {
                    if (ES.selctorDoc(this).val() != '') {
                        that.createlabel(ES.selctorDoc(this).val());
                    }
                }
            });
            that.dom.find('.labelsarea').on('blur', function () {
                if (ES.selctorDoc(this).val() != '') {
                    that.createlabel(ES.selctorDoc(this).val());
                }
            });
            that.dom.find('.labelsarea').on('click', function () {
                // that.dom.find('.labelsinput').focus();
                $('.labelsinput').focus();
            });
            that.dom.find('.labelsinput').on('input', function () {
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.event._dispatch('controls.inputlabel', { val: ES.selctorDoc(this).val() });
            });
            that.dom.find('.check-box').on('click', function () {
                if (ES.selctorDoc(this).hasClass('choose')) {
                    ES.selctorDoc(this).removeClass('choose');
                } else {
                    ES.selctorDoc(this).addClass('choose');
                }
            });
        }
    }, {
        key: 'bindlabeldelete',
        value: function bindlabeldelete() {
            var that = this;
            that.dom.find('.labelitem .icon-guanbi').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
            });
        }
    }, {
        key: 'bindxlkli',
        value: function bindxlkli() {
            var that = this;
            that.dom.find('.icon-tianjia').on('click', function () {
                that.dom.find('.itemarea').append('<li class="item">\n' + '<p class="inputLine" redlabel="inputBox">' + '<label class="redstar">*</label>' + '                    <span class="num">选项<label>' + (that.dom.find('.selectmain .item').dom.length + 1) + '</label></span>\n' + '                    <input type="text" class="item' + (that.dom.find('.selectmain .item').dom.length + 1) + 'value inputBox " check="empty" api="value"/>\n' + '</p>' + '<p class="inputLine" redlabel="inputBox">' + '<label class="redstar">*</label>\n' + '                <span>默认值</span>\n' + '                <input type="text" class="item' + (that.dom.find('.selectmain .item').dom.length + 1) + 'code inputBox " check="empty|num" api="code" reg ="/^[0-9]*$/" error="请输入大于等于0的整数"/>' + '                    <i class="iconfont icon-shanchu"></i>\n' + '</p>' + '                </li>');
                that.dom.find('.icon-tianjia').off('click');
                if (that.dom.find('.item').dom.length > 1 && that.nowParam.type !== 'correct') {
                    that.dom.find('.icon-shanchu').removeClass('hide');
                }
                console.log('aaaaa');
                that.bindxlkli();
                that.event._dispatch('controls.heightchange');
            });
            that.dom.find('.icon-shanchu').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
                if (that.dom.find('.item').dom.length < 2) {
                    that.dom.find('.icon-shanchu').addClass('hide');
                }
                that.dom.find('.item').dom.forEach(function (val, idx) {
                    console.log(ES.selctorDoc(val).dom, 'number');
                    ES.selctorDoc(val).dom.find('.num label').html(idx + 1 + '');
                });
                that.event._dispatch('controls.heightchange');
            });
        }
    }, {
        key: 'checkrequired',
        value: function checkrequired() {
            var that = this;
            that.dom.find('.inputLine').dom.forEach(function (val, idx) {
                val.find('.' + val.attr('redlabel')).removeClass('redborder');
                val.find('.required').remove();
                if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                    console.log(val.attr('redlabel'));
                    val.find('.' + val.attr('redlabel')).addClass('redborder');
                    val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                }
            });
            if (that.dom.find('.redborder').dom) {
                return false;
            } else {
                var result = that.returndata();
                if (result) {
                    return result;
                } else {
                    return false;
                }
            }
        }
    }, {
        key: 'returndata',
        value: function returndata() {
            var that = this;
            var obj = {};
            obj.type = that.nowParam.controlType;
            obj.name = that.dom.find('.xialaname').val();
            obj.parameter = {};
            obj.parameter.isdefault = that.dom.find('.isdefault').hasClass('choose');
            obj.parameter = JSON.stringify(obj.parameter);
            var arr = [];
            if (that.dom.find('.labelsarea .labelitem').dom) {
                that.dom.find('.labelsarea .labelitem').dom.forEach(function (val, idx) {
                    if (val.attr('dataid')) {
                        arr.push(parseInt(val.attr('dataid')));
                    }
                });
            }
            obj.tagIdList = arr;
            obj.data = [];
            var tempStr = ',';
            var tempStr1 = ',';
            var flag = true;
            that.dom.find('.itemarea li').dom.forEach(function (val, idx) {
                console.log(val, 'val');
                if (tempStr.lastIndexOf(',' + val.find('input[api=code]').val() + ',') != -1) {
                    val.find('input[api=code]').addClass('redborder');
                    val.find('input[api=code]').val('');
                    val.find('input[api=code]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                if (tempStr1.lastIndexOf(',' + val.find('input[api=value]').val() + ',') != -1) {
                    val.find('input[api=value]').addClass('redborder');
                    val.find('input[api=value]').val('');
                    val.find('input[api=value]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                tempStr += val.find('input[api=code]').val() + ',';
                tempStr1 += val.find('input[api=value]').val() + ',';
                var obj1 = {};
                console.log(val, val.find('input[api=value]').val(), val.find('input[api=code]').val());
                obj1.text = val.find('input[api=value]').val();
                obj1.code = val.find('input[api=code]').val();
                obj.data.push(obj1);
            });
            obj.data = JSON.stringify(obj.data);
            if (flag) {
                return obj;
            } else {
                return false;
            }
        }
    }, {
        key: 'render',
        value: function render(value) {
            console.log(value);
            var that = this;
            that.dom.find('.xialaname').val(value.name);
            if (JSON.parse(value.parameter).isdefault) {
                that.dom.find('.isdefault').click();
            }
            JSON.parse(value.data).forEach(function (val, idx) {
                if (idx != JSON.parse(value.data).length - 1) {
                    that.dom.find('.icon-tianjia').click();
                }
                that.dom.find('.item' + (idx * 1 + 1) + 'value').val(val.text);
                that.dom.find('.item' + (idx * 1 + 1) + 'code').val(val.code);
            });
            value.tagList.forEach(function (val, idx) {
                var label = '<span class="labelitem" dataid="' + val.id + '">\n' + '                            <label>' + val.text + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
            });
            that.bindlabeldelete();
        }
    }, {
        key: 'labelul',
        value: function labelul(value) {
            var that = this;
            var html = '';
            if (value) {
                value.forEach(function (val, idx) {
                    html += '<li class="labelli" dataid="' + val.id + '">' + val.text + '</li>';
                });
                that.dom.find('.labelul').html(html);
                that.dom.find('.labelli').on('click', function () {
                    ES.selctorDoc(this).parent().html('');
                    that.createlabel(ES.selctorDoc(this).html(), ES.selctorDoc(this).attr('dataid'));
                });
            } else {
                that.dom.find('.labelul').html('');
            }
        }
    }, {
        key: 'createlabel',
        value: function createlabel(value, value2) {
            var that = this;
            that.hasinput.tagList = '';
            if (that.dom.find('.mask').dom) that.dom.find('.mask').addClass('hide');
            that.dom.find('.labelul').html('');
            that.dom.find('.tips').css({ 'color': '#666' });
            if (that.dom.find('.labelitem').dom && that.dom.find('.labelitem').dom.length >= 10) {
                that.dom.find('.tips').css({ 'color': 'red' });
                that.dom.find('.labelsinput').val('');
            } else {
                var label = '<span class="labelitem" dataid="' + value2 + '">\n' + '                            <label>' + value + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
                if (!value2) {
                    that.event._dispatch('controls.createlabel', { val: that.dom.find('.labelsinput').val() });
                }
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.bindlabeldelete();
                that.dom.find('.labelsinput').val('');
                that.event._dispatch('controls.heightchange');
                that.hasinput.tagList = 'yes';
            }
        }
    }, {
        key: 'setid',
        value: function setid(value1, value2) {
            var that = this;
            that.dom.find('.labelitem').dom.forEach(function (val, idx) {
                if (val.find('label').html() == value2) {
                    val.attr('dataid', value1);
                }
            });
        }
    }, {
        key: 'getisinput',
        value: function getisinput() {
            return this.hasinput;
        }
    }]);

    return selectcontrols;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = selectcontrols;

/***/ }),

/***/ 770:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(771);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./selectcontrols.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./selectcontrols.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 771:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".selectcontrols {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.selectcontrols .inputLine {\n  margin-left: 60px;\n  margin-bottom: 20px;\n}\n.selectcontrols .inputLine > span {\n  width: 50px;\n  white-space: nowrap;\n}\n.selectcontrols .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 100px;\n  padding-left: 20px;\n  margin-right: 10px;\n}\n.selectcontrols .inputLine .texttype {\n  display: inline-block;\n}\n.selectcontrols .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.selectcontrols .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.selectcontrols .inputLine .wspan {\n  width: 100px;\n}\n.selectcontrols .inputLine .winput {\n  width: 250px;\n}\n.selectcontrols .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n  position: relative;\n}\n.selectcontrols .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.selectcontrols .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.selectcontrols .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.selectcontrols .labelsarea > span span {\n  width: 22px;\n  height: 22px;\n  text-align: center;\n  background: red;\n  position: relative;\n}\n.selectcontrols .labelsarea > span span:hover {\n  color: darkred;\n}\n.selectcontrols .labelsarea > span span .icon-guanbi {\n  top: 0px;\n  right: 4px;\n}\n.selectcontrols .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.selectcontrols .labelsarea .labelul {\n  position: absolute;\n  width: 95%;\n  background: #fff;\n  border-left: 1px solid #e8e8e8;\n  border-right: 1px solid #e8e8e8;\n}\n.selectcontrols .labelsarea .labelul .labelli {\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #e8e8e8;\n  cursor: pointer;\n}\n.selectcontrols .labelsarea .labelul .labelli:hover {\n  background: #ECF3F4;\n}\n.selectcontrols .remarkline {\n  margin-top: 60px;\n}\n.selectcontrols .remarkline > span {\n  vertical-align: top;\n}\n.selectcontrols .selectparam {\n  margin-left: 63px;\n  margin-top: 40px;\n}\n.selectcontrols .selectparam > span {\n  margin-right: 20px;\n}\n.selectcontrols {\n  position: relative;\n}\n.selectcontrols .icon-tianjia {\n  color: #4c9fa9;\n  position: absolute;\n  left: 560px;\n  bottom: 30px;\n  z-index: 1000;\n  cursor: pointer;\n}\n.selectcontrols .icon-shanchu {\n  color: red;\n  cursor: pointer;\n  margin-left: 100px;\n}\n.selectcontrols .itemarea {\n  position: relative;\n}\n.selectcontrols .itemarea .item > p {\n  display: inline-block;\n}\n.selectcontrols .itemarea .item > p:nth-child(2n+1) {\n  margin-left: 80px;\n}\n.selectcontrols .itemarea .item > p:nth-child(2n) {\n  margin-left: 20px;\n}\n.selectcontrols .required {\n  left: 400px;\n  top: 8px;\n}\n.selectcontrols .item .required {\n  left: 65px;\n  top: 36px;\n}\n", ""]);

// exports


/***/ }),

/***/ 772:
/***/ (function(module, exports) {

module.exports = "<div class=\"selectcontrols hide\"> <div class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span class=wspan>下拉菜单标题：</span> <input type=text class=\"xialaname inputBox winput\" check=empty /> </div> <div class=selectmain> <ul class=itemarea> <i class=\"iconfont icon-tianjia\"></i> <li class=item> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>选项1</span> <input type=text class=\"item1value inputBox\" check=empty api=value /> </p> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>默认值</span> <input type=text class=\"item1code inputBox\" check=empty|num api=code reg=/^[0-9]*$/ error=请输入大于等于0的整数 /> <i class=\"iconfont icon-shanchu hide\"></i> </p> </li> </ul> <div class=selectparam> <i class=\"isdefault check-box\"></i> <span>是否要设置默认值</span> <span>提示：设置的默认值是选项1</span> </div> <div class=\"inputLine remarkline\"> <span>标签：</span> <div class=labelsarea> <input type=text class=labelsinput /> <ul class=labelul> </ul> </div> <span class=tips>最多可添加10个标签</span> </div> </div> </div> ";

/***/ }),

/***/ 773:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(774);
// var html = require('./tpl.html')

var checkboxcontrols = function (_Interstellar$moduleB) {
    _inherits(checkboxcontrols, _Interstellar$moduleB);

    function checkboxcontrols(app, dom, value, addMode) {
        _classCallCheck(this, checkboxcontrols);

        var _this = _possibleConstructorReturn(this, (checkboxcontrols.__proto__ || Object.getPrototypeOf(checkboxcontrols)).call(this, app, dom, value, addMode));

        _this.html = __webpack_require__(776);
        _this.name = "checkboxcontrols";
        return _this;
    }

    _createClass(checkboxcontrols, [{
        key: 'complete',
        value: function complete() {
            var that = this;
            this.bindcheckboxli();
            this.addevent();
            this.hasinput = {};
            console.log(this.nowParam, 'fffff');
            this.dom.find('.inputBox').on('change', function () {
                that.hasinput[ES.selctorDoc(this).attr('class')] = ES.selctorDoc(this).val();
            });
        }
    }, {
        key: 'addevent',
        value: function addevent() {
            var that = this;
            that.dom.find('.labelsinput').on('keydown', function (e) {
                var keyCode = e.keyCode;
                if (event.keyCode === 13) {
                    if (ES.selctorDoc(this).val() != '') {
                        that.createlabel(ES.selctorDoc(this).val());
                    }
                }
            });
            that.dom.find('.labelsarea').on('blur', function () {
                if (ES.selctorDoc(this).val() != '') {
                    that.createlabel(ES.selctorDoc(this).val());
                }
            });
            that.dom.find('.labelsarea').on('click', function () {
                // that.dom.find('.labelsinput').focus();
                $('.labelsinput').focus();
            });
            that.dom.find('.labelsinput').on('input', function () {
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.event._dispatch('controls.inputlabel', { val: ES.selctorDoc(this).val() });
            });
            that.dom.find('.check-box').on('click', function () {
                if (ES.selctorDoc(this).hasClass('choose')) {
                    ES.selctorDoc(this).removeClass('choose');
                } else {
                    ES.selctorDoc(this).addClass('choose');
                }
            });
        }
    }, {
        key: 'createlabel',
        value: function createlabel(value, value2) {
            var that = this;
            that.hasinput.tagList = '';
            if (that.dom.find('.mask').dom) that.dom.find('.mask').addClass('hide');
            that.dom.find('.labelul').html('');
            that.dom.find('.tips').css({ 'color': '#666' });
            if (that.dom.find('.labelitem').dom && that.dom.find('.labelitem').dom.length >= 10) {
                that.dom.find('.tips').css({ 'color': 'red' });
                that.dom.find('.labelsinput').val('');
            } else {
                var label = '<span class="labelitem" dataid="' + value2 + '">\n' + '                            <label>' + value + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
                if (!value2) {
                    that.event._dispatch('controls.createlabel', { val: that.dom.find('.labelsinput').val() });
                }
                that.dom.find('.labelitem .icon-guanbi').off('click');
                that.bindlabeldelete();
                that.dom.find('.labelsinput').val('');
                that.event._dispatch('controls.heightchange');
                that.hasinput.tagList = 'yes';
            }
        }
    }, {
        key: 'bindlabeldelete',
        value: function bindlabeldelete() {
            var that = this;
            that.dom.find('.labelitem .icon-guanbi').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
            });
        }
    }, {
        key: 'bindcheckboxli',
        value: function bindcheckboxli() {
            var that = this;
            that.dom.find('.icon-tianjia').on('click', function () {
                that.dom.find('.itemarea').append('<li class="item">\n' + '<p class="inputLine" redlabel="inputBox">' + '                    <label class="redstar">*</label>' + '                    <span class="num">选项<label>' + (that.dom.find('.checkboxmain .item').dom.length + 1) + '</label></span>\n' + '                    <input type="text" class="item' + (that.dom.find('.checkboxmain .item').dom.length + 1) + 'value inputBox" redlabel="inputBox" check="empty" api="value"/>\n' + '</p>' + '<p class="inputLine" redlabel="inputBox">' + '<label class="redstar">*</label>\n' + '                <span>默认值</span>\n' + '                <input type="text" class="item' + (that.dom.find('.checkboxmain .item').dom.length + 1) + 'code inputBox" check="empty|num" api="code" reg ="/^[0-9]*$/" error="请输入大于等于0的整数"/>' + '                    <i class="iconfont icon-shanchu"></i>\n' + '                </p>' + '</li>');
                that.dom.find('.icon-tianjia').off('click');
                that.dom.find('.itemarea .check-box').off('click');
                that.dom.find('.itemarea .check-box').on('click', function () {
                    if (ES.selctorDoc(this).hasClass('choose')) {
                        ES.selctorDoc(this).removeClass('choose');
                    } else {
                        ES.selctorDoc(this).addClass('choose');
                    }
                });
                if (that.dom.find('.item').dom.length > 1 && that.nowParam.type !== 'correct') {
                    that.dom.find('.icon-shanchu').removeClass('hide');
                }
                that.bindcheckboxli();
                that.event._dispatch('controls.heightchange');
            });
            that.dom.find('.icon-shanchu').on('click', function () {
                ES.selctorDoc(this).parent().parent().remove();
                if (that.dom.find('.item').dom.length < 2) {
                    that.dom.find('.icon-shanchu').addClass('hide');
                }
                that.dom.find('.item').dom.forEach(function (val, idx) {
                    console.log(ES.selctorDoc(val).dom, 'number');
                    ES.selctorDoc(val).dom.find('.num label').html(idx + 1 + '');
                });
                that.event._dispatch('controls.heightchange');
            });
        }
    }, {
        key: 'checkrequired',
        value: function checkrequired() {
            var that = this;
            console.log(that.dom.find('.inputLine').dom.length);
            that.dom.find('.inputLine').dom.forEach(function (val, idx) {
                val.find('.' + val.attr('redlabel')).removeClass('redborder');
                val.find('.required').remove();
                console.log(Tool.checkForm(ES.selctorDoc(val).dom, 'red'));
                if (Tool.checkForm(ES.selctorDoc(val).dom, 'red') !== '') {
                    val.find('.' + val.attr('redlabel')).addClass('redborder');
                    val.find('.' + val.attr('redlabel')).after('<span class="required">' + Tool.checkForm(ES.selctorDoc(val).dom, 'red') + '</span>');
                }
            });
            if (that.dom.find('.redborder').dom) {
                return false;
            } else {
                var result = that.returndata();
                if (result) {
                    return result;
                } else {
                    return false;
                }
            }
        }
    }, {
        key: 'returndata',
        value: function returndata() {
            var that = this;
            var obj = {};
            obj.type = 'checkbox';
            obj.name = that.dom.find('.checkboxname').val();
            var arr = [];
            if (that.dom.find('.labelsarea .labelitem').dom) {
                that.dom.find('.labelsarea .labelitem').dom.forEach(function (val, idx) {
                    if (val.attr('dataid')) {
                        arr.push(parseInt(val.attr('dataid')));
                    }
                });
            }
            obj.tagIdList = arr;
            obj.data = [];
            obj.parameter = {};
            obj.parameter.hasnull = that.dom.find('.nullarea i').hasClass('choose');
            obj.parameter = JSON.stringify(obj.parameter);
            var tempStr = ',';
            var tempStr1 = ',';
            var flag = true;
            that.dom.find('.itemarea li').dom.forEach(function (val, idx) {
                if (tempStr.lastIndexOf(',' + val.find('input[api=code]').val() + ',') != -1) {
                    val.find('input[api=code]').addClass('redborder');
                    val.find('input[api=code]').val('');
                    val.find('input[api=code]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                if (tempStr1.lastIndexOf(',' + val.find('input[api=value]').val() + ',') != -1) {
                    val.find('input[api=value]').addClass('redborder');
                    val.find('input[api=value]').val('');
                    val.find('input[api=value]').after('<span class="required">重复</span>');
                    flag = false;
                    return;
                }
                tempStr += val.find('input[api=code]').val() + ',';
                tempStr1 += val.find('input[api=value]').val() + ',';
                var obj1 = {};
                obj1.text = val.find('input[api=value]').val();
                obj1.code = val.find('input[api=code]').val();
                obj.data.push(obj1);
            });
            obj.data = JSON.stringify(obj.data);
            if (flag) {
                return obj;
            } else {
                return false;
            }
        }
    }, {
        key: 'render',
        value: function render(value) {
            var that = this;
            that.dom.find('.checkboxname').val(value.name);
            JSON.parse(value.data).forEach(function (val, idx) {
                if (idx != JSON.parse(value.data).length - 1) {
                    that.dom.find('.icon-tianjia').click();
                }
                that.dom.find('.item' + (idx * 1 + 1) + 'value').val(val.text);
                that.dom.find('.item' + (idx * 1 + 1) + 'code').val(val.code);
            });
            if (JSON.parse(value.parameter).hasnull) {
                that.dom.find('.nullarea i').addClass('choose');
            }
            value.tagList.forEach(function (val, idx) {
                var label = '<span class="labelitem" dataid="' + val.id + '">\n' + '                            <label>' + val.text + '</label>\n' + '                            <span><i class="iconfont icon-guanbi"></i></span>\n' + '                        </span>';
                that.dom.find('.labelsinput').before(label);
            });
            that.bindlabeldelete();
        }
    }, {
        key: 'labelul',
        value: function labelul(value) {
            var that = this;
            var html = '';
            if (value) {
                value.forEach(function (val, idx) {
                    html += '<li class="labelli" dataid="' + val.id + '">' + val.text + '</li>';
                });
                that.dom.find('.labelul').html(html);
                that.dom.find('.labelli').on('click', function () {
                    ES.selctorDoc(this).parent().html('');
                    that.createlabel(ES.selctorDoc(this).html(), ES.selctorDoc(this).attr('dataid'));
                });
            } else {
                that.dom.find('.labelul').html('');
            }
        }
    }, {
        key: 'setid',
        value: function setid(value1, value2) {
            var that = this;
            that.dom.find('.labelitem').dom.forEach(function (val, idx) {
                if (val.find('label').html() == value2) {
                    val.attr('dataid', value1);
                }
            });
        }
    }, {
        key: 'getisinput',
        value: function getisinput() {
            return this.hasinput;
        }
    }]);

    return checkboxcontrols;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = checkboxcontrols;

/***/ }),

/***/ 774:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(775);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./checkboxcontrols.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./checkboxcontrols.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 775:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".checkboxarea {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.checkboxarea .inputLine {\n  margin-left: 60px;\n  margin-bottom: 20px;\n}\n.checkboxarea .inputLine > span {\n  width: 50px;\n  white-space: nowrap;\n}\n.checkboxarea .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 100px;\n  padding-left: 20px;\n  margin-right: 10px;\n}\n.checkboxarea .inputLine .texttype {\n  display: inline-block;\n}\n.checkboxarea .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.checkboxarea .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.checkboxarea .inputLine .wspan {\n  width: 100px;\n}\n.checkboxarea .inputLine .winput {\n  width: 250px;\n}\n.checkboxarea .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n  position: relative;\n}\n.checkboxarea .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.checkboxarea .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.checkboxarea .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.checkboxarea .labelsarea > span span {\n  width: 22px;\n  height: 22px;\n  text-align: center;\n  background: red;\n  position: relative;\n}\n.checkboxarea .labelsarea > span span:hover {\n  color: darkred;\n}\n.checkboxarea .labelsarea > span span .icon-guanbi {\n  top: 0px;\n  right: 4px;\n}\n.checkboxarea .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.checkboxarea .labelsarea .labelul {\n  position: absolute;\n  width: 95%;\n  background: #fff;\n  border-left: 1px solid #e8e8e8;\n  border-right: 1px solid #e8e8e8;\n}\n.checkboxarea .labelsarea .labelul .labelli {\n  height: 30px;\n  line-height: 30px;\n  border-bottom: 1px solid #e8e8e8;\n  cursor: pointer;\n}\n.checkboxarea .labelsarea .labelul .labelli:hover {\n  background: #ECF3F4;\n}\n.checkboxarea .remarkline {\n  margin-top: 60px;\n}\n.checkboxarea .remarkline > span {\n  vertical-align: top;\n}\n.checkboxparam {\n  margin-left: 63px;\n  margin-top: 40px;\n}\n.checkboxparam > span {\n  margin-right: 20px;\n}\n.checkboxarea {\n  position: relative;\n}\n.checkboxarea .icon-tianjia {\n  color: #4c9fa9;\n  position: absolute;\n  left: 560px;\n  bottom: 30px;\n  cursor: pointer;\n  z-index: 1000;\n}\n.checkboxarea .icon-shanchu {\n  color: red;\n  cursor: pointer;\n  margin-left: 100px;\n}\n.checkboxarea .itemarea {\n  position: relative;\n}\n.checkboxarea .itemarea .item > p {\n  display: inline-block;\n}\n.checkboxarea .itemarea .item > p:nth-child(2n+1) {\n  margin-left: 80px;\n}\n.checkboxarea .itemarea .item > p:nth-child(2n) {\n  margin-left: 20px;\n}\n.checkboxarea .ishuchi {\n  display: inline-block;\n  margin-left: 80px;\n}\n.checkboxarea .nullarea {\n  margin-left: 60px;\n  margin-top: 30px;\n}\n.checkboxarea .required {\n  left: 400px;\n  top: 8px;\n}\n.checkboxarea .item .required {\n  left: 65px;\n  top: 36px;\n}\n", ""]);

// exports


/***/ }),

/***/ 776:
/***/ (function(module, exports) {

module.exports = "<div class=\"checkboxarea checkboxcontrols hide\"> <div class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span class=wspan>复选组标题：</span> <input type=text class=\"checkboxname inputBox winput\" check=empty /> </div> <div class=checkboxmain> <ul class=itemarea> <i class=\"iconfont icon-tianjia\"></i> <li class=item> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>选项1</span> <input type=text class=\"item1value inputBox\" check=empty api=value /> </p> <p class=inputLine redlabel=inputBox> <label class=redstar>*</label> <span>默认值</span> <input type=text class=\"item1code inputBox\" check=empty|num api=code reg=/^[0-9]*$/ error=请输入大于等于0的整数 /> <i class=\"iconfont icon-shanchu hide\"></i> </p> </li> </ul> <div class=nullarea> <i class=\"check-box mutex\"></i> <span>是否设置“无”选项&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此选项为互斥效果</span> </div> <div class=\"inputLine remarkline\"> <span>标签：</span> <div class=labelsarea> <input type=text class=labelsinput /> <ul class=labelul> </ul> </div> <span class=tips>最多可添加10个标签</span> </div> </div> </div>";

/***/ }),

/***/ 902:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".createcomponent {\n  margin: 20px;\n  background: #fff;\n  height: 100%;\n  font-size: 14px;\n  overflow: hidden;\n  position: relative;\n}\n.createcomponent > .scroll {\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  padding-bottom: 50px;\n}\n.createcomponent .bigtitle {\n  font-size: 18px;\n  margin: 30px;\n}\n.createcomponent .componentmain {\n  margin-left: 60px;\n  font-size: 16px;\n}\n.createcomponent .componentmain .component {\n  cursor: pointer;\n  display: inline-block;\n  margin: 30px 50px;\n}\n.createcomponent .componentmain .component i {\n  color: #4c9fa9;\n  font-size: 16px;\n}\n.createcomponent .details {\n  margin-bottom: 50px;\n  margin-left: 60px;\n}\n.createcomponent .details .inputLine {\n  margin-left: 60px;\n  margin-bottom: 10px;\n}\n.createcomponent .details .inputLine > span {\n  width: 100px;\n}\n.createcomponent .details .inputLine > input {\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  height: 35px;\n  line-height: 35px;\n  width: 250px;\n  padding-left: 20px;\n}\n.createcomponent .details .inputLine .texttype {\n  display: inline-block;\n}\n.createcomponent .details .inputLine .texttype .xlk {\n  height: 35px;\n  line-height: 35px;\n  width: 270px;\n}\n.createcomponent .details .inputLine .tips {\n  width: 150px;\n  margin-left: 20px;\n}\n.createcomponent .details .labelsarea {\n  width: 400px;\n  min-height: 100px;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  display: inline-block;\n  padding: 10px;\n}\n.createcomponent .details .labelsarea > span {\n  height: 22px;\n  line-height: 22px;\n  border: 1px solid red;\n  border-radius: 4px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.createcomponent .details .labelsarea > span label {\n  padding: 0 5px 0 10px;\n  font-size: 15px;\n  vertical-align: top;\n}\n.createcomponent .details .labelsarea > span i {\n  color: #fff;\n  font-size: 14px;\n  cursor: pointer;\n}\n.createcomponent .details .labelsarea > span span {\n  width: 22px;\n  text-align: center;\n  background: red;\n}\n.createcomponent .details .labelsarea > span span:hover {\n  color: darkred;\n}\n.createcomponent .details .labelsarea > input {\n  border: none;\n  margin-top: 10px;\n}\n.createcomponent .details .remarkline {\n  margin-top: 60px;\n}\n.createcomponent .details .remarkline > span {\n  vertical-align: top;\n}\n.createcomponent .btnarea {\n  height: 40px;\n  bottom: 30px;\n  text-align: center;\n}\n.createcomponent .btnarea .biaozhubtn {\n  height: 40px;\n  width: 120px;\n  line-height: 40px;\n  margin-right: 30px;\n}\n.createcomponent .btnarea .save {\n  background: #4c9fa9;\n  color: #fff;\n}\n.createcomponent .btnarea .cancel {\n  border: 1px solid #4c9fa9;\n  color: #4c9fa9;\n}\n.createcomponent .mask {\n  position: fixed;\n  width: 2000px;\n  height: 2000px;\n  top: 0;\n  left: 0;\n  z-index: 10;\n}\n.createcomponent .labelul {\n  z-index: 11;\n}\n.createcomponent input {\n  background: #fff;\n}\n", ""]);

// exports


/***/ })

});
//# sourceMappingURL=547e6be36981e45f3e73.26.min.js.map