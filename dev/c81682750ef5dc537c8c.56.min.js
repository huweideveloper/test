webpackJsonp([56],{

/***/ 748:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(752);

var list = function (_Interstellar$moduleB) {
  _inherits(list, _Interstellar$moduleB);

  function list(app, dom, value, addMode) {
    _classCallCheck(this, list);

    var _this = _possibleConstructorReturn(this, (list.__proto__ || Object.getPrototypeOf(list)).call(this, app, dom, value, addMode));

    _this.name = "list";
    _this.html = __webpack_require__(754);
    return _this;
  }

  _createClass(list, [{
    key: "complete",
    value: function complete() {
      var that = this;
      this.choose = true;
      this.data = [];
      this.jg = [];
      this.icon = [];
      this.type = '';
      this.choose = this.nowParam.chose;
      this.choosew = this.nowParam.chosew;
      this.tablewidth = this.nowParam.tablewidth;
      this.minwidth = this.nowParam.minwidth;
      this.onofftype = this.nowParam.onofftype;
      this.jg = this.nowParam.jg;
      this.icon = this.nowParam.icon;
      this.type = this.nowParam.type;
      this.iconArr = this.nowParam.iconArr;
      this.mainId = this.nowParam.mainId || null;
      this.selectarr = [];
      this.finalwidth = this.tablewidth > this.minwidth ? this.tablewidth : this.minwidth;
      this.drop = __webpack_require__(638);
      var dataLH = this.dom.find('.list1').box().clientHeight - this.dom.find('.list-header').box().clientHeight * 2;
      this.dom.find('.dataNone').css({ 'line-height': dataLH });
      if (this.type === 'center') {
        that.initView(this.icon);
      }
      console.log(that.finalwidth, 'finalwidth');
    }
  }, {
    key: "initView",
    value: function initView(value) {
      var that = this;
      var iconH = '';
      for (var i in value) {
        if (value[i].w) {
          if (value[i].first) {
            if (typeof value[i].w != 'string') {

              iconH += '<li style="width:' + value[i].w + 'px;text-align:left;left:' + value[i].left + 'px;"><span data-i18n=' + value[i].code + ' style="margin-left:2px">' + value[i].name + '</li>';
            } else {
              iconH += '<li style="width:' + parseFloat(value[i].w) * that.finalwidth / 100 + 'px;text-align:left;margin-left:' + value[i].n + 'px;left:' + value[i].left + 'px;"><span data-i18n=' + value[i].code + ' style="margin-left:2px">' + value[i].name + '</li>';
            }
          } else {
            if (typeof value[i].w != 'string') {
              iconH += '<li style="width:' + value[i].w + 'px;text-align:left;padding-left:' + value[i].n + 'px;left:' + value[i].left + 'px;">' + value[i].name + '</li>';
            } else {
              iconH += '<li style="width:' + parseFloat(value[i].w) * that.finalwidth / 100 + 'px;text-align:left;padding-left:' + value[i].n + 'px;left:' + value[i].left + 'px;">' + value[i].name + '</li>';
            }
          }
        } else {
          iconH += '<li>' + value[i].name + '</li>';
        }
      }
      this.dom.find('.list-header ul').html(iconH);
      this.app.languageMode.setTranslate(this.dom.find('[data-i18n]').dom, this.app.language, this.name);
      var sort = '';
      var order = '';
      if (this.iconArr) {
        that.iconArr.forEach(function (idx, val) {
          that.dom.find('.list-header ul li').eq(val).on('mouseover', function () {
            that.resetIcon(ES.selctorDoc(this).find('i'), 'mouseover');
          });
          that.dom.find('.list-header ul li').eq(val).on('mouseout', function () {
            that.resetIcon(ES.selctorDoc(this).find('i'), 'mouseout');
          });
        });
        that.dom.find('.list-header li').on('click', function () {
          if (ES.selctorDoc(this).find('i').dom.length > 0) {
            that.dom.find('.list-header li i').removeClass('select');
            ES.selctorDoc(this).find('i').addClass('select');
            var nowid = ES.selctorDoc(this).find('i').attr('nowid');
            //that.dom.find('.list-header i').css({"background-image":"url(/images/order/no.png)"});
            that.dom.find('.list-header i').attr('nowid', '0');
            that.dom.find('.list-header i').parent('span').removeClass('arrow_reverse');
            ES.selctorDoc(this).find('i').attr('nowid', nowid);
            sort = ES.selctorDoc(this).find('i').attr('name');
            if (ES.selctorDoc(this).find('i').attr('nowid') === "0") {
              ES.selctorDoc(this).find('i').attr('nowid', "1");
              ES.selctorDoc(this).find('i').parent('span').addClass('arrow_reverse');
              //ES.selctorDoc(this).find('i').css({"background-image": "url(/images/order/up.png)"});
              //DESC  ASC
              order = 1;
            } else if (ES.selctorDoc(this).find('i').attr('nowid') == '1') {
              ES.selctorDoc(this).find('i').attr('nowid', '0');
              // ES.selctorDoc(this).find('i').css({"background-image":"url(/images/order/down.png)"});
              ES.selctorDoc(this).find('i').parent('span').removeClass('arrow_reverse');
              order = 0;
            }
            that.event._dispatch('list.paixu', { sort: sort, order: order });
            //console.log('-=-=', sort, order)
          }
        });
      }
      if (this.choose == 'all') {
        that.dom.find('.list-header ul').prepend('<li style="width:' + this.choosew.w + ';"><p><span class="check-box" style="margin-left: ' + this.choosew.ml + '"></span></p></li>');
        that.dom.find('.list-header .check-box').on('click', function () {
          var idlist = [];
          that.data.forEach(function (v) {
            if (v.formComponentId) {
              idlist.push(v.formComponentId);
            } else {
              idlist.push(v.id);
            }
          });
          that.dom.find('.list-content .check-box').removeClass('choose');
          if (ES.selctorDoc(this).hasClass('choose')) {
            that.event._dispatch('list.allcheck', { id: idlist, data: that.data, type: 'del' });
            ES.selctorDoc(this).removeClass('choose');
          } else {
            that.event._dispatch('list.allcheck', { id: idlist, data: that.data, type: 'add' });
            ES.selctorDoc(this).addClass('choose');
            that.dom.find('.list-content .check-box').addClass('choose');
          }
        });
      }
    }
  }, {
    key: "setData",
    value: function setData(value) {
      console.log(value, '我是弹框的value');
      if (!this.dom.find('.dataNone').hasClass('hide')) {
        this.dom.find('.dataNone').addClass('hide');
        this.dom.find('.list-content').removeClass('hide');
      }
      this.dom.find('.load').addClass('hide');
      this.headerfirstPadding = true;
      this.data = value;
      this.refreshList();
    }
  }, {
    key: "noData",
    value: function noData(value) {
      this.dom.find('.dataNone').removeClass('hide');
      this.dom.find('.list-content').addClass('hide');
      if (value) {
        this.dom.find('.dataNone').html(value);
      }
    }
  }, {
    key: "resetIcon",
    value: function resetIcon(dom, type) {
      if (type == 'mouseover') {
        switch (dom.attr('nowid')) {
          case '0':
            dom.css("background-image", "url(/images/order/noHover.png)");
            break;
          case '1':
            dom.css("background-image", "url(/images/order/upHover.png)");
            break;
          case '2':
            dom.css("background-image", "url(/images/order/downHover.png)");
            break;
        }
      } else {
        switch (dom.attr('nowid')) {
          case '0':
            dom.css("background-image", "url(/images/order/no.png)");
            break;
          case '1':
            dom.css("background-image", "url(/images/order/up.png)");
            break;
          case '2':
            dom.css("background-image", "url(/images/order/down.png)");
            break;
        }
      }
    }
  }, {
    key: "loadList",
    value: function loadList() {
      var that = this;
      var con = '';
      var id = '';
      //console.log(this.data)
      if (this.data === undefined) {
        return;
      }
      for (var i = 0; i < this.data.length; i++) {
        var dataId = that.mainId ? that.data[i][that.mainId] : that.data[i].id;
        con += "<div><ul positionId='" + i + "' nowId='" + dataId + "' class='ul'>";
        //最前面的checkbox
        if (that.choose == 'all') {
          if (that.data[i].choosed) {
            con += "<li style='width:" + that.choosew.w + ";text-overflow: ellipsis;overflow: hidden;text-align: left' nowId='" + dataId + "'><p><span class='check-box choose' style='margin-left: " + that.choosew.ml + "'></span></p></li>";
          } else {
            con += "<li style='width:" + that.choosew.w + ";text-overflow: ellipsis;overflow: hidden;text-align: left' nowId='" + dataId + "'><p><span class='check-box' style='margin-left: " + that.choosew.ml + "'></span></p></li>";
          }
        }
        //that.data[i] 每个字段前面的名称如 'id';
        //that.icon 放数据的数组，里面是obj
        for (var j in that.icon) {
          var width = '';
          var width1 = '';
          var margin = '';
          //if (that.icon[j].w) {
          if (that.icon[j].style) {
            width = that.icon[j].style;
          } else {

            if (typeof that.icon[j].ww != 'string') {
              width = 'style="width:' + that.icon[j].ww + 'px;text-align:left;padding-left:' + that.icon[j].n + 'px"';
              width1 = 'style="text-align:left;text-overflow: ellipsis;overflow: hidden;white-space: nowrap;width:' + (that.icon[j].w - 20) + 'px;"';
            } else {
              width = 'style="width:' + parseFloat(that.icon[j].ww) * that.finalwidth / 100 + 'px;text-align:left;padding-left:' + that.icon[j].n + 'px"';
              width1 = 'style="text-align:left"';
            }
          }
          switch (that.icon[j].type) {
            case 'text':
              if (that.data[i][j] != '' || that.data[i][j] == 0) {
                con += "<li  class='list0'" + width + " ><p class='overhide' title='" + that.data[i][j] + "' width1='" + parseFloat(that.icon[j].ww) * that.finalwidth / 100 + "'px>" + that.data[i][j] + "</p>";
              } else {
                con += "<li  " + width + ">" + '  ' + "</li>";
              }
              break;
            case 'link':
              if (that.data[i][j] != '' || that.data[i][j] == 0) {
                con += "<li  class='listlink'" + width + " ><p class='overhide' title='" + that.data[i][j] + "' width1='" + parseFloat(that.icon[j].ww) * that.finalwidth / 100 + "'px>" + that.data[i][j] + "</p>";
              } else {
                con += "<li  " + width + ">" + '  ' + "</li>";
              }
              break;
            case 'select':
              con += "<li  " + width + "><p class='lbxlk hide no" + dataId + "' nowid='" + dataId + "' data='" + that.data[i][j] + "'></p></li>";
              break;
            case 'onoff':
              console.log(that.data[i][j], that.data[i][j] == true, that.onofftype);
              if (that.data[i][j] == true) {
                con += "<li class='switch on'" + width + "><span style='width:" + (that.icon[j].w - 30) + "px;margin-left:10px;text-overflow: ellipsis;overflow: hidden;white-space: nowrap;'>&nbsp;" + that.onofftype[1] + "<i></i></span></li>";
              } else {
                con += "<li class='switch off'" + width + "><span style='width:" + (that.icon[j].w - 30) + "px;margin-left:10px;text-overflow: ellipsis;overflow: hidden;white-space: nowrap;'>" + that.onofftype[0] + "&nbsp;<i></i></span></li>";
              }
              break;
            case 'onoff1':
              var styr = that.data[i][j] === 'open' ? 'check' : '';
              if (that.type != undefined) {
                con += "<li class='click-enable choose_onoff' " + width + " nowId='" + dataId + "'><span style='position: absolute;top: 35px;'><label class='tgl-btn " + styr + "' for='cb1-1-0'></label></span></li>";
              } else {
                con += "<li class='click-enable choose_onoff' " + width + " nowId='" + dataId + "'><span style='position: absolute;top: 25px;'><label class='tgl-btn " + styr + "' for='cb1-1-0'></label></span></li>";
              }
              break;
            case 'action':
              var tempH = '<li class="tableList" ' + width + 'nowId="' + dataId + '">';
              for (var w in that.data[i][j]) {
                var title1 = w;
                if (w == 'config') {
                  tempH += '<a class="iconfont icon-caozuo config"  title="" ></a><ul class="actionul hide">';
                  that.data[i][j][w].content.forEach(function (val, idx) {
                    tempH += '<li class="' + val.key + '">' + val.text + '</li>';
                  });
                  tempH += '</ul>';
                } else {
                  var titles;
                  if (that.data[i][j][w].titleText) {
                    titles = that.data[i][j][w].titleText;
                  } else {
                    titles = title1;
                  }
                  if (that.data[i][j][w].content) {
                    tempH += '<div class="content ' + w + '" style="display:' + that.data[i][j][w].dis + '" title="' + that.data[i][j][w].content + '"link="' + that.data[i][j][w].link + '" classname="' + w + '">' + that.data[i][j][w].content + '</div>';
                  } else {
                    tempH += '<a class="icon iconfont icon-' + w + '" style="display:' + that.data[i][j][w].dis + '" title="' + titles + '"link="' + that.data[i][j][w].link + '"classname="' + w + '"></a>';
                  }
                }
                // console.log(that.data[i]);
              }
              tempH += '</li>';
              con += tempH;

              break;
          }
        }
        con += '</ul></div>';
      }
      return con;
    }
  }, {
    key: "refreshList",
    value: function refreshList() {
      var that = this;
      if (this.type === 'center') {
        that.dom.find('.list-content').html(that.loadList());
        that.addButton();
        that.resize();
      }
    }
  }, {
    key: "addButton",
    value: function addButton() {
      var that = this;
      if (that.dom.find('.lbxlk').dom) {
        that.dom.find('.lbxlk').dom.forEach(function (val, idx) {
          that.selectarr[idx] = that.app.loadModule(that.drop, val, {
            className: 'listxlk',
            firstSelect: {
              val: '',
              idx: ''
            },
            maxshownum: 3,
            datatype: 'arr',
            data: val.attr('data').split(',')
          });
        });
      }
      this.dom.find('.list-content .switch span').on('click', function (e) {
        e.stopPropagation();
        that.app.model.set('listId', ES.selctorDoc(this).parent().attr('nowId'));
        if (ES.selctorDoc(this).parent().hasClass('on')) {
          ES.selctorDoc(this).parent().removeClass('on');
          ES.selctorDoc(this).parent().addClass('off');
          ES.selctorDoc(this).html(that.onofftype[0] + '&nbsp;<i></i>');
          ES.selctorDoc(this).parent().attr('onoff', '');
          that.event._dispatch('list.onoff', { id: ES.selctorDoc(this).parent().parent().attr('nowId'), dom: ES.selctorDoc(this).parent(), action: 'off' });
        } else {
          ES.selctorDoc(this).parent().addClass('on');
          ES.selctorDoc(this).parent().removeClass('off');
          ES.selctorDoc(this).html('&nbsp;' + that.onofftype[1] + '<i></i>');
          ES.selctorDoc(this).parent().attr('onoff', '');
          that.event._dispatch('list.onoff', { id: ES.selctorDoc(this).parent().parent().attr('nowId'), dom: ES.selctorDoc(this).parent(), action: 'on' });
        }
      });
      this.dom.find('.list-content .listlink').on('click', function () {
        that.event._dispatch('list.listlink', { id: ES.selctorDoc(this).parent().attr('nowId') });
      });
      this.dom.find('.list-content .ul').on('dblclick', function () {
        if (ES.selctorDoc(this).find('.list2').dom) {
          return;
        }
        that.event._dispatch('list.ul', ES.selctorDoc(this).attr('nowId'));
      });
      this.dom.find('.list-content .tableList div').on('click', function (e) {
        e.stopPropagation();
        that.app.model.set('listId', ES.selctorDoc(this).parent().attr('nowId')); //positionid
        that.event._dispatch('list.action', { id: ES.selctorDoc(this).parent().attr('nowId'), position: ES.selctorDoc(this).parent().parent().attr('positionid'), dom: ES.selctorDoc(this).parent().parent(), classname: ES.selctorDoc(this).attr('classname') });
        if (ES.selctorDoc(this).attr('link') !== 'noLink') {
          that.app.changePage(ES.selctorDoc(this).attr('link') + "/" + ES.selctorDoc(this).parent().attr('nowId'));
        } else {}
      });
      this.dom.find('.list-content .tableList .config').on('click', function (e) {
        e.stopPropagation();
        if (ES.selctorDoc(this).parent().find('.actionul').hasClass('hide')) {
          ES.selctorDoc(this).parent().find('.actionul').removeClass('hide');
          that.dom.find('.mask').removeClass('hide');
        } else {
          ES.selctorDoc(this).parent().find('.actionul').addClass('hide');
          that.dom.find('.mask').addClass('hide');
        }
      });
      this.dom.find('.actionul li').on('click', function (e) {
        e.stopPropagation();
        var eventname = 'list.' + ES.selctorDoc(this).attr('class');
        //that.event._dispatch(eventname, {id: ES.selctorDoc(this).parent().parent().attr('nowId'), dom: ES.selctorDoc(this).parent().parent()})
        that.event._dispatch('list.action', { id: ES.selctorDoc(this).parent().parent().attr('nowId'), dom: ES.selctorDoc(this).parent().parent(), classname: ES.selctorDoc(this).attr('class') });
        ES.selctorDoc(this).parent().addClass('hide');
        that.dom.find('.mask').addClass('hide');
      });
      this.dom.find('.list-content .tableList .icon').on('click', function (e) {
        e.stopPropagation();
        that.event._dispatch('list.action', { id: ES.selctorDoc(this).parent().parent().attr('nowId'), dom: ES.selctorDoc(this).parent().parent(), classname: ES.selctorDoc(this).attr('classname') });
      });
      that.dom.find('.mask').on('click', function () {
        that.dom.find('.actionul').addClass('hide');
        that.dom.find('.mask').addClass('hide');
      });
      that.dom.find('.list-content .check-box').on('click', function () {
        if (ES.selctorDoc(this).hasClass('choose')) {
          that.event._dispatch('list.check', { id: ES.selctorDoc(this).parent().parent().attr('nowid'), type: 'del', data: that.data[ES.selctorDoc(this).parent().parent().parent().attr('positionId')] });
          ES.selctorDoc(this).removeClass('choose');
        } else {
          that.event._dispatch('list.check', { id: ES.selctorDoc(this).parent().parent().attr('nowid'), type: 'add', data: that.data[ES.selctorDoc(this).parent().parent().parent().attr('positionId')] });
          ES.selctorDoc(this).addClass('choose');
        }
      });
    }
  }, {
    key: "refreshHeader",
    value: function refreshHeader(value) {
      var that = this;
      var iconH = '';
      for (var i in value) {
        if (value[i].w) {
          if (value[i].first) {
            if (typeof value[i].w != 'string') {
              iconH += '<li style="width:' + value[i].w + 'px;text-align:center"><span style="margin-left:10px">' + value[i].name + '</li>';
            } else {
              iconH += '<li style="width:' + value[i].w * that.finalwidth + ';text-align:center"><span style="margin-left:10px">' + value[i].name + '</li>';
            }
          } else {
            if (typeof value[i].w != 'string') {
              iconH += '<li style="width:' + value[i].w + 'px;text-align:center">' + value[i].name + '</li>';
            } else {
              iconH += '<li style="width:' + value[i].w * that.finalwidth + ';text-align:center">' + value[i].name + '</li>';
            }
          }
        } else {
          iconH += '<li>' + value[i].name + '</li>';
        }
      }
      that.dom.find('.list-header ul').html(iconH);
    }
  }, {
    key: "insertLine",
    value: function insertLine(value) {
      var that = this;
      that.dom.find('.list-content').append(that.insert(that.nowParam, value));
      if (that.type === 'center') {
        that.addButton();
      }
    }
  }, {
    key: "insert",
    value: function insert(value, action) {
      var that = this;
      var con = '<div><ul class="ul">';
      var id = '';
      for (var j in value.icon) {
        var width = '';
        var width1 = '';
        var width2 = '';
        var delIcon = 'style="background-image:url(/images/sassIcon.png);width:23px;height:23px;display:inline-block;cursor:pointer;background-position:-665px -55px;"';
        var editIcon = 'style = "background-image:url(/images/sassIcon.png);width:23px;height:23px;display:inline-block;cursor:pointer;background-position:-631px -55px;margin-right:15px"';
        if (value.icon[j].style) {
          width = value.icon[j].style;
        } else {
          if (typeof value.icon[j].w != 'string') {
            var wid = value.icon[j].p;
            var margin = value.icon[j].a;
            width = 'style="width:' + wid + 'px;margin-left:' + margin + 'px;text-align:center;left:' + that.icon[j].n + 'px"';
            var status = 'style="width:' + wid + 'px;border-radius: 6px;margin-left:' + margin + 'px;text-align:center;left:' + that.icon[j].n + 'px"';
            width1 = 'style="text-align:center;text-overflow: ellipsis;overflow: hidden;white-space: nowrap;width:' + (value.icon[j].w - 20) + 'px;"';
          } else {
            var _wid = value.icon[j].w;
            width = 'style="width:' + parseFloat(that.icon[j].ww) * that.finalwidth / 100 + 'px;text-align:left;padding-left:' + that.icon[j].n + 'px"';
            width1 = 'style="text-align:center"';
          }
        }
        var titles123 = 'dsfsdf';
        switch (value.icon[j].type) {
          case 'text':
            if (value.icon[j].new != false) {
              con += "<li  class='list0'" + width + " ><input class='newinput' type='text'/></li>";
            } else {
              con += "<li  class='list0'" + width + " ><p class='overhide' title='' width1=" + parseFloat(that.icon[j].ww) * that.finalwidth / 100 + "px></p></li>";
            }
            break;
          case 'link':
            con += "<li  class='listlink'" + width + " ><p class='overhide' title='' width1=\"+parseFloat(that.icon[j].ww)*that.finalwidth/100+\"px></p></li>";
            break;
          case 'updown':
            //console.log('lllkkkkjdskkds', that.data[i][j])
            if (that.data[i][j] == null || that.data[i][j] == 0) {
              con += "<li " + width + ">--</li>";
            } else if (that.data[i][j] * 1 > 0) {
              con += "<li " + width + "><span><i class='updown23'></i>" + that.data[i][j] + "%</span></li>";
            } else if (that.data[i][j] * 1 < 0) {
              con += "<li " + width + "><span><i class='updown1'></i>" + that.data[i][j].replace('-', '') + "%</span></li>";
            }
            break;
          case 'onoff':
            var styr = that.data[i][j] == 1 ? 'check' : '';
            if (that.type != undefined) {
              con += "<li class='click-enable choose_onoff' " + width + " nowId='" + that.data[i].id + "'><span style='position: absolute;top: 35px;'><label class='tgl-btn " + styr + "' for='cb1-1-0'></label></span></li>";
            } else {
              con += "<li class='click-enable choose_onoff' " + width + " nowId='" + that.data[i].id + "'><span style='position: absolute;top: 25px;'><label class='tgl-btn " + styr + "' for='cb1-1-0'></label></span></li>";
            }
            break;
          case 'choose':
            var width2 = 'style="text-overflow: ellipsis;overflow: hidden;white-space:nowrap;margin-left:5px;width:' + that.icon[j].w + 'px;"';
            if (that.choose == 'one') {
              con += "<li class='click-enable choose_id' " + width2 + " title = '" + that.data[i][j] + "' nowId='" + that.data[i].id + "'>" + that.data[i][j] + "</li>";
            } else {
              con += "<li class='click-enable choose_id' " + width2 + " title = '" + that.data[i][j] + "' nowId='" + that.data[i].id + "'>" + that.data[i][j] + "</li>";
            }
            break;
          case 'img':
            con += "<li " + width + "><img src='" + that.data[i][j] + "' style='width: 40px;height: 40px;margin-top: 15px;'></li>";
            break;
          case 'action':
            var tempH = '<li class="tableList" ' + width + 'nowId="">';
            for (var w in action) {
              var title1 = w;
              if (w == "config") {
                tempH += '<a class="iconfont icon-caozuo" style="display:' + action[w].dis + '" title="" link="' + action[w].link + '">' + title1 + '</a>';
              } else {
                var titles;
                if (action[w].content) {
                  titles = action[w].content;
                } else {
                  titles = title1;
                }
                tempH += '<div class="content ' + w + '" style="display:' + action[w].dis + '" title="' + titles + '"link="' + action[w].link + '">' + titles + '</div>';
              }
            }
            tempH += '</li>';
            con += tempH;
            break;
        }
      }
      con += '</ul></div>';
      return con;
    }
  }, {
    key: "showloading",
    value: function showloading(value) {
      var that = this;
      that.dom.find('.load').removeClass('hide');
    }
  }, {
    key: "resize",
    value: function resize(value) {
      var that = this;
      if (that.dom.find('.overhide').dom) {
        that.dom.find('.overhide').dom.forEach(function (val, idx) {
          var bili = ES.selctorDoc(val).dom.attr('width1');
          ES.selctorDoc(val).dom.css({ 'max-width': bili + 'px' });
        });
      }
    }
  }]);

  return list;
}(Interstellar.moduleBase);

//原型链一定要有的


module.exports = list;

/***/ }),

/***/ 752:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(753);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./list.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./list.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 753:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".list1 {\n  display: inline-block;\n  width: auto;\n  border-left: 0px solid #e1e4e8;\n  border-right: 0px solid #e1e4e8;\n  min-height: 200px;\n}\n.list1 .list-header {\n  display: inline-block;\n  width: auto;\n  height: 50px;\n  line-height: 50px;\n}\n.list1 .list-header ul {\n  width: auto;\n  overflow: hidden;\n  white-space: nowrap;\n  font-size: 14px;\n  height: 50px;\n  line-height: 50px;\n  color: #17335a;\n  border-bottom: 1px solid #FAFAFA;\n}\n.list1 .list-header ul li {\n  display: inline-block;\n  position: relative;\n  text-align: center;\n}\n.list1 .list-header ul li .check-box {\n  width: 12px;\n  border: 1px solid #E8E8E8;\n  font-size: 12px;\n  height: 12px;\n  position: relative;\n  background: #fff;\n  border-radius: 3px;\n  top: 3px;\n}\n.list1 .list-header ul li .check-box.choose:before {\n  content: '\\2714';\n  font-size: 12px;\n  line-height: 10px;\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  color: #528fcc;\n}\n.list1 .list-header ul li:first-child {\n  text-align: left;\n}\n.list1 .list-header ul span {\n  font-family: \"Microsoft YaHei\";\n  color: #333;\n}\n.list1 .list-header .arrowimg1,\n.list1 .list-header .arrowimg2,\n.list1 .list-header .arrowimg3,\n.list1 .list-header .arrowimg4 {\n  background: url(/images/page/dropdownblack.png);\n  height: 7px;\n  width: 12px;\n  display: inline-block;\n  font-size: 8px;\n  margin: 0 6px;\n  color: #448E97;\n  margin-bottom: 2px;\n  /* margin-top: 24px; */\n}\n.list1 .list-header .arrowimg1.select,\n.list1 .list-header .arrowimg2.select,\n.list1 .list-header .arrowimg3.select,\n.list1 .list-header .arrowimg4.select {\n  background: url(/images/page/dropdowngreen.png);\n}\n.list1 .list-header .arrow_reverse {\n  transform: rotate(180deg);\n}\n.list1 .list-header .arrowimg1 {\n  left: 97px;\n}\n.list1 .list-header .arrowimg2 {\n  left: 117px;\n}\n.list1 .list-header .arrowimg3 {\n  left: 138px;\n}\n.list1 .list-header .arrowimg4 {\n  left: 221px;\n}\n.list1 .button1 {\n  display: inline-block;\n  width: 104px;\n  height: 26px;\n  line-height: 26px;\n  background: #3F82C5;\n  color: #fff;\n  border-radius: 3px;\n  text-align: center;\n  margin-left: 1000px;\n  margin-top: -19px;\n  margin-bottom: 30px;\n  margin-right: 30px;\n  cursor: pointer;\n  float: left;\n}\n.list1 .list-content {\n  margin-bottom: 20px;\n}\n.list1 .list-content .tableList .content {\n  margin: 0 4px;\n  color: #448E97;\n  cursor: pointer;\n}\n.list1 .list-content > div {\n  height: 41px;\n}\n.list1 .list-content > div > ul {\n  width: auto;\n  overflow: hidden;\n  white-space: nowrap;\n  font-size: 12px;\n  height: 40px;\n  line-height: 40px;\n  background: #fff;\n  border-bottom: 1px solid #FAFAFA;\n  color: #333;\n}\n.list1 .list-content > div > ul .list {\n  border-color: white;\n}\n.list1 .list-content > div > ul > li {\n  height: 40px;\n  line-height: 40px;\n  position: relative;\n  vertical-align: middle;\n  text-align: center;\n  font-family: MicrosoftYaHei;\n  font-size: 14px;\n  letter-spacing: 0;\n  display: inline-block;\n}\n.list1 .list-content > div > ul > li .check-box {\n  width: 12px;\n  border: 1px solid #d9e2e9;\n  font-size: 12px;\n  height: 12px;\n  position: relative;\n  background: #fff;\n  border-radius: 3px;\n  top: 3px;\n}\n.list1 .list-content > div > ul > li .check-box.choose:before {\n  content: '\\2714';\n  font-size: 12px;\n  line-height: 10px;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  color: #528fcc;\n}\n.list1 .list-content > div > ul .list1 span {\n  cursor: pointer;\n  color: #448E97;\n  font-size: 14px;\n}\n.list1 .list-content > div > ul .off span {\n  background: #ccc;\n  border-radius: 40px;\n  width: 50px;\n  height: 25px;\n  line-height: 25px;\n  color: #fff;\n  position: relative;\n  text-align: right;\n  padding: 0 5px 0 5px;\n  cursor: pointer;\n  margin-top: 5px;\n}\n.list1 .list-content > div > ul .off span i {\n  width: 21px;\n  height: 21px;\n  border-radius: 23px;\n  display: inline-block;\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  background: #fff;\n}\n.list1 .list-content > div > ul .on span {\n  background: #448E97;\n  border-radius: 40px;\n  width: 50px;\n  height: 25px;\n  line-height: 25px;\n  color: #fff;\n  position: relative;\n  text-align: left;\n  padding: 0 5px 0 5px;\n  margin-top: 5px;\n  cursor: pointer;\n}\n.list1 .list-content > div > ul .on span i {\n  width: 21px;\n  height: 21px;\n  border-radius: 23px;\n  display: inline-block;\n  position: absolute;\n  right: 2px;\n  top: 2px;\n  background: #fff;\n}\n.list1 .list-content > div .tableList {\n  border: 0;\n  text-align: center;\n}\n.list1 .list-content > div .tableList .iconfont {\n  margin: 0 5px;\n}\n.list1 .list-content > div .dwdiv {\n  position: unset;\n}\n.list1 .list-content > div .actionul {\n  position: absolute;\n  z-index: 1000;\n  left: -32px;\n  top: 19px;\n  line-height: unset;\n  height: unset;\n  border-radius: 4px;\n  border: 1px solid #e8e8e8;\n  background: #fff;\n  width: 80px;\n  text-align: center;\n}\n.list1 .list-content > div .actionul li {\n  display: block;\n  position: unset;\n  line-height: 30px;\n  height: 30px;\n  border-bottom: 1px solid #e8e8e8;\n}\n.list1 .list-content > div .actionul li:hover {\n  background: #e8e8e8;\n  cursor: pointer;\n}\n.list1 .list-content > div .listlink {\n  color: #4c9fa9;\n  text-decoration: underline;\n  cursor: pointer;\n}\n.list1 .list-content > div:last-child .actionul,\n.list1 .list-content > div:nth-last-child(2) .actionul,\n.list1 .list-content > div:nth-last-child(3) .actionul {\n  top: 0;\n  transform: translate(0, -100%);\n}\n.list1 .list-content > div:first-child .actionul,\n.list1 .list-content > div:nth-child(2) .actionul {\n  top: 0;\n  transform: unset;\n}\n.list1 .list-content > div:nth-child(2n+1) ul {\n  background: #FAFAFA;\n}\n.list1 .list-content > div:nth-child(2n+1) ul .tableList {\n  background: #FAFAFA;\n}\n.list1 .list-content .newinput {\n  height: 30px;\n  line-height: 30px;\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  width: 98%;\n}\n.list1 .updown23 {\n  display: inline-block;\n  background: url(/images/iconDmp.png) -347px -15px;\n  width: 20px;\n  height: 20px;\n  top: 10px;\n}\n.list1 .updown1 {\n  display: inline-block;\n  background: url(/images/iconDmp.png) -347px -39px;\n  width: 20px;\n  height: 20px;\n}\n.list1 .over_css {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: block;\n  text-align: center;\n}\n.list1 .down {\n  width: 23px;\n  height: 23px;\n  display: inline-block;\n  background: url(/images/sassIcon.png);\n  background-position: -631px -106px;\n}\n.list1 .down:hover {\n  background-position: -631px -129px;\n}\n.list1 .content {\n  font-size: 12px !important;\n}\n.list1 .starGray,\n.list1 .star {\n  width: 155px;\n  height: 23px;\n  margin: 10px 15%;\n  background-image: url(/images/icon.png);\n  background-position: 0px -166px;\n}\n.list1 .star {\n  background-position: 0px -138px;\n  position: absolute;\n  left: 0px;\n  top: 1px;\n}\n.list1 .starS {\n  width: 100px;\n  height: 14px;\n  margin: 5px 0px;\n  background-image: url(/images/icon.png);\n  background-position: 0px -192px;\n}\n.list1 .starTip {\n  padding: 10px;\n  position: absolute;\n  left: 0px;\n  top: -118px;\n  background: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  border-radius: 8px;\n}\n.list1 .tipTitle {\n  display: block;\n  width: 100%;\n  text-align: center;\n}\n.list1 .starGroup {\n  position: relative;\n  height: 26px;\n  display: flex;\n  flex-flow: row nowrap;\n}\n.list1 .tipspan {\n  display: inline-block;\n  width: 100px;\n  height: 26px;\n  line-height: 26px;\n  text-align: left;\n}\n.list1 .list0_after {\n  margin-left: 33px;\n  border: 1px solid gainsboro;\n  display: table;\n}\n.list1 .test {\n  border: 1px solid gainsboro;\n  width: 200px;\n  border-radius: 5px;\n}\n.list1 .test input:focus {\n  border-style: solid;\n  border-color: #03a9f4;\n  box-shadow: 0 0 15px #03a9f4;\n}\n.list1 .list0 {\n  text-overflow: ellipsis;\n  overflow-x: hidden;\n  white-space: nowrap;\n}\n.list1 .overhide {\n  text-overflow: ellipsis;\n  overflow-x: hidden;\n}\n.list1 .load .content {\n  width: 100px;\n  color: #FFF;\n  border-radius: 10px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -50px;\n  margin-top: -50px;\n  height: 100px;\n}\n.list1 .load .content .pic {\n  background: url(/images/loading1.gif);\n  height: 100%;\n  width: 100%;\n}\n.list1 .mask {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  z-index: 10;\n}\n", ""]);

// exports


/***/ }),

/***/ 754:
/***/ (function(module, exports) {

module.exports = "<div class=list1> <div class=list-header> <ul></ul> </div> <div class=list-content> </div> <div class=\"dataNone hide\">未查询到对应数据，请更改查询条件重新查询！</div> <div class=\"load hide\"> <div class=content> <div class=pic> </div> </div> </div> <div class=\"mask hide\"></div> </div> ";

/***/ })

});
//# sourceMappingURL=c81682750ef5dc537c8c.56.min.js.map