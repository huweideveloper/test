webpackJsonp([49],{

/***/ 175:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//这边基本上引入需要使用的资源less，api，需要使用的模块等等。

var newtaskdetail = function (_Interstellar$pagesBa) {
  _inherits(newtaskdetail, _Interstellar$pagesBa);

  function newtaskdetail() {
    _classCallCheck(this, newtaskdetail);

    return _possibleConstructorReturn(this, (newtaskdetail.__proto__ || Object.getPrototypeOf(newtaskdetail)).apply(this, arguments));
  }

  _createClass(newtaskdetail, [{
    key: 'complete',
    value: function complete() {
      var _this2 = this;

      ES.selctorDoc('head title').html(this.app.languageMode.getTranslate(this.app.language, 'index', 'mine'));
      this.app.header.showcrube();
      this.dom.find('.join').on('click', function () {
        _this2.addTaskToDoctor();
      });
      this.dom.find('.back').on('click', function () {
        _this2.app.changePage('alltasklist');
      });
      this.resize();
      this.styleModel(1);
      this.type = 'doctor';
      this.initscroll();
      this.loadDataTask();
    }

    //添加任务

  }, {
    key: 'addTaskToDoctor',
    value: function addTaskToDoctor() {
      var _this3 = this;

      this.app.alert.show({
        title: ' ',
        msg: '确认加入该任务？加入任务后，只有提交任务后才能接取新任务',
        close: true,
        sure: function sure() {
          _this3.todoApi();
        }
      });
    }
  }, {
    key: 'todoApi',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var useinfo, value, json;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                useinfo = JSON.parse(this.app.local.get('all'));

                this.app.loading.show();
                _context.next = 4;
                return this.api.task_join({ taskId: this.app.parpam['taskId'], userId: useinfo.userId });

              case 4:
                value = _context.sent;

                this.app.loading.hide();

                if (!(value.code == 0)) {
                  _context.next = 29;
                  break;
                }

                if (!(this.projectInfo.data.seriesImgFileType == 3)) {
                  _context.next = 11;
                  break;
                }

                json = {
                  taskId: this.app.parpam['taskId'] * 1,
                  userId: JSON.parse(this.app.local.get('all')).userId,
                  accessToken: this.app.local.get('accessToken'),
                  serviceHost: window.location.origin,
                  type: 1
                };

                window.open('annotation://' + Base64.encoder(JSON.stringify(json)));
                return _context.abrupt('return');

              case 11:
                if (!(this.tasktype == 1 || this.tasktype == 3)) {
                  _context.next = 22;
                  break;
                }

                if (!this.algPreAnnotation) {
                  _context.next = 16;
                  break;
                }

                this.app.changePage('taskdetail', {
                  taskId: this.app.parpam['taskId'],
                  projectId: this.projectId,
                  type: "editor"
                });
                _context.next = 20;
                break;

              case 16:
                if (!this.projectInfo.data.largeFigure) {
                  _context.next = 19;
                  break;
                }

                this.app.changePage('drapCanvas', { taskId: this.app.parpam['taskId'], projectId: this.projectId, type: "editor" });
                return _context.abrupt('return');

              case 19:
                this.app.changePage('mark', { taskId: this.app.parpam['taskId'], projectId: this.projectId, type: "editor" });

              case 20:
                _context.next = 27;
                break;

              case 22:
                if (!this.projectInfo.data.largeFigure) {
                  _context.next = 25;
                  break;
                }

                window.location.href = 'http://' + window.location.host + '/#!/drapCanvasAudEdit/' + this.app.parpam['taskId'] + '/' + this.projectId + '/check';
                return _context.abrupt('return');

              case 25:
                window.location.href = 'http://' + window.location.host + '/#!/markaudit/' + this.app.parpam['taskId'] + '/' + this.projectId + '/check';
                window.location.reload();

              case 27:
                _context.next = 30;
                break;

              case 29:
                this.app.alert.show({
                  title: '提示',
                  msg: value.msg,
                  close: true
                });

              case 30:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function todoApi() {
        return _ref.apply(this, arguments);
      }

      return todoApi;
    }()

    //加载当前任务数据

  }, {
    key: 'loadDataTask',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var value;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.app.loading.show();
                _context2.next = 3;
                return this.api.task_user_read({
                  taskId: this.app.parpam['taskId'],
                  userId: JSON.parse(this.app.local.get('all')).userId
                });

              case 3:
                value = _context2.sent;

                this.app.loading.hide();
                this.algPreAnnotation = value.data.algPreAnnotation;
                if (value.data.type == 2) {
                  value.data.algPreAnnotation = "审核任务";
                } else {
                  value.data.algPreAnnotation = value.data.algPreAnnotation ? '算法标注' : '人工标注';
                }
                this.tasktype = value.data.type;
                this.projectId = value.data.projectId;
                this.setData(value.data);

              case 10:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function loadDataTask() {
        return _ref2.apply(this, arguments);
      }

      return loadDataTask;
    }()

    //根据接口赋值

  }, {
    key: 'setData',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(value) {
        var _this4 = this;

        var res, textarea, temparr;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.dom.find('.infoarea label[data=name]').html(value.name); //任务名称
                if (value.costVisible) {
                  this.dom.find('.cost').removeClass('hide'); //标注单价
                  this.dom.find('.infoarea label[data=cost]').html(value.cost); //标注单价
                }
                this.dom.find('.infoarea label[data=algPreAnnotation]').html(value.studyAnno ? value.algPreAnnotation + '（以检查号为维度）' : value.algPreAnnotation); //任务类型
                this.dom.find('.infoarea label[data=startTime]').html(Tool.time(value.startTime, 'yyyy-mm-dd')); //开始时间
                this.dom.find('.infoarea label[data=seriesTotalNum]').html(value.seriesTotalNum); //标注数量
                this.dom.find('.infoarea label[data=endTime]').html(Tool.time(value.endTime, 'yyyy-mm-dd')); //结束时间
                this.dom.find('.infoarea label[data=remark]').html(value.remark ? JSON.parse('"' + value.remark + '"') : ''); //任务备注

                this.projectId = value.projectId;
                //项目的信息填写
                this.app.loading.show();
                _context3.next = 11;
                return this.api.project_basic_read({ id: value.projectId });

              case 11:
                res = _context3.sent;

                this.projectInfo = res;
                this.app.loading.hide();
                this.dom.find('label[data="pname"]').html(res.data.name); //所属项目,项目名称
                this.dom.find('.proinfo .pmark').val(JSON.parse('"' + res.data.remark + '"')); //项目描述

                textarea = document.getElementById('remarkarea');

                textarea.style.height = textarea.scrollHeight + 'px';
                // this.dom.find('.proinfo .pmark').parent().css({'height':textarea.scrollHeight})
                this.dom.find('.infoarea label[data=modality]').html(res.data.modality); //样本类型
                if (this.api.data.remarkFileUrl) {
                  temparr = JSON.parse(this.api.data.remarkFileUrl);

                  temparr.forEach(function (val, idx) {
                    this.dom.find('.imgcontrol').append('<li imgurl="' + val + '" class="controls"></li>');
                  });
                }
                this.dom.find('.controls').on('click', function () {
                  var url = ES.selctorDoc(_this4).attr('imgurl');
                  var temp = url.lastIndexOf('.');
                  var imgtype = ',jpg,png,gif,WMF,webp,';
                  var videotype = ',ogg,mp4,swf,';

                  if (imgtype.lastIndexOf(url.substring(temp + 1)) !== -1) {
                    var aa = new Image();
                    aa.onload = function () {
                      _this4.dom.find('.fujianarea').html(_this4.outerHTML);
                      _this4.initscrollmenu();
                    };
                    aa.src = url;
                  } else if (videotype.lastIndexOf(url.substring(temp + 1)) !== -1) {
                    var html = '<video width="600" height="350" controls>\n' + '    <source src="' + url + '" type="video/mp4">\n' + '    <source src="' + url + '" type="video/ogg">\n' + '    您的浏览器不支持 video 标签。\n' + '</video>';
                    _this4.dom.find('.fujianarea').html(html);
                    _this4.initscrollmenu();
                  }
                });
                this.dom.find('.controls').eq(0).click();
                setTimeout(function () {
                  _this4.resize();
                }, 1000);

              case 23:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function setData(_x) {
        return _ref3.apply(this, arguments);
      }

      return setData;
    }()
  }, {
    key: 'initscroll',
    value: function initscroll() {
      if (this.myScroll) {
        this.myScroll.refresh();
        return;
      }
      var rid = 'aaa_' + Math.floor(new Date().getTime() * Math.random());
      this.dom.find('.newtaskdetail .left .infoscorll').attr('id', rid);
      this.myScroll = new IScroll('#' + rid, {
        scrollbars: true,
        mouseWheel: true,
        interactiveScrollbars: true,
        hideScrollbar: false,
        vScrollbar: true,
        shrinkScrollbars: 'scale',
        fadeScrollbars: false,
        disableMouse: true,
        disablePointer: true
      });
    }
  }, {
    key: 'dicomresize',
    value: function dicomresize() {
      var ch = ES.selctorDoc(window).box().clientHeight;
      //ES.selctorDoc('.left').css({ 'height': ch - 70 });
      ES.selctorDoc('.infoscorll').css({ 'height': ch - 150 });
      this.initscroll();
    }
  }, {
    key: 'resize',
    value: function resize() {
      this.dicomresize();
    }
  }]);

  return newtaskdetail;
}(Interstellar.pagesBase);

module.exports = newtaskdetail;

/***/ }),

/***/ 527:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(909);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(471)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./newtaskdetail.less", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./newtaskdetail.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 528:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlDict = {
  task_user_read: '/task/user/read',
  project_basic_read: '/project/basic/read',
  task_join: '/user/task/join'
};
var api = {
  task_user_read: function task_user_read(value) {
    return this.HttpRequest.POST(urlDict.task_user_read, value);
  },
  project_basic_read: function project_basic_read(value) {
    return this.HttpRequest.POST(urlDict.project_basic_read, value);
  },
  task_join: function task_join(value) {
    return this.HttpRequest.POST(urlDict.task_join, value);
  }
};
module.exports = api;

/***/ }),

/***/ 529:
/***/ (function(module, exports) {

module.exports = "<div class=newtaskdetail> <div class=left> <span class=title>新任务</span> <div class=breadcrumb> <span class=back>任务市场></span> <span>任务详情</span> </div> <div class=infoscorll> <div> <div class=basicinfo> <p class=tasktitle>任务基本信息</p> <div class=infoarea> <p> <span>任务名称：<label data=name></label></span> <span class=\"cost hide\">标注单价：<label data=cost></label></span> </p> <p> <span>任务类型：<label data=algPreAnnotation></label></span> <span>所属项目：<label data=pname></label></span> </p> <p> <span>开始时间：<label data=startTime></label></span> <span>结束时间：<label data=endTime></label></span> </p> <p> <span>样本类型：<label data=modality></label></span> <span>样本总量：<label data=seriesTotalNum></label></span> </p> <p><span>任务备注：<label data=remark></label></span></p> </div> </div> <div class=project> <p class=protitle>项目详情</p> <div class=proinfo> <div> <p> <span>项目名称：<label data=pname></label></span> </p> <p> <span>项目描述：</span><textarea id=remarkarea class=pmark disabled=disabled></textarea> </p> <div> <span>附件信息：</span> <div class=fujianarea></div> </div> </div> </div> </div> <div style=height:20px></div> </div> </div> </div> <div class=right> <a class=join>确认加入</a> </div> </div>";

/***/ }),

/***/ 909:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(470)(false);
// imports


// module
exports.push([module.i, ".newtaskdetail {\n  margin: 20px 40px;\n}\n.newtaskdetail .left {\n  width: 80%;\n  float: left;\n  position: relative;\n  border-right: 1px solid #e8e8e8;\n}\n.newtaskdetail .left .infoscorll {\n  position: relative;\n  overflow: hidden;\n}\n.newtaskdetail .left .title {\n  font-size: 22px;\n  font-weight: bold;\n  border-bottom: 1px solid #6f6e6e;\n}\n.newtaskdetail .left .breadcrumb {\n  font-size: 16px;\n  margin: 15px 0;\n}\n.newtaskdetail .left .breadcrumb .back {\n  color: #bfbbbb;\n  cursor: pointer;\n}\n.newtaskdetail .left .basicinfo {\n  width: 90%;\n  font-size: 14px;\n}\n.newtaskdetail .left .basicinfo .tasktitle {\n  font-size: 16px;\n  margin-bottom: 15px;\n}\n.newtaskdetail .left .infoarea {\n  background: #fff;\n  padding: 10px 30px;\n}\n.newtaskdetail .left .infoarea > p {\n  height: 40px;\n  line-height: 40px;\n}\n.newtaskdetail .left .infoarea > p span {\n  width: 45%;\n}\n.newtaskdetail .left .infoarea > p:last-child {\n  height: unset;\n}\n.newtaskdetail .left .infoarea > p:last-child span {\n  width: unset;\n}\n.newtaskdetail .left .infoarea .fujian {\n  height: 80px;\n  line-height: 80px;\n}\n.newtaskdetail .left .project {\n  width: 90%;\n  font-size: 14px;\n  margin-bottom: 20px;\n  margin-top: 10px;\n}\n.newtaskdetail .left .project .protitle {\n  font-size: 16px;\n  margin-bottom: 15px;\n}\n.newtaskdetail .left .project .proinfo {\n  padding: 10px 20px;\n  background: #fff;\n  position: relative;\n  overflow: hidden;\n}\n.newtaskdetail .left .project .proinfo p {\n  line-height: 40px;\n}\n.newtaskdetail .left .project .proinfo .pmark {\n  border: none;\n  resize: none;\n  vertical-align: text-top;\n  width: 80%;\n  background: #fff;\n}\n.newtaskdetail .right {\n  width: 15%;\n  float: right;\n  font-size: 18px;\n  font-weight: bold;\n  margin: 20px;\n}\n.newtaskdetail .right a {\n  width: 160px;\n  height: 40px;\n  line-height: 40px;\n  background: #4c9fa9;\n  color: #fff;\n  border-radius: 5px;\n  padding: 10px 20px;\n}\n", ""]);

// exports


/***/ })

});
//# sourceMappingURL=71c85b390895b45578cf.49.min.js.map